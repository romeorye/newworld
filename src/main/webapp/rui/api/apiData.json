[
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Rui는 global namespace object 이다..\n 만약 Rui가 이미 정의되어 있으면, 기존의 Rui object는 정의된 namespace들이 보존되도록\n overwrite 않을 것이다.",
   "name": "Rui",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Rui는 global namespace object 이다..\n 만약 Rui가 이미 정의되어 있으면, 기존의 Rui object는 정의된 namespace들이 보존되도록\n overwrite 않을 것이다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Ajax로 서버에 데이터를 요청한다.",
    "name": "ajax",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "config : url(String), method(String/optional), success(Function), failure(Function/optional), params(Object/optional), sync(Boolean/optional)",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnDescription": "connection object를 반환.",
    "returnType": "object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "conifg의 property둘이 이미 존재하지 않는다면, 모든 property를 obj에 복사한다.",
    "name": "applyIf",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "property들의 receiver",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "property들의 source",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "반환될 obj",
    "returnType": "Object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "만약 receiver가 property들을 아직 가지고 있지 않다면,\n receiver에의 supplier에서 모든 propery들에 적용을 한다.\n 부가적으로 하나 혹은 그 이상의 method/property들이 명시될 수 있다(추가적인\n parameter들로서). 이러한 option은 receiver가 이미 가지고 있는 property를\n overwrite할 것이다. 만약 세번째 parameter에 true가 전송되면,\n 모든 property는 receiver에서 overwrite되고 적용될 것이다.",
    "name": "applyObject",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "argument를 받을 object",
      "isFinal": false,
      "name": "r",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "argument로 propery들을 제공할 object",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "prototype property만 적용하는 것을 제외하고 Rui.apply와 동일하다.",
    "name": "applyPrototype",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "argument를 받을 object",
      "isFinal": false,
      "name": "r",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "argument로 propery들을 제공할 object",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "receiver에 전달될 0 혹은 그 이상의 property method들.\n        아무것도 명시되지 않을 경우 supplier의 모든 것들은 receiver에\n        존재하는 property가 overwrite되지 않는다면 사용될 것이다.\n        만약 세번째 parameter로 true가 명시되면, 모든 property들은\n        receiver에 존재하는 property를 overwrite하고 적용될 것이다.",
      "isFinal": false,
      "name": "arguments",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|boolean"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "html 해당되는 객체를 생성한후 LElementList로 리턴한다.",
    "name": "createElements",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "생성할 html",
      "isFinal": false,
      "name": "html",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 추가 설정",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnType": "Rui.LElementList",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "개발자 가이드를 위한 추가 정보를 출력한다. rui_config.js의 환경 설정에서 개발자 모드일 경우에만 수행된다.",
    "name": "devGuide",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "scope 객체",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "수행할 메소드 명",
      "isFinal": false,
      "name": "methodName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "파라미터 객체",
      "isFinal": false,
      "name": "params",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object나 array를 표현하는 간단한 문자열을 리턴한다.",
    "name": "dump",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dump 할 object",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "child object를 탐색할 깊이(deep), 기본적으로 3",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "dump 결과",
    "returnType": "String",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 정보에 해당되는 객체를 Function으로 호출하는 메소드",
    "name": "each",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "빈 function",
    "name": "emptyFn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "constructor들과 method들을 연결할 수 있는 상속 전략을 지원하는\n prototype, constructor, superclass property들을 설정하는 유틸리티.\n Static member들은 상속되지 않는다.",
    "name": "extend",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "변경할 object",
      "isFinal": false,
      "name": "subc",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "상속할 object",
      "isFinal": false,
      "name": "superc",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "subclass prototype으로 추가할 추가적인 property와 method들.\n                            이것들은 superclass가 존재한다면, 포함된 일치 항목들을\n                            override 할 것이다.",
      "isFinal": false,
      "name": "overrides",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Rui.LElement object들을 조회하기 위한 Static method.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "DOM node나 존재하고 있는 Element의 id.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Mixed"
    }],
    "returnDescription": "object나 맞는 element를 찾지 못했으면 null",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 document body를 리턴한다.",
    "name": "getBody",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LConfiguration 객체를 리턴한다.",
    "name": "getConfig",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 신규 객체 여부",
     "isFinal": false,
     "name": "isNew",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "Rui.config.LConfiguration",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 HTML document object를 리턴한다.",
    "name": "getDoc",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom 객체를 리턴한다.",
    "name": "getDom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LMessageManager 객체를 리턴한다.",
    "name": "getMessageManager",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "[optional] 신규 객체 여부",
      "isFinal": false,
      "name": "isNew",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "Rui.message.LMessageManager",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "rui_config.js에 정의되어 있는 contextPath와 ruiRootPath값의 조합하여 Rich UI의 root 위치를 리턴한다. rui_config.js파일이 초기화되지 않으면 사용할 수 없다.",
    "name": "getRootPath",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object instance에 property이 존재하는지 여부를 리턴한다.",
    "name": "hasOwnProperty",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "테스트될 object",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "테스트할 property의 이름",
      "isFinal": false,
      "name": "prop",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnDescription": "결과",
    "returnType": "boolean",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "유일한 id들을 생성한다. 만약 element가 이미 id를 가지고 있으면, 그것은 변하지 않는다.",
    "name": "id",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "(optional) id가 생성될 element",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Mixed"
     },
     {
      "deprecated": false,
      "description": "(optional) Id prefix (기본 'ext-gen')",
      "isFinal": false,
      "name": "prefix",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "생성된 Id.",
    "returnType": "String",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "css파일을 동적으로 로딩한다. (async로 처리되므로 같은 style에 대해서 우선 순위가 바뀔 수 있으므로 체크해야 함)\n &amp;lt;pre&amp;gt;\n Rui.includeCSS('/rui/resources/css/rui_logger.css');\n &amp;lt;/pre&amp;gt;",
    "name": "includeCss",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "js파일을 동적으로 로딩한다.\n &amp;lt;pre&amp;gt;\n Rui.includeJs('/rui/js/locale/lang-en.js');\n &amp;lt;/pre&amp;gt;",
    "name": "includeJs",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 array 형인지에 검사한다.\n Array prototype을 대상으로 테스트하기 위한 다른 프레임으로의\n reference가 없다면, Safari에서 프레임 boundary를 넘어 array들의\n typeof/instanceof/constructor 테스트는 불가능하다.\n 이러한 케이스를 처리하기 위해, 대신 잘 알려진 array property들을 테스트 한다.",
    "name": "isArray",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 boolean (true or false) 형인지 검사한다.",
    "name": "isBoolean",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 date형인지 검사한다.",
    "name": "isDate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 빈 값인지 검사한다.\n undefined, null, '' 등은 모두 빈 값이다.",
    "name": "isEmpty",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 문자(열)",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 함수인지 검사한다.",
    "name": "isFunction",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 null인지 검사한다.",
    "name": "isNull",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "결과",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 number형인지 검사한다.",
    "name": "isNumber",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object 타입이거나 함수인지 검사한다.",
    "name": "isObject",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 문자열인지 검사한다.",
    "name": "isString",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 undefined인지 검사한다.",
    "name": "isUndefined",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "적합한 non-null값을 찾기 위한 유틸리티 method.\n null/undefined/NaN에 대해서는 false, 0/false/''을 포함한 다른 값에 대해서는\n true를 반환한다.",
    "name": "isValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "테스트할 항목",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "any"
    }],
    "returnDescription": "null/undefined/NaN이 아니라면 true",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "millisecond 이후에 제공된 obecjt의 컨텍스트에서 제공된 함수를 실행한다.\n periodic을 true로 설정하지 않는다면, 함수를 한번만 실행한다.",
    "name": "later",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "실행될 때까지 기다릴 millisecond 숫자",
      "isFinal": false,
      "name": "fn이",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "컨텍스트 object",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "실행할 'o' object에서 실행할 함수나 method의 이름",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function|String"
     },
     {
      "deprecated": false,
      "description": "함수에 제공될 데이터.\n 이것은 하나의 항목이나 array를 받아들인다.\n array가 제공되는 경우 함수는 각 array 항목에 대해 하나의 paprameter를 가지고 실행된다.\n 하나의 array parameter를 전달할 필요가 있는 경우, 이것은 array [myarray]에서\n wrapping 되어야 할 필요가 있을 것이다.",
      "isFinal": false,
      "name": "data",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "true인 경우 취소될 때까지 제공된 interval에서\n 주기적으로 실행된다.",
      "isFinal": false,
      "name": "periodic",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "timer object. timer를 멈추기 위하여 해당 object에서 cancel() method를 호출한다.",
    "returnType": "object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "콘솔에 로그를 출력한다. (상황에 따라 브라우저 콘솔이나 RichUI 콘솔로 출력된다.)",
    "name": "log",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "log 할 message",
      "isFinal": false,
      "name": "msg",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "message에 대한 log 분류.\n                        기본 분류는 'info', 'warn', 'error', 'time'이다.\n                        custom 분류들은 잘 사용될 수 있다.(optional)",
      "isFinal": false,
      "name": "cat",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "message의 source(optional)",
      "isFinal": false,
      "name": "src",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "만약 log 작업이 성공했을 경우 True.",
    "returnType": "boolean",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 제공된 object들의 모든 property들을 포함하는 새로운 object를 리턴한다.\n 더 이후의 object들로부터의 property들은\n 더 이전의 object들의 property들을 overwrite한다.",
    "name": "merge",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "병합할 object들",
     "isFinal": false,
     "name": "arguments",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "새로 병합된 object",
    "returnType": "object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "namespace를 지정하고 만약 존재하지 않는 경우 생성하고 리턴한다.",
    "name": "namespace",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "생성할 1-n namespace들의 argument들",
     "isFinal": false,
     "name": "i",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "j 생성된 마지막 namespace object의 reference",
    "returnType": "Object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "onAvaliable과 같은 방식으로 실행되지만, 추가적으로\n 사용가능한 element의 content를 수정하기 위한 안전 여부를 결정하기 위하여,\n sibling element들의 상태를 체크한다.",
    "name": "onContentReady",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "찾을 element의 id.",
      "isFinal": false,
      "name": "p_id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "element가 준비되었을때 실행할 함수.",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "p_fn에 대한 parameter로 다시 전달하는 부가적인 object",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "만약 true로 설정하면, p_fn은 p_onj의 scope에서 실행을 하며, object로 설정할 경우 그 object의 scope에서 실행한다.",
      "isFinal": false,
      "name": "p_scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|object"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM이 처음으로 사용가능할때 제공된 callback을 실행한다. (window.onload와 동일)",
    "name": "onReady",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element가 발견되었을때 실행할 함수.",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "p_fn에 대한 parameter로 다시 전달하는 부가적인 object",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "만약 true로 설정하면, p_fn은 p_onj의 scope에서 실행을 하며, object로 설정할 경우 그 object의 scope에서 실행한다.",
      "isFinal": false,
      "name": "p_scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|object"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "window가 resize되면 fn을 수행한다.",
    "name": "onResize",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "function 객체",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "처음 한번 resize 이벤트가 발생지 여부를 결정한다.",
      "isFinal": false,
      "name": "firstFireEvent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 CSS selector에 기반한 node들의 집합을 조회한다.",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "node를 상대로 테스트할 CSS LDomSelector.",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "optional query로 부터 시작할 id나 HTMLElement. 기본은 LDomSelector.document.",
      "isFinal": false,
      "name": "root",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement | String"
     },
     {
      "deprecated": false,
      "description": "optional 처음 일치하는 값만 반환할지에 대한 여부.",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "주어진 selector와 일치하는 node들의 array.",
    "returnType": "Rui.LElementList",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 CSS selector에 기반한 node들의 집합을 조회하여 Rui.LElementList로 리턴한다.",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "테스트 할 CSS LDomSelector.",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "optional query로 부터 시작할 id나 HTMLElement. 기본은 LDomSelector.document.",
      "isFinal": false,
      "name": "root",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement | String"
     },
     {
      "deprecated": false,
      "description": "optional 처음 일치하는 값만 반환할지에 대한 여부.",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "주어진 selector와 일치하는 node들의 array.",
    "returnType": "Rui.LElementList",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선행, 후행 공백을 제외한 문자열을 리턴한다.\n 만약 입력값이 문자열이 아니면, 입력값은 처리되지 않고 반환될 것이다.",
    "name": "trim",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "처리할 문자열",
     "isFinal": false,
     "name": "trim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "returnDescription": "trim 처리된 문자열",
    "returnType": "string",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "queryString에 대한 parameter를 json 객체로 리턴한다.",
    "name": "urlParams",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "웹접근성 태그를 지원할지 여부를 리턴한다.",
    "name": "useAccessibility",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [
   {
    "deprecated": false,
    "description": "Border가 box 모델이 적용이 안되는 상태인지 확인하는 속성 (true면 박스모델이 아님: ie6에 doctype이 없을 경우)",
    "isFinal": false,
    "name": "isBorderBox",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "https가 적용되었는지 확인하는 속성",
    "isFinal": false,
    "name": "isSecure",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "css의 compatMode가 CSS1Compat인지 확인하는 속성",
    "isFinal": false,
    "name": "isStrict",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "static",
  "type": "Rui",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Rui.env는 Rui 라이브러리나 브라우징 환경에 대해 알려진 항목들을 추적하는데 사용된다.",
   "name": "Rui.env",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Rui.env는 Rui 라이브러리나 브라우징 환경에 대해 알려진 항목들을 추적하는데 사용된다.",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "명시된 모듈들에 대한 version 데이터를 반환한다:\n      &amp;lt;dl&amp;gt;\n      &amp;lt;dt&amp;gt;name:&amp;lt;/dt&amp;gt;      &amp;lt;dd&amp;gt;모듈의 이름&amp;lt;/dd&amp;gt;\n      &amp;lt;dt&amp;gt;version:&amp;lt;/dt&amp;gt;   &amp;lt;dd&amp;gt;사용중인 버전&amp;lt;/dd&amp;gt;\n      &amp;lt;dt&amp;gt;build:&amp;lt;/dt&amp;gt;     &amp;lt;dd&amp;gt;사용중인 빌드 번호&amp;lt;/dd&amp;gt;\n      &amp;lt;dt&amp;gt;versions:&amp;lt;/dt&amp;gt;  &amp;lt;dd&amp;gt;등록된 모든 버전들&amp;lt;/dd&amp;gt;\n      &amp;lt;dt&amp;gt;builds:&amp;lt;/dt&amp;gt;    &amp;lt;dd&amp;gt;등록된 모든 빌드들&amp;lt;/dd&amp;gt;\n      &amp;lt;dt&amp;gt;mainClass:&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;현재 버전과 빌드가 stamp된 object.\n                 만약 mainClass.VERSION != version 이거나, mainClass.BUILD != build 이거나\n                 라이브러리 조각의 여러 버전들이 로딩되어 있으면 잠재적으로\n                 이슈가 야기 될 수 있다.&amp;lt;/dd&amp;gt;\n       &amp;lt;/dl&amp;gt;",
   "name": "getVersion",
   "parameterType": "METHOD",
   "parameters": [{
    "deprecated": false,
    "description": "모듈의 이름(event, slider 등)",
    "isFinal": false,
    "name": "name",
    "parameterType": "PARAMETER",
    "scope": "required",
    "type": "String"
   }],
   "returnDescription": "version 정보",
   "returnType": "Object",
   "scope": "static",
   "visibility": "public"
  }],
  "module": "core",
  "propertys": [],
  "scope": "static",
  "type": "Rui.env",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "browser의 agent 정보",
   "name": "Rui.browser",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "browser의 agent 정보",
  "events": [],
  "methods": [],
  "module": "core",
  "propertys": [
   {
    "deprecated": false,
    "description": "chrome 브라우져 여부",
    "isFinal": false,
    "name": "chrome",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "gecko 브라우져 여부",
    "isFinal": false,
    "name": "gecko",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "gecko2 브라우져 여부",
    "isFinal": false,
    "name": "gecko2",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "gecko3 브라우져 여부",
    "isFinal": false,
    "name": "gecko3",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mozilla 브라우져 여부",
    "isFinal": false,
    "name": "mozilla",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie 브라우져 여부",
    "isFinal": false,
    "name": "msie",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie10 브라우져 여부",
    "isFinal": false,
    "name": "msie10",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie11 브라우져 여부",
    "isFinal": false,
    "name": "msie11",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie6 브라우져 여부",
    "isFinal": false,
    "name": "msie6",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie67 브라우져 여부",
    "isFinal": false,
    "name": "msie67",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie678 브라우져 여부",
    "isFinal": false,
    "name": "msie678",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie7 브라우져 여부",
    "isFinal": false,
    "name": "msie7",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie8 브라우져 여부",
    "isFinal": false,
    "name": "msie8",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "msie9 브라우져 여부",
    "isFinal": false,
    "name": "msie9",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "opera 브라우져 여부",
    "isFinal": false,
    "name": "opera",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "safari 브라우져 여부",
    "isFinal": false,
    "name": "safari",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "safari2 브라우져 여부",
    "isFinal": false,
    "name": "safari2",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "safari3 브라우져 여부",
    "isFinal": false,
    "name": "safari3",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "safari4 브라우져 여부",
    "isFinal": false,
    "name": "safari4",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "safari5 브라우져 여부",
    "isFinal": false,
    "name": "safari5",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "브라우져 버전 정보",
    "isFinal": false,
    "name": "version",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "webkit 브라우져 여부",
    "isFinal": false,
    "name": "webkit",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "scope": "static",
  "type": "Rui.browser",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "pc의 platform 정보",
   "name": "Rui.platform",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "pc의 platform 정보",
  "events": [],
  "methods": [],
  "module": "core",
  "propertys": [
   {
    "deprecated": false,
    "description": "air 여부",
    "isFinal": false,
    "name": "air",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "isMobile 브라우져 여부",
    "isFinal": false,
    "name": "isMobile",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "linux os 여부",
    "isFinal": false,
    "name": "linux",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mac os 여부",
    "isFinal": false,
    "name": "mac",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "window os 여부",
    "isFinal": false,
    "name": "window",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "scope": "static",
  "type": "Rui.platform",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Static Number 클래스는 Number 형식의 데이터를 처리하는 helper 함수들을 제공한다.",
   "name": "Rui.util.LNumber",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Static Number 클래스는 Number 형식의 데이터를 처리하는 helper 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "native 자바스크립트 Number를 가져오고 사용자에서 표시할 문자열로 형식화 한다.",
    "name": "format",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(Optional) config 객체\n   prefix {String} 통화 지정자 '$'과 같은 각 숫자 앞에 문자열을 추가.\n   decimalPrecision {Number} 반올림할 소수 자릿수의 숫자\n   decimalSeparator {String} 소수점 구분기호\n   thousandsSeparator {String} 천단위 구분기호\n   suffix {String} 문자열은 '항목'(공백주의)처럼 각 번호 뒤에 추가",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "Formatted number for display.",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 number형인지 검사한다.",
    "name": "isNumber",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "범위값에 맞는 random값을 생성하여 리턴한다.",
    "name": "random",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "범위값",
     "isFinal": false,
     "name": "range",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "소수점 숫자 반올림",
    "name": "round",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "반올림 할 값.",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Int/String"
     },
     {
      "deprecated": false,
      "description": "반올림 자리수.",
      "isFinal": false,
      "name": "precision",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "반올림된 값.",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "통화량(돈)으로 숫자를 형식화 한다.",
    "name": "toMoney",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "형식화 할 숫자값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number/String"
     },
     {
      "deprecated": false,
      "description": "통화 문자",
      "isFinal": false,
      "name": "currency",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "형식화 된 통화량 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "US 통화 단위로 숫자를 형식화 한다.",
    "name": "usMoney",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "형식화 할 숫자 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number/String"
    }],
    "returnDescription": "형식화된 통화량 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LNumber",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Static Array 클래스는 Array 형식의 데이터를 처리하는 helper 함수들을 제공한다.",
   "name": "Rui.util.LArray",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Static Array 클래스는 Array 형식의 데이터를 처리하는 helper 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "객체를 복사하는 메소드",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "복사하고자 하는 원본 객체",
     "isFinal": false,
     "name": "obj",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "복사된 객체",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items1 배열에 item2 배열의 중복되지 않은 값만 합쳐서 리턴한다.",
    "name": "concat",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items1",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 배열에서 item이 존재하는지 여부를 리턴하는 메소드",
    "name": "contains",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 정보에 해당되는 객체를 Function으로 호출하는 메소드",
    "name": "each",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 배열에서 item이 몇번째인지를 리턴하는 메소드",
    "name": "indexOf",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "[optional] 시작 위치",
      "isFinal": false,
      "name": "i",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 array 형인지에 검사한다.\n Array prototype을 대상으로 테스트하기 위한 다른 프레임으로의\n reference가 없다면, Safari에서 프레임 boundary를 넘어 array들의\n typeof/instanceof/constructor 테스트는 불가능하다.\n 이러한 케이스를 처리하기 위해, 대신 잘 알려진 array property들을 테스트 한다.",
    "name": "isArray",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 배열에서 oldIndex에 해당되는 데이터를 newIndex로 이동하는 메소드",
    "name": "moveItem",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "이동할 위치",
      "isFinal": false,
      "name": "oldIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이동될 위치",
      "isFinal": false,
      "name": "newIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "삭제된 위치",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 배열에서 index에 해당하는 객체를 삭제하는 메소드",
    "name": "removeAt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "삭제할 위치",
      "isFinal": false,
      "name": "idx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "삭제된 위치",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "QueryString형 문자로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Array 배열",
     "isFinal": false,
     "name": "params",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnDescription": "QueryString형 문자열 id=ddd&pwd=ccc",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LArray",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "The static String class provides helper functions to deal with data of type\n Number.\n static 문자열 클래스는 number 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "prototype.String",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "The static String class provides helper functions to deal with data of type\n Number.\n static 문자열 클래스는 number 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "문자열을 구분자를 통해 잘라낸다.",
    "name": "advancedSplit",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "구분자",
     "isFinal": false,
     "name": "delim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열을 주어진 길이만큼 잘라낸다.",
    "name": "cut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작위치",
      "isFinal": false,
      "name": "start",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "잘라낼 길이",
      "isFinal": false,
      "name": "length",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "잘라낸 후 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "종료 문자열이 pattern에 맞는지 여부를 리턴한다.",
    "name": "endsWith",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자패턴",
     "isFinal": false,
     "name": "pattern",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "결과",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "첫 문자만 대문자로 변환한다.",
    "name": "firstUpperCase",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변환 후 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "스트링의 자릿수를 Byte 단위로 환산하여 알려준다. 영문, 숫자는 1Byte이고 한글은 2Byte이다.(자/모 중에 하나만 있는 글자도 2Byte이다.)",
    "name": "getByteLength",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "스트링의 길이",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자바스크립트의 내장 객체인 String 객체에 insert 메소드를 추가한다. insert 메소드는 스트링의 특정 영역에\n 주어진 스트링을 삽입한다.\n &amp;lt;pre&amp;gt;\n     var str = 'abcde'\n     str = str.insert(3, 'xyz');\n &amp;lt;/pre&amp;gt;\n 위의 예에서 str는 'abcxyzde'가 된다.",
    "name": "insert",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "required 삽입할 위치. 해당 스트링의 index 바로 앞에 삽입된다. index는 0부터 시작.",
      "isFinal": false,
      "name": "index",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "required 삽입할 스트링.",
      "isFinal": false,
      "name": "str",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "inserted String.",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 한글로 된 정보인지를 체크한다. 해당문자열이 한글과 스페이스의 조합일때만 true를 리턴한다.",
    "name": "isHangul",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "한글 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열의 왼쪽부터 특정 문자를 주어진 갯수만큼 붙여넣는다.",
    "name": "lPad",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "padding할 문자",
      "isFinal": false,
      "name": "pad",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "붙이는 갯수",
      "isFinal": false,
      "name": "r",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "결과 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열을 처음부터 주어진 위치까지 잘라낸다.",
    "name": "lastCut",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "잘라낼 위치",
     "isFinal": false,
     "name": "pos",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "잘라낸 후 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열의 오른쪽부터 특정 문자를 주어진 갯수만큼 붙여넣는다.",
    "name": "rPad",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "padding할 문자",
      "isFinal": false,
      "name": "pad",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "붙이는 갯수",
      "isFinal": false,
      "name": "r",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "결과 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열에 포함된 문자값을 모두 변경한다.",
    "name": "replaceAll",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "변경할 문자열",
      "isFinal": false,
      "name": "s2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "변경될 문자열",
      "isFinal": false,
      "name": "s2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자바스크립트의 내장 객체인 String 객체에 simpleReplace 메소드를 추가한다. simpleReplace 메소드는\n 스트링 내에 있는 특정 스트링을 다른 스트링으로 모두 변환한다. String 객체의 replace 메소드와 동일한\n 기능을 하지만 간단한 스트링의 치환시에 보다 유용하게 사용할 수 있다.\n &amp;lt;pre&amp;gt;\n     var str = 'abcde'\n     str = str.simpleReplace('cd', 'xx');\n &amp;lt;/pre&amp;gt;\n 위의 예에서 str는 'abxxe'가 된다.",
    "name": "simpleReplace",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "required 바뀌어야 될 기존의 스트링",
      "isFinal": false,
      "name": "oldStr",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "required 바뀌어질 새로운 스트링",
      "isFinal": false,
      "name": "newStr",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "replaced String.",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시작 문자열이 pattern에 맞는지 여부를 리턴한다.",
    "name": "startsWith",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자패턴",
     "isFinal": false,
     "name": "pattern",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "결과",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열을 주어진 format에 따라 Date 객체로 변환",
    "name": "toDate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "format or oConfig.format/oConfig.locale",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object|String"
    }],
    "returnDescription": "oDate",
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 xml 문자열을 xml document object model로 변환해서 return",
    "name": "toXml",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "xml dom",
    "returnType": "object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열 앞뒤 공백 제거",
    "name": "trim",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "공백 제거된 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열에 모든 공백 제거",
    "name": "trimAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "모든 공백 제거된 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "scope": "instance",
  "type": "prototype.String",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LString",
   "name": "Rui.util.LString",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LString",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "문자열을 구분자를 통해 잘라낸다.",
    "name": "advancedSplit",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "문자열",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "구분자",
      "isFinal": false,
      "name": "delim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 camel 표기법(firstName)의 문자열을 hungarian 표기법(first_name) 문자열로 변환한다.",
    "name": "camelToHungarian",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "camel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열을 주어진 길이만큼 잘라낸다.",
    "name": "cut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "문자열",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "시작위치",
      "isFinal": false,
      "name": "start",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "잘라낼 길이",
      "isFinal": false,
      "name": "length",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "잘라낸 후 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "종료 문자열이 pattern에 맞는지 여부를 리턴한다.",
    "name": "endsWith",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "작업 대상 문자열",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "문자패턴",
      "isFinal": false,
      "name": "pattern",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "결과",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "첫 문자만 소문자로 변환한다.",
    "name": "firstLowerCase",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "변환 후 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "첫 문자만 대문자로 변환한다.",
    "name": "firstUpperCase",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "변환 후 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "url에 해당되는 파라미터를 추가한다.",
    "name": "getAppendUrl",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "url값",
      "isFinal": false,
      "name": "url",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "key값",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "value값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "결과",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "스트링의 자릿수를 Byte 단위로 환산하여 알려준다. 영문, 숫자는 1Byte이고 한글은 2Byte이다.(자/모 중에 하나만 있는 글자도 2Byte이다.)",
    "name": "getByteLength",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "스트링의 길이",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "한글이 포함된 문자열의 경우 byte로 계산하여 substring을 한다.",
    "name": "getByteSubstring",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "문자열",
      "isFinal": false,
      "name": "str",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "시작 index",
      "isFinal": false,
      "name": "start",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "짤라낼 길이",
      "isFinal": false,
      "name": "length",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "string",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 camel 표기법(firstName) 의 문자열을 function 문자열로 변환하여 리턴한다.",
    "name": "getCamelToFunctionName",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "hungarian",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "value의 값을 클립보드값을 리턴한다.",
    "name": "getClipboard",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열에서 한글만 제거하고 리턴한다.",
    "name": "getSkipHangulChar",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "한글을 제거한 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "캐쉬되지 않는 고유한 Url을 만든다.",
    "name": "getTimeUrl",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Array 배열",
     "isFinal": false,
     "name": "url",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "QueryString형 문자열 id=ddd&pwd=ccc",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "url에 해당되는 파라미터를 object형으로 리턴한다.",
    "name": "getUrlParams",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "url값",
     "isFinal": false,
     "name": "url",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "결과",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 csn로 된 정보인지를 체크한다.",
    "name": "isCsn",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "csn 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 email로 된 정보인지를 체크한다.",
    "name": "isEmail",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "email 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 빈 값인지 검사한다.\n undefined, null, '' 등은 모두 빈 값이다.",
    "name": "isEmpty",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 문자(열)",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 한글로 된 정보인지를 체크한다. 해당문자열이 한글과 스페이스의 조합일때만 true를 리턴한다.",
    "name": "isHangul",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "한글 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 한글로 된 정보인지를 체크한다.",
    "name": "isHangulChar",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "한글 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 주민등록번호로 된 정보인지를 체크한다.",
    "name": "isSsn",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "ssn 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 문자열인지 검사한다.",
    "name": "isString",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 문자열이 시간으로 된 정보인지를 체크한다.",
    "name": "isTime",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "oValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "ssn 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열의 왼쪽부터 특정 문자를 주어진 갯수만큼 붙여넣는다.",
    "name": "lPad",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "작업 대상 문자열",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "padding할 문자",
      "isFinal": false,
      "name": "pad",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "붙이는 갯수",
      "isFinal": false,
      "name": "r",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "결과 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열을 처음부터 주어진 위치까지 잘라낸다.",
    "name": "lastCut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "문자열",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "잘라낼 위치",
      "isFinal": false,
      "name": "pos",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "잘라낸 후 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열이 null이면 '' 공백 문자로 리턴",
    "name": "nvl",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "val",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "val",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열의 오른쪽부터 특정 문자를 주어진 갯수만큼 붙여넣는다.",
    "name": "rPad",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "작업 대상 문자열",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "padding할 문자",
      "isFinal": false,
      "name": "pad",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "붙이는 갯수",
      "isFinal": false,
      "name": "r",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "결과 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열에 포함된 문자값을 모두 변경한다.",
    "name": "replaceAll",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "기본 문자열",
      "isFinal": false,
      "name": "s1",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "변경할 문자열",
      "isFinal": false,
      "name": "s2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "변경될 문자열",
      "isFinal": false,
      "name": "s3",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "html 값의 '&amp;lt;' 문자열을 &amp; lt; 값으로 변경한다.",
    "name": "replaceHtml",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "html태그 문자열",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "변경 결과",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "태그를 모두 제거하고 html의 순수 문자열만 리턴한다.",
    "name": "skipTags",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "html태그 문자열",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "변경 결과",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시작 문자열이 pattern에 맞는지 여부를 리턴한다.",
    "name": "startsWith",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "작업 대상 문자열",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "문자패턴",
      "isFinal": false,
      "name": "pattern",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "결과",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "value의 값을 클립보드에 저장한 후 결과를 리턴한다.",
    "name": "toClipboard",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "저장할 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "결과 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열을 주어진 format에 따라 Date 객체로 변환",
    "name": "toDate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "oConfig.format/oConfig.locale",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "oDate",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 xml 문자열을 xml document object model로 변환해서 return",
    "name": "toXml",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "xml dom",
    "returnType": "object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열 앞뒤 공백 제거",
    "name": "trim",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "공백 제거된 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열에 모든 공백 제거",
    "name": "trimAll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "문자열",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "모든 공백 제거된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LString",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "static 문자열 클래스는 object 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "Rui.util.LObject",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "static 문자열 클래스는 object 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "객체를 복사하는 메소드",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "복사하고자 하는 원본 객체",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "(optional) literal 객체 여부",
      "isFinal": false,
      "name": "literal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "(optional) Function 객체.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Functdion"
     }
    ],
    "returnDescription": "복사된 객체",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object에 key에 해당되는 변수가 선언되어 있는지 여부를 리턴한다.",
    "name": "hasKey",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "검사할 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "키값",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 boolean (true or false) 형인지 검사한다.",
    "name": "isBoolean",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 빈 값인지 검사한다.\n undefined, null, '' 등은 모두 빈 값이다.",
    "name": "isEmpty",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 문자(열)",
     "isFinal": false,
     "name": "s",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 함수인지 검사한다.",
    "name": "isFunction",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 null인지 검사한다.",
    "name": "isNull",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "결과",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object 타입이거나 함수인지 검사한다.",
    "name": "isObject",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값이 undefined인지 검사한다.",
    "name": "isUndefined",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "문자열 값을 본래의 객체 형태로 반환하는 함수 (IE6,7의 DOMCollection 버그 패치용 값 변환기)",
    "name": "parseObject",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검사할 object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "QueryString형 문자로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Array 배열",
     "isFinal": false,
     "name": "params",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnDescription": "QueryString형 문자열 id=ddd&pwd=ccc",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LObject",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Date type의 데이터를 다루는데 도움이 되는 function을 제공하는 static Date 클래스\n java.sql.date의 toString은 yyyy-MM-dd로 return이 되므로 이에 대응\n  &amp;lt;dl&amp;gt;\n   &amp;lt;dt&amp;gt;config.format의 약어 내용은 아래와 같다.&amp;lt;/dt&amp;gt;\n   &amp;lt;dd&amp;gt;strftime에 정의된 format을 지원한다.&amp;lt;/dd&amp;gt;\n  &amp;lt;/dl&amp;gt;\n  strftime은 http://www.opengroup.org/onlinepubs/007908799/xsh/strftime.html에\n  오픈 그룹에 의해 정의된 여러가지 format 지정자들을 가지고 있다.\n\n  PHP는 http://www.php.net/strftime에 정의된 자체의 몇가지 항목들을 추가한다.\n\n  이러한 자바스크립트 구현은 모든 PHP 지정자와 몇가지를 더 지원한다.\n\n  &amp;lt;br/&amp;gt;arg \\%a - 현재 locale의 요일의 단축표시 ex) ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  &amp;lt;br/&amp;gt;arg \\%A - 현재 locale의 요일 표시 ex) ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  &amp;lt;br/&amp;gt;arg \\%b - 현재 locale의 달의 단축표시 ex) ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  &amp;lt;br/&amp;gt;arg \\%B - 현재 locale의 달 표시 ex) ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  &amp;lt;br/&amp;gt;arg \\%c - 현재 locale의 선호되는 날짜와 시간 표시 ex) 미국 : %a %d %b %Y %T %Z, 한국 : %Y년 %b %d %a %T %Z\n  &amp;lt;br/&amp;gt;arg \\%C - century number 현재 년도를 100으로 나누고 정수로 만든값으로 00~99\n  &amp;lt;br/&amp;gt;arg \\%d - 달의 일을 표시하는 값으로 01 ~ 31을 표시\n  &amp;lt;br/&amp;gt;arg \\%D - %m/%d/%y와 같다.\n  &amp;lt;br/&amp;gt;arg \\%e - %d와 비슷하나 1자리수의 경우 0대신이 공백이 들어간다. ' 1' ~ '31'\n  &amp;lt;br/&amp;gt;arg \\%F - %Y-%m-%d와 같다. (ISO 8601 date format)\n  &amp;lt;br/&amp;gt;arg \\%g - Two digit representation of the year going by ISO-8601:1988 standards (see %V)\n  &amp;lt;br/&amp;gt;arg \\%G - The full four-digit version of %g\n  &amp;lt;br/&amp;gt;arg \\%h - %b와 같다.\n  &amp;lt;br/&amp;gt;arg \\%H - 24-hour 00 ~ 23\n  &amp;lt;br/&amp;gt;arg \\%I - 12-hour 01 ~ 12\n  &amp;lt;br/&amp;gt;arg \\%j - 년중 몇번째 일인지 표시 001 ~ 366\n  &amp;lt;br/&amp;gt;arg \\%k - 24-hour 0 ~ 23\n  &amp;lt;br/&amp;gt;arg \\%l - 12-hour 1 ~ 12\n  &amp;lt;br/&amp;gt;arg \\%m - month 01 ~ 12\n  &amp;lt;br/&amp;gt;arg \\%M - minute 00 ~ 59\n  &amp;lt;br/&amp;gt;arg \\%n - 줄바꿈문자\n  &amp;lt;br/&amp;gt;arg \\%p - 현재 locale의 `AM', `PM'\n  &amp;lt;br/&amp;gt;arg \\%P - %p와 같으나 소문자 'am', 'pm'\n  &amp;lt;br/&amp;gt;arg \\%q - 입력용 format으로 년월일을 표시하며 기본 %Y%m%d이다.\n  &amp;lt;br/&amp;gt;arg \\%Q - 입력용 format으로 년월일시분초를 표시하면 기본 %Y%m%d%H%M%S이다.\n  &amp;lt;br/&amp;gt;arg \\%r - %p를 붙인 12시간제 시간 표시 %I:%M:%S %p와 같다.\n  &amp;lt;br/&amp;gt;arg \\%R - 24시간 표시 %H:%M와 같다.\n  &amp;lt;br/&amp;gt;arg \\%s - Unix Epoch Time timestamp, 1970-01-01 00:00:00 UTC이후의 초 ex) 305815200는 September 10, 1979 08:40:00 AM이다.\n  &amp;lt;br/&amp;gt;arg \\%S - 초 00 ~ 59\n  &amp;lt;br/&amp;gt;arg \\%t - tab문자\n  &amp;lt;br/&amp;gt;arg \\%T - 현재시간 %H:%M:%S와 같다.\n  &amp;lt;br/&amp;gt;arg \\%u - 요일을 숫자로 표시 1이 월요일이다.  1 ~ 7\n  &amp;lt;br/&amp;gt;arg \\%U - 지정한 년의 주번호 첫번째 일요일 부터 한주로 계산한다.\n  &amp;lt;br/&amp;gt;arg \\%V - 지정한 년의 주번호(ISO 8601:1988) 첫번째 월요일 부터 한주로 계산한다.  단 첫주는 적어도 4일이상이 되어야 한다. 01~53\n  &amp;lt;br/&amp;gt;arg \\%w - 요일을 숫자로 표시 0이 일요일이다.  0 ~ 6\n  &amp;lt;br/&amp;gt;arg \\%W - 지정한 년의 주번호 첫번째 월요일 부터 한주로 계산.\n  &amp;lt;br/&amp;gt;arg \\%x - 현재 locale의 기본 년월일 format ex) 2010-05-14, 14/05/10\n  &amp;lt;br/&amp;gt;arg \\%X - 현재 locale의 시간 ex) 2010-05-14 15:59:16\n  &amp;lt;br/&amp;gt;arg \\%y - century를 뺀 년도 00 ~ 99\n  &amp;lt;br/&amp;gt;arg \\%Y - century를 포함한 년도 ex) 2010\n  &amp;lt;br/&amp;gt;arg \\%z - time zone(UTC) 약어 또는 전체 명 ex) -0500 또는 EST for Eastern Time\n  &amp;lt;br/&amp;gt;arg \\%Z - time zone name / abbreviation\n  &amp;lt;br/&amp;gt;arg \\%% - a literal `\\%' character",
   "name": "Rui.util.LDate",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Date type의 데이터를 다루는데 도움이 되는 function을 제공하는 static Date 클래스\n java.sql.date의 toString은 yyyy-MM-dd로 return이 되므로 이에 대응\n  &amp;lt;dl&amp;gt;\n   &amp;lt;dt&amp;gt;config.format의 약어 내용은 아래와 같다.&amp;lt;/dt&amp;gt;\n   &amp;lt;dd&amp;gt;strftime에 정의된 format을 지원한다.&amp;lt;/dd&amp;gt;\n  &amp;lt;/dl&amp;gt;\n  strftime은 http://www.opengroup.org/onlinepubs/007908799/xsh/strftime.html에\n  오픈 그룹에 의해 정의된 여러가지 format 지정자들을 가지고 있다.\n\n  PHP는 http://www.php.net/strftime에 정의된 자체의 몇가지 항목들을 추가한다.\n\n  이러한 자바스크립트 구현은 모든 PHP 지정자와 몇가지를 더 지원한다.\n\n  &amp;lt;br/&amp;gt;arg \\%a - 현재 locale의 요일의 단축표시 ex) ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  &amp;lt;br/&amp;gt;arg \\%A - 현재 locale의 요일 표시 ex) ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  &amp;lt;br/&amp;gt;arg \\%b - 현재 locale의 달의 단축표시 ex) ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  &amp;lt;br/&amp;gt;arg \\%B - 현재 locale의 달 표시 ex) ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  &amp;lt;br/&amp;gt;arg \\%c - 현재 locale의 선호되는 날짜와 시간 표시 ex) 미국 : %a %d %b %Y %T %Z, 한국 : %Y년 %b %d %a %T %Z\n  &amp;lt;br/&amp;gt;arg \\%C - century number 현재 년도를 100으로 나누고 정수로 만든값으로 00~99\n  &amp;lt;br/&amp;gt;arg \\%d - 달의 일을 표시하는 값으로 01 ~ 31을 표시\n  &amp;lt;br/&amp;gt;arg \\%D - %m/%d/%y와 같다.\n  &amp;lt;br/&amp;gt;arg \\%e - %d와 비슷하나 1자리수의 경우 0대신이 공백이 들어간다. ' 1' ~ '31'\n  &amp;lt;br/&amp;gt;arg \\%F - %Y-%m-%d와 같다. (ISO 8601 date format)\n  &amp;lt;br/&amp;gt;arg \\%g - Two digit representation of the year going by ISO-8601:1988 standards (see %V)\n  &amp;lt;br/&amp;gt;arg \\%G - The full four-digit version of %g\n  &amp;lt;br/&amp;gt;arg \\%h - %b와 같다.\n  &amp;lt;br/&amp;gt;arg \\%H - 24-hour 00 ~ 23\n  &amp;lt;br/&amp;gt;arg \\%I - 12-hour 01 ~ 12\n  &amp;lt;br/&amp;gt;arg \\%j - 년중 몇번째 일인지 표시 001 ~ 366\n  &amp;lt;br/&amp;gt;arg \\%k - 24-hour 0 ~ 23\n  &amp;lt;br/&amp;gt;arg \\%l - 12-hour 1 ~ 12\n  &amp;lt;br/&amp;gt;arg \\%m - month 01 ~ 12\n  &amp;lt;br/&amp;gt;arg \\%M - minute 00 ~ 59\n  &amp;lt;br/&amp;gt;arg \\%n - 줄바꿈문자\n  &amp;lt;br/&amp;gt;arg \\%p - 현재 locale의 `AM', `PM'\n  &amp;lt;br/&amp;gt;arg \\%P - %p와 같으나 소문자 'am', 'pm'\n  &amp;lt;br/&amp;gt;arg \\%q - 입력용 format으로 년월일을 표시하며 기본 %Y%m%d이다.\n  &amp;lt;br/&amp;gt;arg \\%Q - 입력용 format으로 년월일시분초를 표시하면 기본 %Y%m%d%H%M%S이다.\n  &amp;lt;br/&amp;gt;arg \\%r - %p를 붙인 12시간제 시간 표시 %I:%M:%S %p와 같다.\n  &amp;lt;br/&amp;gt;arg \\%R - 24시간 표시 %H:%M와 같다.\n  &amp;lt;br/&amp;gt;arg \\%s - Unix Epoch Time timestamp, 1970-01-01 00:00:00 UTC이후의 초 ex) 305815200는 September 10, 1979 08:40:00 AM이다.\n  &amp;lt;br/&amp;gt;arg \\%S - 초 00 ~ 59\n  &amp;lt;br/&amp;gt;arg \\%t - tab문자\n  &amp;lt;br/&amp;gt;arg \\%T - 현재시간 %H:%M:%S와 같다.\n  &amp;lt;br/&amp;gt;arg \\%u - 요일을 숫자로 표시 1이 월요일이다.  1 ~ 7\n  &amp;lt;br/&amp;gt;arg \\%U - 지정한 년의 주번호 첫번째 일요일 부터 한주로 계산한다.\n  &amp;lt;br/&amp;gt;arg \\%V - 지정한 년의 주번호(ISO 8601:1988) 첫번째 월요일 부터 한주로 계산한다.  단 첫주는 적어도 4일이상이 되어야 한다. 01~53\n  &amp;lt;br/&amp;gt;arg \\%w - 요일을 숫자로 표시 0이 일요일이다.  0 ~ 6\n  &amp;lt;br/&amp;gt;arg \\%W - 지정한 년의 주번호 첫번째 월요일 부터 한주로 계산.\n  &amp;lt;br/&amp;gt;arg \\%x - 현재 locale의 기본 년월일 format ex) 2010-05-14, 14/05/10\n  &amp;lt;br/&amp;gt;arg \\%X - 현재 locale의 시간 ex) 2010-05-14 15:59:16\n  &amp;lt;br/&amp;gt;arg \\%y - century를 뺀 년도 00 ~ 99\n  &amp;lt;br/&amp;gt;arg \\%Y - century를 포함한 년도 ex) 2010\n  &amp;lt;br/&amp;gt;arg \\%z - time zone(UTC) 약어 또는 전체 명 ex) -0500 또는 EST for Eastern Time\n  &amp;lt;br/&amp;gt;arg \\%Z - time zone name / abbreviation\n  &amp;lt;br/&amp;gt;arg \\%% - a literal `\\%' character",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "해당 instance에 특정 시간량을 추가한다.",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "추가적으로 실행될 JavaScript Date object",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "추가적인 실행에 사용되는 field constant",
      "isFinal": false,
      "name": "field",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "날짜에 추가하기 위한 unit들의 number(field constant에서 측정된)",
      "isFinal": false,
      "name": "amount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "Date object의 결과",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜가 달력의 다른날짜 이후인지 여부에 대하여 결정한다.",
    "name": "after",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "비교 argument와 비교할 Date object",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "비교시 사용할 Date object",
      "isFinal": false,
      "name": "compareTo",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     }
    ],
    "returnDescription": "비교 날짜 이후에 날짜가 있으면 true, 아니면 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜가 달력의 다른 날짜 이전인지 여부에 대하여 결정한다.",
    "name": "before",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "비교 argument와 비교할 Date object",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "비교시 사용할 Date object",
      "isFinal": false,
      "name": "compareTo",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     }
    ],
    "returnDescription": "비교 날짜 이전에 날짜가 있으면 true, 아니면 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜가 달력의 두 날짜 사이에 있는지 여부에 대하여 결정한다.",
    "name": "between",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "체크할 날짜",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "범위의 시작일",
      "isFinal": false,
      "name": "dateBegin",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "범위의 종료일",
      "isFinal": false,
      "name": "dateEnd",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     }
    ],
    "returnDescription": "비교할 날짜가 중간에 있으면 true, 아니면 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜로부터 시간 필드를 초기화 하고, 효과적으로 시간을 낮 12시로 설정한다.",
    "name": "clearTime",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "초기화할 시간 필드에 대한 자바스크립트 Date",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "모든 시간 필드들이 초기화 된 자바스크립트 Date",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Date객체의 Pattern에 따른 날짜 비교",
    "name": "compareString",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Date1 객체",
      "isFinal": false,
      "name": "date1",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "Date2 객체",
      "isFinal": false,
      "name": "date2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "format pattern 문자",
      "isFinal": false,
      "name": "pattern",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "두 날짜를 format 형식에 맞게 비교한다. config를 주지 않을경우 %x(yyyy-mm-dd)로 비교한다.",
    "name": "equals",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "대상 date 객체",
      "isFinal": false,
      "name": "date1",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "비교 대상 date 객체",
      "isFinal": false,
      "name": "date2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "[optional] format등 옵션",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "내장된 JavaScript Date를 가져오고 사용자에게 표시할 문자열로 formating 처리.",
    "name": "format",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(Optional) 부가적인 configuration 값:",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "표시할 Formatted date.",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 년, 월, 일을 표시하는 새로운 자바스크립트 Date object를 반환한다.\n 새로운 Date object의 시간 필드(hr, min, sec, ms)들은 0으로 설정된다.\n method는 100이하의 연도로 생성되기 위한 Date 인스턴스들을 허용한다.\n \"new Date(year, month, date)\" 구현은 100 이하의 year (xx)가 제공되는 경우\n 19xx로 연도를 설정한다.\n &amp;lt;p&amp;gt;\n &amp;lt;em&amp;gt;NOTE:&amp;lt;/em&amp;gt;argument의 Validation은 실행되지 않는다.\n new Date(year, month[, date]) 생성자에 대해 ECMAScript-262 Date object 명시에 따라서\n argument의 적합성을 확보하는 것은 caller의 책임이다.\n &amp;lt;/p&amp;gt;",
    "name": "getDate",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Year.",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "0(Jan)부터 11(Dec)까지의 월 인덱스",
      "isFinal": false,
      "name": "m",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "(optional) 1부터 31까지의 날짜. 만약 제공되지 않으면 기본적으로 1.",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "제공된 년월일로 설정된 자바스크립트 date object",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "inx월에 해당되는 마지막 날짜",
    "name": "getDayInMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "inx에 해당되는 다국어 요일 (예: 월요일)",
    "name": "getDayInWeek",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 연도의 1월 1일부터 특정 일자까지의 일수를 계산한다.\n 0의 offset 값을 이 함수에서 반환하기 위해서는 1월 1일을 전달한다.",
    "name": "getDayOffset",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "offset을 찾을 자바크스립트 date",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "offset을 결정하기 위해 사용하는 연도",
      "isFinal": false,
      "name": "calendarYear",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "주어진 연도의 1월 1일 부터의 일수",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜를 포함하는 달의 첫번째 날짜를 가져온다.",
    "name": "getFirstDayOfMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "달의 시작을 계산하는데 사용할 자바스크립트 Date",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "달의 첫째날을 표시하는 자바스크립트 Date",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "format 문자열 return, 입력값 없을 경우 default return",
    "name": "getFormat",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "string",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 연도의 1월 1일을 표시하는 자바스크립트 date object를 조회한다.",
    "name": "getJan1",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "1월 1일을 조회하기 위한 달력의 연도",
     "isFinal": false,
     "name": "calendarYear",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "명시된 달력 연도의 1월 1일",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜를 포함하는 달의 마지막 날짜를 가져온다.",
    "name": "getLastDayOfMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "달의 끝을 계산하는데 사용할 자바스크릅트 Date",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "달의 마지막날을 표시하는 자바스크립트 Date",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본 local 정보 등을 가져온다.",
    "name": "getLocale",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "inx월에 다국어 표현 날짜 (예: 01월)",
    "name": "getMonthInYear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "inx에 해당되는 다국어 짧은 요일 (예: 월)",
    "name": "getShortDayInWeek",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "inx월에 다국어 표현 짧은 날짜 (예: 1월)",
    "name": "getShortMonthInYear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 날짜에 대한 week number를 계산한다.\n 올해의 첫번째 주를 1월 1일로 정의하는 것에 기반하는 standard U.S. week number와\n 올해의 첫번째 주를 1월 4일로 정의하는 것에 기반하는 ISO8601 week number를 일번적으로 지원할 수 있다.",
    "name": "getWeekNumber",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "week number를 찾을 자바스크립트 date",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "주의 첫번째 날짜의 인덱스(0 = Sun, 1 = Mon ... 6 = Sat). 기본값은 0",
      "isFinal": false,
      "name": "firstDayOfWeek",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "올해의 한주를 정의 하는 1월의 첫째주의 date\n 기본값은 1(Jan 1st)인, Rui.ui.LDateMath.WEEK_ONE_JAN_DATE의 값.\n U.S에 대해서는 일반적으로 1월 1일 이다. ISO8601은 올해의 첫째주를 정의하기 위하여 1월 4일을 사용한다.",
      "isFinal": false,
      "name": "janDate",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "주어진 날짜를 포함하는 week numner",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "o의 객체가 Date객체인지 여부",
    "name": "isDate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 week가 두개의 다른 달에 겹쳐지는지 대한 여부를 결정한다.",
    "name": "isMonthOverlapWeek",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "주의 첫번째 날짜를 표시하는 자바스크립트 Date",
     "isFinal": false,
     "name": "weekBeginDate",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "날짜가 두개의 다른 달에 겹쳐지면 true",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 week가 두개의 다른 연도에 겹쳐지는지 대한 여부를 결정한다.\n ex) 2012년 12월 31일은 2013년 1월 1일과 같은 week 이므로 true",
    "name": "isYearOverlapWeek",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "주의 첫번째 날짜를 표시하는 자바스크립트 Date",
     "isFinal": false,
     "name": "weekBeginDate",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "날짜가 두개의 다른 연도에 겹쳐지면 true",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Subtracts the specified amount of time from the this instance.\n 해당 인스턴스로 부터 지정된 분량의 시간을 차감한다.",
    "name": "subtract",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "차감시 수행할 자바스크립트 Date object",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "차감 실행에 대해 사용될 필드 상수",
      "isFinal": false,
      "name": "field",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "date로부터 차감할 유닛들의 숫자(필드 상수에서 측정된)",
      "isFinal": false,
      "name": "amount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "Date object 결과",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "",
  "propertys": [
   {
    "deprecated": false,
    "description": "representing Day 상수 field",
    "isFinal": true,
    "name": "DAY",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Hour 상수 field",
    "isFinal": true,
    "name": "HOUR",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Milisecond 상수 field",
    "isFinal": true,
    "name": "MILISECOND",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Minute 상수 field",
    "isFinal": true,
    "name": "MINUTE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Month 상수 field",
    "isFinal": true,
    "name": "MONTH",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing one day, in milliseconds 상수 field",
    "isFinal": true,
    "name": "ONE_DAY_MS",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Second 상수 field",
    "isFinal": true,
    "name": "SECOND",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Week 상수 field",
    "isFinal": true,
    "name": "WEEK",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Constant field representing the date in first week of January\n which identifies the first week of the year.\n 한해의 첫주를 식별하게 하는 1월의 첫째주에 대한 date를 표시하는 상수 field\n &amp;lt;p&amp;gt;\n 미국에서는 1월 1일이 보통 한주의 일요일 시작을 기반으로 사용된다.\n 유럽에서 넓게 사용되는 ISO 8601 은 한주의 월요일 시작을 기반으로한 1월 4일을 사용한다.\n &amp;lt;/p&amp;gt;",
    "isFinal": true,
    "name": "WEEK_ONE_JAN_DATE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "representing Year 상수 field",
    "isFinal": true,
    "name": "YEAR",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   }
  ],
  "scope": "static",
  "type": "Rui.util.LDate",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "format 문자열에 기반한 문자열로부터 세부 시간 정보를 parsing 하는\n &amp;lt;code&amp;gt;strptime&amp;lt;/code&amp;gt;에 대한 부분적인 implementation.\n &amp;lt;p&amp;gt;\n This implementation largely takes its cue from the documentation for Python's\n &amp;lt;code&amp;gt;time&amp;lt;/code&amp;gt; module, as documented at\n http://docs.python.org/lib/module-Dt.html; with the exception of seconds\n formatting, which is restricted to the range [00,59] rather than [00,61].\n &amp;lt;p&amp;gt;\n 지원되는 formatting directive들:\n &amp;lt;table&amp;gt;\n &amp;lt;thead&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;th&amp;gt;Directive&amp;lt;/th&amp;gt;\n     &amp;lt;th&amp;gt;Meaning&amp;lt;/th&amp;gt;\n   &amp;lt;/tr&amp;gt;\n &amp;lt;/thead&amp;gt;\n &amp;lt;tbody&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%b&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;Locale의 단축된 월 이름.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%B&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;Locale의 전체 월 이름.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%d&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[01,31]의 십진수로된 월의 날짜.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%H&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,23]의 십진수로된 시간(24시간제).&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%I&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,12]의 십진수로된 시간(12시간제).&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%m&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[01,12]의 십진수로된 월.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%M&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,59]의 십진수로된 분.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%p&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;\n       Locale의 AM이나 PM 표시(시간을 분류하기 위해 &amp;lt;code&amp;gt;%I&amp;lt;/code&amp;gt; directive 가\n       사용되는 경우에 시간 출력 field에만 영향을 미친다.)\n     &amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%S&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,59]의 십진수로된 초.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%y&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,99]의 십진수로된 세기값이 없는 년도.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%Y&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;십진수로된 세기값을 포함한 년도.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%%&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;\"&amp;lt;tt&amp;gt;%&amp;lt;/tt&amp;gt;\" 문자 literal .&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n &amp;lt;/tbody&amp;gt;\n &amp;lt;/table&amp;gt;",
   "name": "Rui.util.Parser",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "특정 formatting directive 문자열.",
     "isFinal": false,
     "name": "format",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "해당 parser를 생성하기 위해 사용되는 locale object.",
     "isFinal": false,
     "name": "locale",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "format 문자열에 기반한 문자열로부터 세부 시간 정보를 parsing 하는\n &amp;lt;code&amp;gt;strptime&amp;lt;/code&amp;gt;에 대한 부분적인 implementation.\n &amp;lt;p&amp;gt;\n This implementation largely takes its cue from the documentation for Python's\n &amp;lt;code&amp;gt;time&amp;lt;/code&amp;gt; module, as documented at\n http://docs.python.org/lib/module-Dt.html; with the exception of seconds\n formatting, which is restricted to the range [00,59] rather than [00,61].\n &amp;lt;p&amp;gt;\n 지원되는 formatting directive들:\n &amp;lt;table&amp;gt;\n &amp;lt;thead&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;th&amp;gt;Directive&amp;lt;/th&amp;gt;\n     &amp;lt;th&amp;gt;Meaning&amp;lt;/th&amp;gt;\n   &amp;lt;/tr&amp;gt;\n &amp;lt;/thead&amp;gt;\n &amp;lt;tbody&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%b&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;Locale의 단축된 월 이름.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%B&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;Locale의 전체 월 이름.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%d&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[01,31]의 십진수로된 월의 날짜.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%H&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,23]의 십진수로된 시간(24시간제).&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%I&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,12]의 십진수로된 시간(12시간제).&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%m&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[01,12]의 십진수로된 월.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%M&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,59]의 십진수로된 분.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%p&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;\n       Locale의 AM이나 PM 표시(시간을 분류하기 위해 &amp;lt;code&amp;gt;%I&amp;lt;/code&amp;gt; directive 가\n       사용되는 경우에 시간 출력 field에만 영향을 미친다.)\n     &amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%S&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,59]의 십진수로된 초.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%y&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;[00,99]의 십진수로된 세기값이 없는 년도.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%Y&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;십진수로된 세기값을 포함한 년도.&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n   &amp;lt;tr&amp;gt;\n     &amp;lt;td&amp;gt;&amp;lt;code&amp;gt;%%&amp;lt;/code&amp;gt;&amp;lt;/td&amp;gt;\n     &amp;lt;td&amp;gt;\"&amp;lt;tt&amp;gt;%&amp;lt;/tt&amp;gt;\" 문자 literal .&amp;lt;/td&amp;gt;\n   &amp;lt;/tr&amp;gt;\n &amp;lt;/tbody&amp;gt;\n &amp;lt;/table&amp;gt;",
  "events": [],
  "methods": [],
  "module": "",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.util.Parser",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "The static Function class provides helper functions to deal with data of type Function.\n statice 함수 클래스는 함수 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "Rui.util.LFunction",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "The static Function class provides helper functions to deal with data of type Function.\n statice 함수 클래스는 함수 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Function의 Delegate를 생성한다.",
    "name": "createDelegate",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "function 객체",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "수행할 오브젝트",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "파라미터",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "추가 파라미터를 붙일지 여부",
      "isFinal": false,
      "name": "appendArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Function 객체",
    "returnType": "Function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "fcn을 수행하여 결과에 따라 fn을 대신 수행하는 Interceptor 메소드",
    "name": "createInterceptor",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "function 객체",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "fn 의 해당되는 기능을 수할하지 여부를 판단하는 Function",
      "isFinal": false,
      "name": "fcn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "수행할 오브젝트",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "Function 객체",
    "returnType": "Function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Delegate를 생성하여 수행하는데 millis초값 만큼 시간이 지난후에 fn을 수행한다.",
    "name": "defer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "function 객체",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "몇초후에 수행할지 값 (천분의 1초)",
      "isFinal": false,
      "name": "millis",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "수행할 오브젝트",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "파라미터",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "추가 파라미터를 붙일지 여부",
      "isFinal": false,
      "name": "appendArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Function 객체",
    "returnType": "Function",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LFunction",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Json 문자열을 파싱하는 method를 제공하고 Json 문자열로 object들을 변환한다.",
   "name": "Rui.util.LJson",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Json 문자열을 파싱하는 method를 제공하고 Json 문자열로 object들을 변환한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "object에 Json 문자열을 디코딩한다. Json이 유효하지 않을 경우\n safe 옵션이 설정되어 있지 않다면 이 함수는 SyntaxError를 발생시킨다.",
    "name": "decode",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The Json string",
      "isFinal": false,
      "name": "json",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) true로 설정하고 Json이 잘못된 경우 null이 반환된다.",
      "isFinal": false,
      "name": "safe",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "결과 object",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object, array 그외 다른 값을 인코딩한다.",
    "name": "encode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "인코딩할 변수",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Mixed"
    }],
    "returnDescription": "The Json string",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object, array 그외 다른 값을 인코딩한다.",
    "name": "encodeDate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "인코딩할 변수",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Mixed"
    }],
    "returnDescription": "The Json string",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Json을 XPath형식으로 정보를 얻어오는 메소드\n &amp;lt;pre&amp;gt;\n alert(config.get(\"$.core.defaultLocale\"));\n &amp;lt;/pre&amp;gt;",
    "name": "jsonPath",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Json Object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "Date의 문자열 serialization",
      "isFinal": false,
      "name": "expr",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "규칙",
      "isFinal": false,
      "name": "arg",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LJson",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "DOM element들을 위해 도움을 주는 method들을 제공한다.",
   "name": "Rui.util.LDom",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "DOM element들을 위해 도움을 주는 method들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "주어진 element나 element들의 collection에 class 이름을 추가한다.",
    "name": "addClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "class를 추가할 element나 collection",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "class attribute에 추가할 class 이름",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "pass/fail의 boolean 값이나 boolean값의 array",
    "returnType": "Boolean | Array",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "html내용을 dom객체에 추가한다.(script/css 태그 작동)",
    "name": "appendHtml",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "html 내용",
      "isFinal": false,
      "name": "html",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element에 style specification을 적용한다.",
    "name": "applyStyles",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "style이 적용될 element",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String/HTMLElement"
     },
     {
      "deprecated": false,
      "description": "스타일 지정 문자열, 예: 'width:100px',\n                                        form의 {width:'100px'} object,\n                                        specification을 반환하는 함수",
      "isFinal": false,
      "name": "styles",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String/Object/Function"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Collection/Array의 각 항목에 대해 제공되는 method를 실행한다.\n method는 첫번째 인자로 element를, 두번째로 method(el, o) 같은 optional 인자를 가지고 호출된다.",
    "name": "batch",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "method가 적용할 element나 element들의 array",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "element로 적용할 method",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "(optional) 제공될 method로 전달할 optional arg",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Any"
     },
     {
      "deprecated": false,
      "description": "(optional) 'o'와 'method'의 scope를 override할지에 대한 여부",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "제공된 method로 부터의 반환값(들)",
    "returnType": "Any | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "html 해당되는 객체를 생성한후 LElementList로 리턴한다.",
    "name": "createElements",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "생성할 html",
      "isFinal": false,
      "name": "html",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 추가 설정",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnType": "Rui.LElementList",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "전달된 simple selector의 match를 위한 현재 node와 parent node를 찾는다.(예: div.some-class or span:first-child)",
    "name": "findParent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The node",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "test를 위한 simple selector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) element나 number로서 검색하기 위한 depth max값\n                       (defaults to 10 || document.body)",
      "isFinal": false,
      "name": "maxDepth",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number/Mixed"
     }
    ],
    "returnDescription": "매치되는 DOM node(매치되는 값을 찾지 못하면 null)",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Looks at parent nodes for a match of the passed simple selector (e.g. div.some-class or span:first-child)",
    "name": "findParentNode",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The node",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "test를 위한 simple selector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) element나 number로서 검색하기 위한 depth max값\n                       (defaults to 10 || document.body)",
      "isFinal": false,
      "name": "maxDepth",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number/Mixed"
     }
    ],
    "returnDescription": "매치되는 DOM node(매치되는 값을 찾지 못하면 null)",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "ID를 반환하고, 만약 제공된 경우 'el' element로 적용된다.",
    "name": "generateId",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "(optional) ID를 추가할 optional element의 array\n                                       (하나라도 이미 존재한다면, ID는 추가되지 않는다.)",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "(optional) 사용할 optional perfix(기본은 'L-gen')",
      "isFinal": false,
      "name": "prefix",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "생성된 ID나, 생성된 ID들의 array",
    "returnType": "String | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement refrence를 반환한다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "DOM reference, 실제 DOM reference,\n                                         혹은 ID들이나 HTMLElement들의 Array를 가져오기 위한\n                                         ID 로서 사용하기 위한 문자열 Accepts",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement |Array"
    }],
    "returnDescription": "HTML element나 HTMLElement들의 array에 대한 DOM reference",
    "returnType": "HTMLElement | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement child 노드들의 array를 반환한다.",
    "name": "getAllChildrenBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작지점으로서 사용할 HTMLElement난 ID",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "배열",
      "isFinal": false,
      "name": "list",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "비교 function",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement의 static array",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "제공된 boolean method에 의해 적용된 테스트로 전달되는 가장 가까운 ancestor를 반환한다.\n 성능상의 이유로, ID들은 허용되지 않으며 argument의 validation은 생략한다.",
    "name": "getAncestorBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작지점으로서 사용할 HTMLElement",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "element의 argument로서만 element를 받는 element들을 테스트 하기 위한 boolean method.",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement나 만약 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 클래스 이름을 가진 가장 가까운 ancestor를 반환한다.",
    "name": "getAncestorByClassName",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "HTMLElement나 시작지점으로서 사용할 ID",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "클래스 이름",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "HTMLElement",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 tag 이름을 가진 가까운 ancestor를 반환한다.",
    "name": "getAncestorByTagName",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "HTMLElement나 시작지점으로서 사용할 ID",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "이름",
      "isFinal": false,
      "name": "tag",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "HTMLElement",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom의 여부 공간이 존재하는 height 값을 리턴한다.",
    "name": "getAvailableHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement childNode들의 array를 반환한다.",
    "name": "getChildren",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "시작점으로 사용할 HTMLElement나 ID",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "HTMLElement들의 static array",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "test method로 전달할 HTMLElement childNode들의 array를 반환한다.",
    "name": "getChildrenBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작될 HTMLElemwnt",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "그것의 유일한 인자값으로 test되는 node를 받는\n                          children test에 사용되는 boolean 함수",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement들의 static array",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "클라이언트의 height를 반환한다.(viewport:화면 상의 화상 표시영역)",
    "name": "getClientHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "페이지의 표시가능한 영역의 height",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document에 연관된 viewport에 기반한 Region을 생성한다.",
    "name": "getClientRegion",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "document 스크롤을 차지하는 viewport를 표현하는 Region object",
    "returnType": "Region",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "클라이언트의 width를 반환한다.(viewport:화면 상의 화상 표시영역)",
    "name": "getClientWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "페이지의 표시가능한 영역의 width",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document의 height를 반환한다.",
    "name": "getDocumentHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "실제 document의 height(body와 그것의 공백을 포함하는)",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document의 왼쪽 스크롤 값을 반환한다.",
    "name": "getDocumentScrollLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) 스크롤 값을 가져올 document",
     "isFinal": false,
     "name": "document",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLDocument"
    }],
    "returnDescription": "document가 왼쪽으로 스크롤되어 있는 값",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document의 top 스크롤 값을 반환한다.",
    "name": "getDocumentScrollTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) 스크롤 값을 가져올 document",
     "isFinal": false,
     "name": "document",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLDocument"
    }],
    "returnDescription": "document가 top으로 스크롤되어 있는 값",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document의 width를 반환한다.",
    "name": "getDocumentWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "실제 document의 width(body와 그것의 공백을 포함하는)",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "제공된 boolean method에 의해 적용된 테스트로 전달되는 HTMLElement의 array를 반환한다.\n 최적화된 성능을 위해 가능한 경우, tag나 root 노드를 포함한다.\n 주의: 이 method는 live collection에 반하여 작동하며\n callback(노드의 삭제/추가 등)에서의 collection 수정은 역효과가 생길 것이다.\n 대신 native 'getElementsByTagName' method와 마찬가지로 반환된 노드 array를 반복해야 한다.",
    "name": "getElementsBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element의 argument로서만 element를 받는 element들을 테스트 하기 위한 boolean method.",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "(optional) collect 될 element들의 tag 이름",
      "isFinal": false,
      "name": "tag",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) 시작지점으로서 사용할 HTMLElement나 ID",
      "isFinal": false,
      "name": "root",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "(optional) 검색되었을때 각 element에 적용할 함수",
      "isFinal": false,
      "name": "apply",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement의 array",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 class의 HTMLElement들의 array를 반환한다.\n 최적화된 성능을 위해서 가능한한 태그 및 또는 root node를 포함한다.\n Note: 이 callback(node들의 추가/삭제 등)에서의 collection 변경 같은,\n live collecttion에 반하는 운영 method는 부작용을 갖는다.\n native 'getElementsByTagName' method와 마찬가지로,\n 대신 node array 반환을 반복해야 한다.",
    "name": "getElementsByClassName",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "일치하는 class 이름",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) collect될 element들의 태그 이름",
      "isFinal": false,
      "name": "tag",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) 시작지점으로 사용할 HTMLElement나 ID",
      "isFinal": false,
      "name": "root",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "(optional) 발견했을때 각 element에 적용할 함수",
      "isFinal": false,
      "name": "apply",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "주어진 class이름을 가진 element들의 array",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "맨 처음 HTMLElement child를 반환한다.",
    "name": "getFirstChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The HTMLElement or an ID to use as the starting point",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "HTMLElement or null if not found",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "test method로 전달할 처음 HTMLElement child를 반환한다.",
    "name": "getFirstChildBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작점으로 사용할 HTMLElement",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "그것의 유일한 인자값으로 test되는 node를 받는\n                          children test에 사용되는 boolean 함수",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement나 발견되지 않았을 경우엔 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node의 자식중 해당 tagName을 가지는 첫번째 element를 return한다.",
    "name": "getFirstChildByTagName",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "부모 node",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "자식의 tagName",
      "isFinal": false,
      "name": "tagName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "HTMLElement 또는 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "범위 객체안에 입력 field의 value값들을 object형으로 만들어서 리턴한다.",
    "name": "getFormValues",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "범위 객체",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|HTMLElement"
    }],
    "returnType": "Object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자신의 dom이 보이지 않아도 부모들중 안보이는 dom을 찾아서 리턴한다.",
    "name": "getHiddenParent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 최대 부모 검색 갯수",
     "isFinal": false,
     "name": "maxDepth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "HTMLELement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Returns the last HTMLElement child.",
    "name": "getLastChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "시작지점으로서 사용할 HTMLElement난 ID",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "HTMLElement나 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the last HTMLElement child that passes the test method.",
    "name": "getLastChildBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The HTMLElement to use as the starting point",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "A boolean function used to test children\n that receives the node being tested as its only argument",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement or null if not found",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "다음에 sibling 되어 있는 HTMLElement를 반환한다.",
    "name": "getNextSibling",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "시작지점으로서 사용할 HTMLElement난 ID",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "HTMLElement나 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "boolean method로 전달할 다음 형제 HTMLElement를 반환한다.\n 성능상의 이유로, ID들은 허용되지 않으며, argument validation은 생략된다.",
    "name": "getNextSiblingBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작점으로 사용할 HTMLElement",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "그것의 유일한 인자값으로 test되는 sibling node를 받는\n                          siblings test에 사용되는 boolean 함수",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement나 발견되지 않았을 경우엔 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 페이지의 GET 방식의 파라미터를 Object 형으로 리턴한다.",
    "name": "getParams",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "이전에 sibling되어 있는 HTMLElement를 반환한다.",
    "name": "getPreviousSibling",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "시작지점으로서 사용할 HTMLElement나 ID",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "HTMLElement나 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이전에 sibling되어 있는 HTMLElement를 반환한다.\n 성능상의 이유로, ID들은 허용되지 않으며 argument의 validation은 생략한다.\n Returns the nearest HTMLElement sibling if no method provided.\n method가 제공되지 않는 경우 가장 가까운 sibling HTMLElement를 반환한다.",
    "name": "getPreviousSiblingBy",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작지점으로서 사용할 HTMLElement",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "노드의 argument로서만 테스트될 sibling 노드를 받는\n sibling을 테스트하기 위하여 사용되는 boolean 함수",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "HTMLElement나 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 element의 region 위치를 반환한다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "getRegion",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement | Array"
    }],
    "returnDescription": "Region이나 'top, left, bottom, right' 멤버 데이터를 포함하는 Region 인스턴스의 array",
    "returnType": "Region | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom 객체에 rui- 속성들을 json 객체로 리턴",
    "name": "getRuiAttributes",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom 객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "json 객체",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 객체의 커서 마지막 위치 반환",
    "name": "getSelectionEnd",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom 객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HtmlElement"
    }],
    "returnDescription": "커서 마지막 위치 반환",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 객체의 커서 위치 정보 반환",
    "name": "getSelectionInfo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HtmlElement"
    }],
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 객체의 커서 시작위치 반환",
    "name": "getSelectionStart",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HtmlElement"
    }],
    "returnDescription": "커서 시작위치 반환",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "currentStyle과 ComputedStyle의 일반화(Normalize).",
    "name": "getStyle",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "ID로서 사용할 실제 DOM reference, 혹은 ID들이나\n                                         HTMLElement들의 Array의 문자열 Accepts",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement |Array"
     },
     {
      "deprecated": false,
      "description": "값이 반환될 style property.",
      "isFinal": false,
      "name": "property",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "element를 위한 style property의 현재값.",
    "returnType": "String | Array",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "범위 객체안에 selector에 대한 입력 field의 value값들을 object형으로 만들어서 리턴한다.",
    "name": "getValues",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "selector 문자열",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "selector"
     },
     {
      "deprecated": false,
      "description": "범위 객체",
      "isFinal": false,
      "name": "id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement"
     }
    ],
    "returnType": "Object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "viewport의 object 정보를 리턴한다. width/height 등...",
    "name": "getViewport",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "viewport의 현재 height를 반환한다.",
    "name": "getViewportHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "페이지의 표시 가능한 부분의 height(스크롤바는 제외).",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "viewport의 현재 width를 반환한다.",
    "name": "getViewportWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "페이지의 표시 가능한 부분의 width(스크롤바는 제외).",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 좌표에 기반한 element의 현재 X 위치를 가져온다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "getX",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement | Array"
    }],
    "returnDescription": "element의 X 위치",
    "returnType": "Number | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 좌표에 기반한 element의 현재 위치를 가져온다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "getXY",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement | Array"
    }],
    "returnDescription": "element의 XY 위치",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 좌표에 기반한 element의 현재 Y 위치를 가져온다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "getY",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement | Array"
    }],
    "returnDescription": "element의 Y 위치",
    "returnType": "Number | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement가 주어진 class 이름을 가졌는지에 대한 여부.",
    "name": "hasClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "test할 element나 collection",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "검색할 class 이름",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "boolean값이나 boolean값의 array",
    "returnType": "Boolean | Array",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement가 현재 document에 존재하는지에 대한 여부",
    "name": "inDocument",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검색할 element",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "element가 현재 document에 존재하는지에 대한 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "reference node의 다음 sibling으로 새 node를 삽입한다.",
    "name": "insertAfter",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삽입될 node",
      "isFinal": false,
      "name": "newNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "새로운 node 이후에 삽입할 node",
      "isFinal": false,
      "name": "referenceNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     }
    ],
    "returnDescription": "삽입된 node(만약 삽입이 실패되면 null)",
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "reference node의 이전 sibling으로 새 node를 삽입한다.",
    "name": "insertBefore",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삽입될 node",
      "isFinal": false,
      "name": "newNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "새로운 node 이전에 삽입할 node",
      "isFinal": false,
      "name": "referenceNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     }
    ],
    "returnDescription": "삽입된 node(만약 삽입이 실패되면 null)",
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 element의 첫번째 child로서 element나 DomHelper 설정을 삽입하거나 생성한다.",
    "name": "insertFirst",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삽입할 id나 element, 삽입하거나 생성할 DomHelper 설정",
      "isFinal": false,
      "name": "newNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String/HTMLElement"
     },
     {
      "deprecated": false,
      "description": "이후에 새로운 노느가 삽입될 노드",
      "isFinal": false,
      "name": "referenceNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String/HTMLElement"
     }
    ],
    "returnDescription": "새로운 child",
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom에 정의되어 있는 css중에 L-fn-로 시작하는 css를 찾아서 그 이름 뒤에 해당되는 문자열에 해당되는 function을 호출한다.",
    "name": "invokeFn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom 아이디나 객체",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement"
     },
     {
      "deprecated": false,
      "description": "호출할 scope",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "event 객체",
      "isFinal": false,
      "name": "event",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement가 DOM 계층구조에서 다른 HTML element의 ancestor 인지에 대한 여부",
    "name": "isAncestor",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "가능한 ancestor",
      "isFinal": false,
      "name": "haystack",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     },
     {
      "deprecated": false,
      "description": "가능한 descendent",
      "isFinal": false,
      "name": "needle",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement"
     }
    ],
    "returnDescription": "haystack이 needle의 ancestor인지에 대한 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom 객체가 존재하는지 여부를 리턴한다.",
    "name": "isDom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom 객체를 찾을 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "the result",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node의 특정 방향 t,r,b,t(top,right,bottom,left)중의 한 방향이 화면에서 안보이는지 여부 top,right,bottom,left\n bottom 좌표값이 99인데 화면에 안가렸냐? isVisibleSide(99);, right 좌표값이 99인데 화면에 안가렸냐 ? isVisibleSide(99,'r');",
    "name": "isVisibleSide",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "비교하려는 방향의 좌표값",
      "isFinal": false,
      "name": "coord",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "t,r,b,t 비교하려는 방향 default는 b(bottom)",
      "isFinal": false,
      "name": "side",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes a class name from a given element or collection of elements.\n 주어진 element나 element들의 collection으로부터 class 이름을 삭제한다.",
    "name": "removeClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "class를 삭제할 element나 collection",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "class attribute에 삭제할 class 이름",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "pass/fail의 boolean 값이나 boolean값의 array",
    "returnType": "Boolean | Array",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document로부터 DOM node를 삭제한다. body node는 전달될 경우 무시될 것이다.",
    "name": "removeNode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 node",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement method를 위한 Wrapper.",
    "name": "replaceChild",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삽입할 HTMLElement",
      "isFinal": false,
      "name": "newNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "교체할 HTMLElement",
      "isFinal": false,
      "name": "oldNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     }
    ],
    "returnDescription": "교체된 DOM element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 element나 element의 collection에 대해 다른 클래스로 클래스를 교체한다.\n 기존 클래스 이름이 존재하지 않는 경우 새로운 클래스 이름이 간단하게 추가된다.",
    "name": "replaceClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "클래스로부터 제거할 element나 collection",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "교체될 클래스 이름",
      "isFinal": false,
      "name": "oldClassName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "예전 클래스 이름을 교체할 클래스 이름",
      "isFinal": false,
      "name": "newClassName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "성공/실패 boolean이나 boolean값들의 array",
    "returnType": "Boolean | Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 객체의 커서 위치 변경",
    "name": "setCaretToPos",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom객체",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HtmlElement"
     },
     {
      "deprecated": false,
      "description": "커서 위치값",
      "isFinal": false,
      "name": "pos",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 객체의 커서 위치 변경",
    "name": "setSelectionRange",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom객체",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HtmlElement"
     },
     {
      "deprecated": false,
      "description": "커서 시작 위치",
      "isFinal": false,
      "name": "begin",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "커서 끝 위치",
      "isFinal": false,
      "name": "end",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Wrapper for setting style properties of HTMLElements.\n 최신 브라우저을 통해 'opacity'를 일반화(Normalize).",
    "name": "setStyle",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "ID로서 사용할 실제 DOM reference, 혹은 ID들이나\n                                         HTMLElement들의 Array의 문자열 Accepts",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement |Array"
     },
     {
      "deprecated": false,
      "description": "설정될 style property.",
      "isFinal": false,
      "name": "property",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "주어진 property에 적용될 값.",
      "isFinal": false,
      "name": "val",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 어떻게 위치되었는지에 상관없이 페이지 좌표안에서 html element의 X 위치를 설정한다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "setX",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "element에 대한 X 좌표로서 사용될 값",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 어떻게 위치되었는지에 상관없이 페이지 좌표안에서 html element의 위치를 설정한다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "setXY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "새로운 위치에 대한 X와 Y값을 포함하는 array(페이지에 기반한 좌표)",
      "isFinal": false,
      "name": "pos",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "[optional] 기본적으로 처음 시도가 실패하는 경우 두번째로 위치를 설정하려고 시도한다.",
      "isFinal": false,
      "name": "noRetry",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 어떻게 위치되었는지에 상관없이 페이지 좌표안에서 html element의 Y 위치를 설정한다.\n element는 반드시 페이지 좌표를 가진 DOM 트리의 일부여야 한다.\n (display:none이거나 element가 append되어 있지 않다면 false를 반환)",
    "name": "setY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "ID로서 사용할 문자열이나, 실제 DOM 참조, HTMLElement나 ID들의 array를 허용한다.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | HTMLElement | Array"
     },
     {
      "deprecated": false,
      "description": "element에 대한 Y 좌표로서 사용될 값",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document에 픽셀 단위값을 제거하고 숫자값만 반",
    "name": "toPixelNumber",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "string",
     "isFinal": false,
     "name": "px",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "문자중에 px를 제외한 숫자 값",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "android의 toast 메시지 처럼 잠시 메시지를 잠시 출력했다가 사라진다. IE8이상 지원",
    "name": "toast",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "출력할 메시지",
      "isFinal": false,
      "name": "text",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "dom 아이디나 객체",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement"
     },
     {
      "deprecated": false,
      "description": "환경 설정값",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "sample": "default",
  "scope": "static",
  "type": "Rui.util.LDom",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Json 문자열을 파싱하는 method를 제공하고 Json 문자열로 object들을 변환한다.",
   "name": "Rui.util.LKey",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "Json 문자열을 파싱하는 method를 제공하고 Json 문자열로 object들을 변환한다.",
  "events": [],
  "methods": [],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "특수 키의 집합에 대한 키들의 코드 상수",
    "isFinal": true,
    "name": "KEY",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "방향, 위치이동, 탐색 등에 사용되는 키들의 코드 상수",
    "isFinal": true,
    "name": "NAVKEY",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Object",
    "visibility": "public"
   }
  ],
  "scope": "static",
  "type": "Rui.util.LKey",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "event가 발생할때 사용되기 위한 subscriber 정보를 저장한다.",
   "name": "Rui.util.LSubscriber",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "실행할 함수",
     "isFinal": false,
     "name": "fn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    },
    {
     "deprecated": false,
     "description": "event가 발생할때 전달될 object",
     "isFinal": false,
     "name": "obj",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "true인 경우 If true, 전달된 obj는 listener의 실행 범위가 된다.",
     "isFinal": false,
     "name": "override",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "boolean"
    },
    {
     "deprecated": false,
     "description": "true일 경우 시스템 이벤트로 등록되어 우선순위가 올라간다.",
     "isFinal": false,
     "name": "p_system",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "boolean"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "event가 발생할때 사용되기 위한 subscriber 정보를 저장한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "fn과 obj가 해당 object들의 property들과 일치하는 경우 true를 반환한다.\n 정확한 subscriber 일치를 위하여 unsubscribe method에 의해 사용된다.",
    "name": "contains",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "실행할 함수",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "event가 발생할때 전달될 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "제공된 argument들이 해당 subscriber의 signature와 일치하는 경우 true.",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 listener에 대한 실행 scope를 반환한다.\n override가 true로 설정되어 있을 경우 custom obj가 scope가 될 것이다.\n override가 object인 경우, 그것은 scope가 되며,\n 그렇지 않은 경우에는 기본 scope가 사용될 것이다.",
    "name": "getScope",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "해당 listener가 override 되지 않은 경우 사용할 scope.",
     "isFinal": false,
     "name": "defaultScope",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "event가 발생할때 실행될 callback",
    "isFinal": false,
    "name": "fn",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "function",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "callback으로 전달되는 부가적인 custom object\n the event fires",
    "isFinal": false,
    "name": "obj",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event listener에 대한 기본적인 실행 scope는 event가 생성될때\n 정의된다(일반적으로 event에 포함된 object).\n override를 true로 설정함으로 인하여 실행 scope는 subscriber로 인해\n 전달되는 custom object가 된다.\n override가 object인 경우 해당 object는 scope가 된다.",
    "isFinal": false,
    "name": "override",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean|object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시스템 이벤트인지 여부로 이벤트 우선 실행 우선순위가 올라간다.",
    "isFinal": false,
    "name": "system",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.util.LSubscriber",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LEventProvider는 event들이 이름으로 subscribe되거나 발생시키는 것이\n 가능하게 하는 인터페이스에서 CustomEvent들을 wrapping하기 위한\n Du.argument와 함께 사용되도록 디자인 된다.\n 이것은 아직 만들어지지 않았거나, 전혀 만들어지지 않을 event에\n subscribe 하기 위한 코드 구현을 가능하게 한다.",
   "name": "Rui.util.LEventProvider",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LEventProvider는 event들이 이름으로 subscribe되거나 발생시키는 것이\n 가능하게 하는 인터페이스에서 CustomEvent들을 wrapping하기 위한\n Du.argument와 함께 사용되도록 디자인 된다.\n 이것은 아직 만들어지지 않았거나, 전혀 만들어지지 않을 event에\n subscribe 하기 위한 코드 구현을 가능하게 한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "명시된 타입의 새로운 custom event를 생성한다.\n 이미 존재하는 이름의 custom event일 경우 그것은 재생성 되지 않을 것이다.\n 두 경우 모두 custom event가 반환된다.",
    "name": "createEvent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "타입 혹은 event의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "optional config params. 유효한 속성은 다음과 같다:",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnDescription": "the custom event",
    "returnType": "LCustomEvent",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이름으로 custom event를 발생시킨다.\n callback 함수들은 event가 생성될 때 지정된 scope에서 실행되며,\n 다음과 같은 parameter들을 가진다:\n   &amp;lt;ul&amp;gt;\n   &amp;lt;li&amp;gt;fire()는 첫번째 argument로 실행&amp;lt;/li&amp;gt;\n   &amp;lt;li&amp;gt;subscribe() method로 전달된 custom object&amp;lt;/li&amp;gt;\n   &amp;lt;/ul&amp;gt;",
    "name": "fireEvent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "타입 혹은 event의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "[optional] handler로 전달할 parameter들의 임의의 집합.",
      "isFinal": false,
      "name": "arguments",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "LCustomEvent.fire부터의 리턴값",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "제공된 타입의 custom event가 crateEvent에 의해 생성된 경우 true를 반환한다.",
    "name": "hasEvent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "타입 혹은 event의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "탑재한 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "scope 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "event 타입에 의해 LCustomEvent에 subscribe",
    "name": "on",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "타입이나 event의 이름",
      "isFinal": false,
      "name": "p_type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "event가 발생할때 실행할 함수",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "event가 발생할때 전달되는 object",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 경우, obj가 listener의 실행 scope가 된다.",
      "isFinal": false,
      "name": "p_override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] true일 경우 시스템 이벤트로 등록되어 우선순위가 올라간다.",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 event로 부터 하나 혹은 그 이상의 listener들을 unsubscribe 한다.",
    "name": "unOn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "타입, 혹은 event의 이름.\n                          타입을 명시하지 않은 경우, 모든 host된 event들로부터 listener를\n                          제거하기 위해 시도할 것이다.",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "unsubscribe 하기 위한 subsctibe된 함수.\n                          제공되지 않는 경우 모든 subscriber가 삭제될 것이다.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "subscribe하기 위해 전달되는 custom object.\n                        이것은 옵션이지만, 만약 제공되면 같은 여러 개의 listener들을\n                        명확하게 하는데 사용될 것이다.(예들 들어, prototype에 존재하는\n                        함수를 사용하여 많은 object를 subscribe 하는 것을 들수 있다.)",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "subscriber가 발견되고 detach 된 경우 true.",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 listener들을 제거한다.",
    "name": "unOnAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.util.LEventProvider",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LCustomEvent class는 하나 또는 그이상의 독립된 compnent에 소속될 수 있는\n 어플리케이션을 위한 event들을 정의하게 해준다.",
   "name": "Rui.util.LCustomEvent",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "event가 발생할 때 callback으로 전송되는 event의 type",
     "isFinal": false,
     "name": "type",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "event로부터 발생될 context.\n                  이것은 callback에서 해당 object를 참조한다.\n                  기본값: window object. listener는 이것을 override 할 수 있다.",
     "isFinal": false,
     "name": "oScope",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "debugsystem에의 writing으로부터의 event를 방지하기 위해서는 true를 전송",
     "isFinal": false,
     "name": "silent",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "boolean"
    },
    {
     "deprecated": false,
     "description": "custom event subscriber가 받을 signature.\n                  Rui.util.LCustomEvent.LIST 혹은 Rui.util.LCustomEvent.FLAT.\n                  기본은 Rui.util.LCustomEvent.LIST 이다.",
     "isFinal": false,
     "name": "signature",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LCustomEvent class는 하나 또는 그이상의 독립된 compnent에 소속될 수 있는\n 어플리케이션을 위한 event들을 정의하게 해준다.",
  "events": [{
   "deprecated": false,
   "description": "Csutom event들은 event에 새로운 subscriber가 있을때 마다 발생되는\n custom event를 제공한다.\n 그리고 새로운 subscriber를 가지고 이미 fire된\n non-repeating 이벤트가 있는 경우를 제어하는 기회를 제공한다.",
   "name": "subscribeEvent",
   "parameters": [
    {
     "deprecated": false,
     "description": "실행할 function",
     "isFinal": false,
     "name": "fn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    },
    {
     "deprecated": false,
     "description": "event가 발생할때 전달될 object An object to be passed along when the event fires",
     "isFinal": false,
     "name": "obj",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "만약 true면, 전달된 obj가 listener의 실행 scope가 된다.\n                                   만약 object면, 그 object가 실행 scope가 된다.",
     "isFinal": false,
     "name": "override",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "boolean|Object"
    }
   ],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "Notifies the subscribers.\n callback 함수는 event가 생성될때 특정 scope로 부터 실행될 것이다.\n event는 아래와 같은 parameter를 가진다:\n   &amp;lt;ul&amp;gt;\n   &amp;lt;li&amp;gt;event의 type&amp;lt;/li&amp;gt;\n   &amp;lt;li&amp;gt;array로서 실행된 모든 arguments fire()&amp;lt;/li&amp;gt;\n   &amp;lt;li&amp;gt;(만약 있다면,) subscribe() method로 전달된 custom object&amp;lt;/li&amp;gt;\n   &amp;lt;/ul&amp;gt;",
    "name": "fire",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "handler로 전달할 parameter들의 임의 set",
     "isFinal": false,
     "name": "arguments",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object*"
    }],
    "returnDescription": "만약 subscriber가 false 를 반환하면 false 이고 아니면 true",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Subscribes the caller to this event\n 이 event로의 caller 를 명시한다.",
    "name": "on",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "실행할 function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "event 발생시에 전달될 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "만약 true면, 전달된 obj가 listener의 실행 scope가 된다.\n                                   만약 object면, 그 object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|Object"
     },
     {
      "deprecated": false,
      "description": "[optional] true일 경우 시스템 이벤트로 등록되어 우선순위가 올라간다.",
      "isFinal": false,
      "name": "p_system",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "unOns subscribers.",
    "name": "unOn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삭제하기 위하여 명시된 function, 만약 제공되지 않으면,\n                       모든 function이 삭제될 것이다.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "subscribe로 전달된 custom object.\n                        이것은 option 이지만, 만약 명확한 여러 listener들에서 사용되게\n                        제공되는 것은 모두 같을 것이다.\n                        (e.g., prototype상에서 존재하는 function을 사용하는\n                        많은 object를 명시한다.)",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "subscriber가 있고 detach 되어 있으면 true.",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 listener들을 삭제한다.",
    "name": "unOnAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "unsubscribe 된 listener의 개수",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "subscriber listener signature 상수.\n FLAT type은 두가지 parameter들을 반환한다: 발생할때 전달되는 첫번째 argument와\n optional custom object",
    "isFinal": false,
    "name": "FLAT",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "subscriber listener signature 상수.\n LIST type은 세가지 parameter들을 반환한다: event type, 발생할때 전달되는 args의 array,\n 그리고 optional custom object.",
    "isFinal": false,
    "name": "LIST",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "exception이 발생했을때 subscriber 스택의 나머지를 실행 가능하게 하기 위하여\n subscriber exception들이 잡힌다. 가장 최근의 exception이 이 propery에 저장된다.",
    "isFinal": false,
    "name": "lastError",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Error",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event가 기본적으로 발생할 scope. 기본값은 window obj 까지",
    "isFinal": false,
    "name": "scope",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Custom event들은 event subscriber들에게 제공되는 두가지 스타일의 인자들을 지원한다.\n &amp;lt;ul&amp;gt;\n &amp;lt;li&amp;gt;Rui.util.LCustomEvent.LIST:\n   &amp;lt;ul&amp;gt;\n   &amp;lt;li&amp;gt;param1: event name&amp;lt;/li&amp;gt;\n   &amp;lt;li&amp;gt;param2: 발생시키기 위해 전송되는 argument들의 array&amp;lt;/li&amp;gt;\n   &amp;lt;li&amp;gt;param3: &amp;lt;optional&amp;gt; subscriber에 의해 제공되는 custom object&amp;lt;/li&amp;gt;\n   &amp;lt;/ul&amp;gt;\n &amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;Rui.util.LCustomEvent.FLAT\n   &amp;lt;ul&amp;gt;\n   &amp;lt;li&amp;gt;param1: 발생시키기 위해여 전달되는 첫번째 argument.\n           만약 여러 parameter들을 전달하고자 한다면, array나 object literal을 사용한다.&amp;lt;/li&amp;gt;\n   &amp;lt;li&amp;gt;param2: &amp;lt;optional&amp;gt; subscriber에 의해 제공되는 custom object&amp;lt;/li&amp;gt;\n   &amp;lt;/ul&amp;gt;\n &amp;lt;/li&amp;gt;\n &amp;lt;/ul&amp;gt;",
    "isFinal": false,
    "name": "signature",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본적으로 모든 custom event들은 debug build에서 logging 되며,\n 이 event를 위해 debug output을 비활성화 하기 위해선 true로 설정한다.",
    "isFinal": false,
    "name": "silent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event가 발생할 때 subcriber들에게 반환되는 event의 type.",
    "isFinal": false,
    "name": "type",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.util.LCustomEvent",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "event 유틸리티는 event listener들과 event cleansing을 추가하거나 삭제하는\n 함수들을 제공한다. 이것은 또한 unload event 동안 등록되는 listener들을\n 제거하려고 시도한다.",
   "name": "Rui.util.LEvent",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "event 유틸리티는 event listener들과 event cleansing을 추가하거나 삭제하는\n 함수들을 제공한다. 이것은 또한 unload event 동안 등록되는 listener들을\n 제거하려고 시도한다.",
  "events": [{
   "deprecated": false,
   "description": "dom을 처음 사용할때 발생하는 custom event",
   "name": "DOMReadyEvent",
   "parameters": [],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "blur event handler를 추가한다. (focusout event는 Internet Explorer, WebKit,\n Gecko, Opera에 대한 capture-event, focus에서 사용된다.)",
    "name": "addBlurListener",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener에 할당할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler에 parameter로서 전달될 임의의 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 결우, obj가 listener의 실행 scope가 된다.\n                             object일 경우, object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean|object"
     }
    ],
    "returnDescription": "action이 성공이거나 defred일 경우 true,",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus event handler를 추가한다. (focusin event는 Internet Explorer, WebKit,\n Gecko, Opera에 대한 capture-event, focus에서 사용된다.)",
    "name": "addFocusListener",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener에 할당할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler에 parameter로서 전달될 임의의 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 결우, obj가 listener의 실행 scope가 된다.\n                             object일 경우, object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean|object"
     }
    ],
    "returnDescription": "action이 성공이거나 defred일 경우 true,",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event handler를 추가한다.",
    "name": "addListener",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener에 할당할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "추가할 event의 타입",
      "isFinal": false,
      "name": "sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler에 parameter로서 전달될 임의의 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 결우, obj가 listener의 실행 scope가 된다.\n                             object일 경우, object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean|object"
     },
     {
      "deprecated": false,
      "description": "capture or bubble phase",
      "isFinal": false,
      "name": "capture",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolen"
     }
    ],
    "returnDescription": "action이 성공이거나 defred일 경우 true,",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 이미 ID가 없는 경우 element에 대한 유일한 ID를 생성한다.",
    "name": "generateId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "element의 결과 id",
    "returnType": "string",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event를 위한 문자코드를 반환한다.",
    "name": "getCharCode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnDescription": "event의 문자코드",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "window object나 caller의 argument 혹은 callstack에서의 또 다른\n method의 argument에서 event를 찾는다.\n 이것은 event 매니저를 통해 등록된 event들을 위해 자동으로 실행된다.\n 그리고 implementer는 일반적으로 전혀 이 함수를 실행할 필요가 없다.",
    "name": "getEvent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "handler로부터의 event parameter",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Event"
     },
     {
      "deprecated": false,
      "description": "listener가 첨부될 element",
      "isFinal": false,
      "name": "boundEl",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     }
    ],
    "returnDescription": "the event",
    "returnType": "Event",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "addListener를 통해 주어진 element에 연결된 모든 listener를 반환한다.\n 부가적으로 반환될 event의 특정 타입을 명시할 수 있다.",
    "name": "getListeners",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "검사할 element나 element id",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement|string"
     },
     {
      "deprecated": false,
      "description": "반환할 listener의 optional 타입.\n                 남겨둘 경우, 모든 listener들이 반환될 것이다.",
      "isFinal": false,
      "name": "sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnDescription": "listener. 다음 필드들을 포함한다:",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the event's pageX\n event의 pageX를 반환한다.",
    "name": "getPageX",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnDescription": "event의 pageX",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event의 pageY를 반환한다.",
    "name": "getPageY",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnDescription": "event의 pageY",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event의 연관된 target을 반환한다.",
    "name": "getRelatedTarget",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnDescription": "event의 연관된 target",
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "event의 target element를 반환한다.\n Safari 브라우저는 종종 텍스트 노드를 제공하며, 이것은 다른 브라우저들처럼 동작하는\n 텍스트 노드의 paranet로 자동적으로 resolve 된다.",
    "name": "getTarget",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "the event",
      "isFinal": false,
      "name": "ev",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Event"
     },
     {
      "deprecated": false,
      "description": "true로 설정되면, target이 텍스트 노드일 경우,",
      "isFinal": false,
      "name": "resolveTextNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "the event's target",
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event의 시간을 반환한다. 시간이 포함되어 있지 않은 경우,\n event는 현재 시간을 사용하도록 변경된다.",
    "name": "getTime",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnDescription": "event의 시간",
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "index된 array로 pageX와 pageY rpoperty들을 반환한다.",
    "name": "getXY",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnDescription": "event의 pageX와 pageY property들 [x, y]",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "navKey 여부를 리턴한다.",
    "name": "isNavKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "specialkey 여부를 리턴한다.",
    "name": "isSpecialKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Rui.util.LEvent.on는 addListener를 위한 alias이다.",
    "name": "on",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener에 할당할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "추가할 event의 타입",
      "isFinal": false,
      "name": "sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler에 parameter로서 전달될 임의의 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 결우, obj가 listener의 실행 scope가 된다.\n                             object일 경우, object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean|object"
     },
     {
      "deprecated": false,
      "description": "capture or bubble phase",
      "isFinal": false,
      "name": "capture",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolen"
     }
    ],
    "returnDescription": "action이 성공이거나 defred일 경우 true,",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "제공된 id의 항목이 발견됐을 때 제공된 callback을 실행한다.\n 이것은 페이지 로딩시 가능한 빨리 동작을 실행하는데\n 사용될 수 있음을 의미한다.\n 이것을 초기 페이지 로딩 이후에 사용할 경우, element에 대한\n 고정된 시간으로 polling을 할 것이다.\n polling 횟수와 주기는 config 가능하다.\n 기본적으로 10초 동안 polling 할 것이다.\n &amp;lt;p&amp;gt;callback은 하나의 parameter를 가지고 실행된다:\n custom object parameter를 제공하는 경우.&amp;lt;/p&amp;gt;",
    "name": "onAvailable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element의 id나, 찾아야 할 id들의 array",
      "isFinal": false,
      "name": "p_id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string||string[]"
     },
     {
      "deprecated": false,
      "description": "element를 찾았을때, 실행할 함수.",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "p_fn의 parameter로서 전달될 optional object.",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "true가 설정될 경우, p_fn은 p_obj의 scope로\n                   실행할 것이며, object가 설정될 경우, 해당 object의 scope로\n                   실행할 것이다.",
      "isFinal": false,
      "name": "p_override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|object"
     },
     {
      "deprecated": false,
      "description": "노드의 준비성을 체크한다.(onContentReady)",
      "isFinal": false,
      "name": "child",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Rui.util.LEvent.onBlur is an alias for addBlurListener\n Rui.util.LEvent.onBlur는 addBlurListener 위한 alias이다.",
    "name": "onBlur",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener에 할당할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler에 parameter로서 전달될 임의의 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 결우, obj가 listener의 실행 scope가 된다.\n                             object일 경우, object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean|object"
     }
    ],
    "returnDescription": "action이 성공이거나 defred일 경우 true,",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "onAvailable과 같은 방식으로 작동하지만 추가적으로, 사용가능한 element의\n 내용이 변경하기 위해 안전한지를 결정하기 위하여 연결된 element들의\n 상태를 체크한다.\n\n &amp;lt;p&amp;gt;callback은 하나의 parameter를 가지고 실행된다:\n custom object parameter를 제공하는 경우.&amp;lt;/p&amp;gt;",
    "name": "onContentReady",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "찾아야 할 element의 id",
      "isFinal": false,
      "name": "p_id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "element가 준비되었을때 실행할 함수",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "p_fn의 parameter로서 전달될 optional object",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "true가 설정될 경우, p_fn은 p_obj의 scope로\n                   실행할 것이며, object가 설정될 경우, 해당 object의 scope로\n                   실행할 것이다.",
      "isFinal": false,
      "name": "p_override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|object"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM이 처음으로 사용가능할 때 제공된 callback을 실행한다.\n 이것은 DOMReady event가 발생된 이후에 호출될 경우 즉시 실행될 것이다.",
    "name": "onDOMReady",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element를 찾았을 때 실행할 함수",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "p_fn의 parameter로서 전달될 optional object",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "true가 설정될 경우, p_fn은 p_obj의 scope로\n                   실행할 것이며, object가 설정될 경우, 해당 object의 scope로\n                   실행할 것이다.",
      "isFinal": false,
      "name": "p_scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|object"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Rui.util.LEvent.onFocus는 addFocusListener 위한 alias이다.",
    "name": "onFocus",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener에 할당할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler에 parameter로서 전달될 임의의 object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "true일 결우, obj가 listener의 실행 scope가 된다.\n                             object일 경우, object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean|object"
     }
    ],
    "returnDescription": "action이 성공이거나 defred일 경우 true,",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event의 기본 동작을 방지한다.",
    "name": "preventDefault",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "addListener를 통해 주어진 element에 연결된 모든 listener를 제거한다.\n 부가적으로 노드의 chidren도 제거될 수 있다.\n 또한 삭제될 event의 특정 타입을 명시할 수 있다.",
    "name": "purgeElement",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "제거할 element",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "element의 children을 재귀적으로 제거한다.\n                  주의해서 사용해야 한다.",
      "isFinal": false,
      "name": "recurse",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "제거할 listener의 optional 타입.\n                 남겨둘 경우, 모든 listener들이 삭제될 것이다.",
      "isFinal": false,
      "name": "sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "blur event listener를 삭제한다.",
    "name": "removeBlurListener",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener로부터 삭제할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method.\n  fn이 undefined일 경우 event의 type에 대한 모든 event handler들은 삭제된다.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "unbind가 성공이면 true, 그외에는 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus event listener를 삭제한다.",
    "name": "removeFocusListener",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener로부터 삭제할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method.\n  fn이 undefined일 경우 event의 type에 대한 모든 event handler들은 삭제된다.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "unbind가 성공이면 true, 그외에는 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event listener를 삭제한다.",
    "name": "removeListener",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listener로부터 삭제할 id나\n  element reference 혹은 id나 element들의 collection.",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement|Array|NodeList"
     },
     {
      "deprecated": false,
      "description": "삭제할 event의 타입",
      "isFinal": false,
      "name": "sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event가 수행하는 method.\n  fn이 undefined일 경우 event의 type에 대한 모든 event handler들은 삭제된다.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "unbind가 성공이면 true, 그외에는 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "어떤 경우에는 일부 브라우저들은 targeting 된 실제 element 내부의\n 텍스트 노드를 반환할 것이다.\n 이런 normalizes는 getTarget and getRelatedTarget에 대한 값을 반환한다.",
    "name": "resolveTextNode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "resolve 할 노드",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "the normized node",
    "returnType": "HTMLElement",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "stopPropagation와 preventDefault에 대해 수행하는 method",
    "name": "stopEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event 확대를 중지한다.",
    "name": "stopPropagation",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event",
     "isFinal": false,
     "name": "ev",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "addListener로 전달되는 original capture parameter",
    "isFinal": true,
    "name": "CAPTURE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document가 처음으로 사용할 수 있을때 True",
    "isFinal": false,
    "name": "DOMReady",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "addListener로 전달되는 original obj",
    "isFinal": true,
    "name": "OBJ",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "addListener로 전달되는 original scope parameter",
    "isFinal": true,
    "name": "OVERRIDE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "millisecond 단위의 polling 간격",
    "isFinal": true,
    "name": "POLL_INTERVAL",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document가 로딩되고 event가 요청되는 시점에서 DOM에 있지 않은\n element들을 찾기 위한 횟수.\n 기본값은 2000@amp;20 ms 이며, 40초 혹은 모든 outstanding handler들이\n 바운딩 되는(둘중 먼저 오는) 동안 polling 될 것이다.",
    "isFinal": true,
    "name": "POLL_RETRYS",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event의 타입, 정수형 상수",
    "isFinal": true,
    "name": "TYPE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "callback에의 parameter로서 반환될 사용자에 의해 전달되는 object, 정수형 상수.\n listener들을 unload 하기 위해 명시된다.",
    "isFinal": true,
    "name": "UNLOAD_OBJ",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scope 수정 및 정리를 위한 함수 wrapping, 정수형 상수",
    "isFinal": true,
    "name": "WFN",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "addListener/removeListener는 예기치 않은 시나리오에서 에러를 throw 할수 있다.\n 이런 에러들은 억제되며, hethod는 false를 반환하고, 해당 property를 설정한다.",
    "isFinal": false,
    "name": "lastError",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Error",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "custom event들의 subscriber에 의해 전달된 에러들이 캐치되고,\n 에러 제세지는 debug 콘솔에 출력된다.\n 이 property를 true로 설정할 경우, 에러를 re-throw 할 것이다.",
    "isFinal": false,
    "name": "throwErrors",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "scope": "static",
  "type": "Rui.util.LEvent",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Connection Manager singleton 패턴은 비동기화 transaction들을 만들고 관리하기 위한 method를 제공한다.\n 기본적으로 ajax 호출은 Rui.ajax로 호출하고 내부 콤포넌트 및 request 헤더값을 제어할 때는 제외하면 이 객체는 바로 사용하지 않는다.",
   "name": "Rui.LConnect",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Connection Manager singleton 패턴은 비동기화 transaction들을 만들고 관리하기 위한 method를 제공한다.\n 기본적으로 ajax 호출은 Rui.ajax로 호출하고 내부 콤포넌트 및 request 헤더값을 제어할 때는 제외하면 이 객체는 바로 사용하지 않는다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "readyState 4 상태에 도달하지 못했을 경우 transaction을 종료시키기 위한 method.",
    "name": "abort",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "asyncRequest에 의해 반환되는 connection object",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "사용자 정의된 callback object",
      "isFinal": false,
      "name": "callback",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     },
     {
      "deprecated": false,
      "description": "callback timeout의 결과 abort 경우를 나타내기 위한 bollean값",
      "isFinal": false,
      "name": "isTimeout",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "XHR object를 통한 비동기 request를 초기화 하기 위한 method.",
    "name": "asyncRequest",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "HTTP transaction method",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "확실히 검증된 resource의 경로",
      "isFinal": false,
      "name": "uri",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "사용자 정의된 callback 함수나 object",
      "isFinal": false,
      "name": "callback",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "callback"
     },
     {
      "deprecated": false,
      "description": "POST body",
      "isFinal": false,
      "name": "postData",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string|object"
     },
     {
      "deprecated": false,
      "description": "config",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnDescription": "connection object를 반환",
    "returnType": "object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "각 transaction에 대한 custom HTTP header들을 초기화 하는 method.",
    "name": "initHeader",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "HTTP header label",
      "isFinal": false,
      "name": "label",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "HTTP header 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "특정 header가 각 transaction에\n 자동적으로 전송되는 기본 header인지에 대한 여부",
      "isFinal": false,
      "name": "isDefault",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "transaction이 아직 처리중인지에 대해서 결정한다.",
    "name": "isCallInProgress",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "asyncRequest에 의해 반환되는 connection object",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본 HTTP header object를 재설정한다.",
    "name": "resetDefaultHeaders",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본 POST header를 override 하기 위한 member.",
    "name": "setDefaultPostHeader",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "default header를 설정하고 사용함. - true or false",
     "isFinal": false,
     "name": "b",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본 transaction header를 override 하기 위한 member.",
    "name": "setDefaultXhrHeader",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "default header를 설정하고 사용함. - true or false",
     "isFinal": false,
     "name": "b",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이 method는 form label과 값의 짝을 조합하고, encoding된 문자열을 생성한다.\n asyncRequest()는 'application/x-www-form-urlencoded'의 HTTP header Content-type을\n 가진 transaction을 자동적으로 초기화 할 것이다.",
    "name": "setForm",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute id나 이름 혹은 form object",
      "isFinal": false,
      "name": "form",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string || object"
     },
     {
      "deprecated": false,
      "description": "file upload 가능 여부",
      "isFinal": false,
      "name": "optional",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "enable IE에서의 SSL을 통한 file upload 가능 여부",
      "isFinal": false,
      "name": "optional",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "HTML form field 이름과 값의 짝으로 이루어진 문자열",
    "returnType": "string",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본 polling 간격을 변경하기 위한 member.",
    "name": "setPollingInterval",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "milliseconds 단위의 polling 간격",
     "isFinal": false,
     "name": "i",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Method for initiating an asynchronous request via the XHR object.",
    "name": "syncRequest",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "HTTP transaction method",
      "isFinal": false,
      "name": "method",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "확실히 검증된 resource의 경로",
      "isFinal": false,
      "name": "uri",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "사용자 정의된 callback 함수나 object",
      "isFinal": false,
      "name": "callback",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "callback"
     },
     {
      "deprecated": false,
      "description": "POST body",
      "isFinal": false,
      "name": "postData",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string|object"
     },
     {
      "deprecated": false,
      "description": "config",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnDescription": "connection object를 반환",
    "returnType": "object",
    "sample": "default",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "sample": "default",
  "scope": "static",
  "type": "Rui.LConnect",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Rui.util.LAttribute instance를 제공하고 관리한다.",
   "name": "Rui.util.LAttributeProvider",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "Rui.util.LAttribute instance를 제공하고 관리한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "attribute의 현재 값을 반환한다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반환될 attribute의 값",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "attribute의 현재 값",
    "returnType": "Any",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute 이름들에 대한 array를 반환한다.",
    "name": "getAttributeKeys",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "attribute 이름들의 array",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 값을 현재값으로 설정한다.",
    "name": "refresh",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "refresh할 attribute",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String | Array"
     },
     {
      "deprecated": false,
      "description": "change event들의 억제 여부",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "LAttributeProvider instance에 attribute를 추가한다.",
    "name": "register",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute의 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "attribute의 property를 포함하고 있는 key-value map",
      "isFinal": false,
      "name": "map",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 attribute의 값을 초기값으로 재설정한다.",
    "name": "resetValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute의 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "change event들의 억제 여부",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "값의 설정 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "config의 값을 설정한다.",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute의 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "attribute에 적용할 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Any"
     },
     {
      "deprecated": false,
      "description": "change event들의 억제 여부",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "값의 설정 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute insatance의 property들을 업데이트 하거나 설정한다.",
    "name": "setAttributeConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute의 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "attribute property들의 key-value map",
      "isFinal": false,
      "name": "map",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "초기 설정 적용 여부",
      "isFinal": false,
      "name": "init",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "여러 attribute의 값을 설정한다.",
    "name": "setAttributes",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute들의 key-value map",
      "isFinal": false,
      "name": "map",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "change event들의 억제 여부",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [{
   "deprecated": false,
   "description": "attribute config의 key-value map",
   "isFinal": false,
   "name": "_configs",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Object",
   "visibility": "protected"
  }],
  "scope": "instance",
  "type": "Rui.util.LAttributeProvider",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LAttribute의 configuration을 제공한다.",
   "name": "Rui.util.LAttribute",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "initial LAttribute.",
     "isFinal": false,
     "name": "The",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "instance의 owner.",
     "isFinal": false,
     "name": "LAttribute",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.util.LAttributeProvider"
    }
   ],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LAttribute의 configuration을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "attribute의 현재 값을 받는다.",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "attribute의 현재값",
    "returnType": "any",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 값으로 값을 재설정한다.\n 값들이 실제 property와 동기화 되지 않았을 경우에 유용하다.",
    "name": "refresh",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "값의 설정 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "초기 config 상태로 attribute config를 재설정 한다.",
    "name": "resetConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Resets the value to the initial config value.\n 초기 config 값을 재설정한다.",
    "name": "resetValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "값의 설정 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 값을 설정하고 beforeChange와 change event를 발생시킨다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute에 적용되는 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Any"
     },
     {
      "deprecated": false,
      "description": "[optional] 만약 true면, change event를 발생시키지 않는다.",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "값의 설정 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "attribute의 값을 설정할때 사용하는 method.\n method는 오직 인자로만 새 값을 받는다.",
    "isFinal": false,
    "name": "method",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 이름",
    "isFinal": false,
    "name": "name",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 owner",
    "isFinal": false,
    "name": "owner",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.util.LAttributeProvider",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 read only 여부",
    "isFinal": false,
    "name": "readOnly",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 값을 설정할때 사용하는 validator",
    "isFinal": false,
    "name": "validator",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "attribute의 값",
    "isFinal": false,
    "name": "value",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "atrribute의 written once 여부",
    "isFinal": false,
    "name": "writeOnce",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.util.LAttribute",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Element는 event listener들을 쉽게 추가하고, dom method들을 사용하거나 sttribute를 관리하는 wrapper object를 제공한다.\n &amp;lt;br/&amp;gt;sample : &amp;lt;a href=\"/sample/general/base/elementSample.html\"&amp;gt;/sample/general/base/elementSample.html&amp;lt;/a&amp;gt;",
   "name": "Rui.LElement",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "LElement를 표현하는 html element",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "초기 config 이름과 값들의 key-value map",
     "isFinal": false,
     "name": "map",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Element는 event listener들을 쉽게 추가하고, dom method들을 사용하거나 sttribute를 관리하는 wrapper object를 제공한다.\n &amp;lt;br/&amp;gt;sample : &amp;lt;a href=\"/sample/general/base/elementSample.html\"&amp;gt;/sample/general/base/elementSample.html&amp;lt;/a&amp;gt;",
  "events": [
   {
    "deprecated": false,
    "description": "Fires after the Element is appended to another Element.",
    "name": "appendTo",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 로드시 dom 객체가 로드되면 수행되는 이벤트",
    "name": "available",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "Dom에 css를 추가한다.",
    "name": "addClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "추가할 className",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 anchor 포인트들로 연결되는 다른 element를 가지고 해당 element를 정렬한다.\n 다른 element가 socument인 경우 그것은 viewport(화면상의 화상표시 영역)로 정렬한다.\n 다음은 지원되는 anchor 위치들의 모든 목록이다: tl, t, tr, l, c, r, bl, b, br",
    "name": "alignTo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "정렬할 element",
      "isFinal": false,
      "name": "element",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Mixed"
     },
     {
      "deprecated": false,
      "description": "정렬할 위치",
      "isFinal": false,
      "name": "position",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) [x, y]에 의한 위치 offset",
      "isFinal": false,
      "name": "offsets",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "animation 효과를 적용한다.",
    "name": "animate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "animation 효과를 적용할 정보",
     "isFinal": false,
     "name": "anim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom객체 하위에 child dom객체를 붙인다.",
    "name": "appendChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "추가할 element.",
     "isFinal": false,
     "name": "child",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.LElement || HTMLElement"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "ajax를 호출하여 해당 결과를 현재 dom객체에 추가한다.",
    "name": "appendChildByAjax",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "호출시 속성 (ajax 속성)",
     "isFinal": false,
     "name": "option",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "제공된 parent 노드에 HTMLElement를 추가한다.",
    "name": "appendTo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "추가될 노드",
      "isFinal": false,
      "name": "parentNode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement | Element"
     },
     {
      "deprecated": false,
      "description": "이전에 삽입할 부가적인 노드",
      "isFinal": false,
      "name": "before",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement | Element"
     }
    ],
    "returnDescription": "추가된 DOM element",
    "returnType": "HTMLElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "style 정보를 모두 적용한다.",
    "name": "applyStyles",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "적용할 style정보",
     "isFinal": false,
     "name": "styles",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object|Function"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Heigth를 자동으로 셋팅한다.",
    "name": "autoHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자신의 부모의 하위 dom들의 height를 제외하고 남은 공간을 계산하여 자신의 height에 적용한다.",
    "name": "availableHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] 기준이 되는 부모 객체의 id나 dom",
      "isFinal": false,
      "name": "parentId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement"
     },
     {
      "deprecated": false,
      "description": "[optional] 추가 여유 공간을 확보하기 위해 마이너스할 높이",
      "isFinal": false,
      "name": "margin",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element에 blur를 시도한다. 모든 실행들은 캐치되거나 무시된다.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "viewport의 element나 다른 element를 중앙에 위치시킨다.",
    "name": "center",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) element 중앙에 위치시킬 element",
     "isFinal": false,
     "name": "centerIn",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Mixed"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement dom 객체의 click 메소드를 호출한다.",
    "name": "click",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 overflow 설정을 저장하고 element의 overflow를 고정시킨다. - 삭제하기 위해서 unclip을 사용한다.",
    "name": "clip",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 사용 불가능하게 하는 메소드",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 사용 가능하게 하는 메소드",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 현재 node중 selector로 지정된 child node만 배열로 리턴한다.",
    "name": "filter",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "CSS selector 문자열",
     "isFinal": false,
     "name": "selector",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "전달된 simple selector의 match를 위한 현재 node와 parent node를 LElement로 리턴한다.(예: div.some-class or span:first-child)",
    "name": "findParent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "test를 위한 simple selector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) element나 number로서 검색하기 위한 depth max값 (defaults to 10 || document.body)",
      "isFinal": false,
      "name": "maxDepth",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number/Mixed"
     }
    ],
    "returnDescription": "LElement 객체",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "전달된 simple selector의 match를 위한 parent node들을 찾는다.(예: div.some-class or span:first-child)",
    "name": "findParentNode",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "test를 위한 simple selector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) element나 number로서 검색하기 위한 depth max값 (defaults to 10 || document.body)",
      "isFinal": false,
      "name": "maxDepth",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number/Mixed"
     },
     {
      "deprecated": false,
      "description": "(optional) DOM node 대신 Rui.LElement object를 반환하기 위해서는 True",
      "isFinal": false,
      "name": "returnEl",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "매치되는 DOM node(매치되는 값을 찾지 못하면 null)",
    "returnType": "HTMLElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element에 포커싱을 시도한다. 모든 실행들은 캐치되거나 무시된다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 anchor 위치에 의해 명시된 x,y 좌표를 가져온다.",
    "name": "getAnchorXY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "(optional) 명시된 anchor 위치(기본적으로 'c').",
      "isFinal": false,
      "name": "anchor",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) 페이지 좌표대신 local (element top/left-relative) anchor 위치를\n 가져오기 위해서는 true\n of page coordinates",
      "isFinal": false,
      "name": "local",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "(optional) anchor 위치를 계산하기 위해 사용되는 size를 포함한 object\n {width: (target width), height: (target height)} (기본적으로 element의 현재 사이즈)",
      "isFinal": false,
      "name": "size",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "[x, y] element의 x와 y 좌표를 포함하는 array",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement dom 객체의 attribute 속성값을 리턴한다.",
    "name": "getAttribute",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "key값",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "attribute 속성 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 side에 대한 border의 width를 가져온다.",
    "name": "getBorderWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "여러값들을 추가하기 위해 t, l, r, b나 이런 것들의 어떤 조합도 가능하다.",
     "isFinal": false,
     "name": "side",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "추가적으로 전달된 side들의 width",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 bottom Y 좌표를 가져온다.(element의 Y 위치 + element height)",
    "name": "getBottom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "페이지 좌표 대신 local css 위치를 가져오기 위해서는 true",
     "isFinal": false,
     "name": "local",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement chid 노드들의 array를 반환한다.",
    "name": "getChildren",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "HTMLElement들의 static array",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 Dom으로 생성된 콤로넌트 인스턴스를 리턴한다.",
    "name": "getComponent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "LUICompenent를 상속받은 UI 콤포넌트",
    "returnType": "LUIComponent",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 width와 height offset을 반환한다.  부모가 안보이면 계산되지 못한다. 0,0으로 나와 계신되지 못 한다. 이 메소드를 이용하면 display 속성이 none dom의 width와 height도 리턴된다.",
    "name": "getDimensions",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "(optional) border와 padding을 뺀 width와 height를 얻으려면 true",
      "isFinal": false,
      "name": "contentOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "(optional) 0일 경우 style 값도 검사",
      "isFinal": false,
      "name": "checkStyle",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "element의 width와 height",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom method를 위한 Wrapper.",
    "name": "getElementsByClassName",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "collect할 className",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) class name과 함께 사용할 태그",
      "isFinal": false,
      "name": "tag",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "HTMLElement들의 array",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement method를 위한 Wrapper.",
    "name": "getElementsByTagName",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "collect 할 tag 이름",
     "isFinal": false,
     "name": "tag",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "DOM element들의 collection.",
    "returnType": "HTMLCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 height offset을 반환한다.",
    "name": "getHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) height의 border, padding의 음수값을 가져오려면 True",
     "isFinal": false,
     "name": "contentHeight",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "element의 height",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자신의 dom이 보이지 않아도 부모들중 보이는 dom을 찾아서 height 값을 리턴한다.",
    "name": "getHiddenHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 최대 부모 검색 갯수",
     "isFinal": false,
     "name": "maxDepth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "height 값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "자신의 dom이 보이지 않아도 부모들중 보이는 dom을 찾아서 width 값을 리턴한다.",
    "name": "getHiddenWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 최대 부모 검색 갯수",
     "isFinal": false,
     "name": "maxDepth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "width 값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "innerHTML에 html 내용을 리턴하는 메소드",
    "name": "getHtml",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "html 내용",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "left X 좌표를 가져온다.",
    "name": "getLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "페이지 좌표 대신 local css 위치를 가져오기 위해서는 true",
     "isFinal": false,
     "name": "local",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 side에 대한 margin의 width를 가져온다.",
    "name": "getMargins",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "여러값들을 추가하기 위하여 t, l, r, b나 이것들의 조합이 될 수 있음.",
     "isFinal": false,
     "name": "side",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "함께 추가되어 전달된 side들의 padding",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "다음에 sibling 되어 있는 HTMLElement를 반환한다.",
    "name": "getNextSibling",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "HTMLElement나 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 side에 대한 padding의 width를 가져온다.",
    "name": "getPadding",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "여러값들을 추가하기 위해 t, l, r, b나 이런 것들의 어떤 조합도 가능하다.",
     "isFinal": false,
     "name": "side",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "추가적으로 전달된 side들의 padding",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이전에 sibling되어 있는 HTMLElement를 반환한다.",
    "name": "getPreviousSibling",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "HTMLElement나 찾지 못하는 경우 null",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 element의 region 위치를 반환한다.\n element는 반드시 region을 가진 DOM tree의 일부분이어야 한다\n (diplay:none 혹은 element들이 추가되어 있지 않으면 false를 반환한다).",
    "name": "getRegion",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "'top, left, bottom, right' 멤버데이터를 포함하는 region 인스턴스의 array나 region",
    "returnType": "Region | Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 right X 좌표를 가져온다.(element의 X 위치 + element width)",
    "name": "getRight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "페이지 좌표 대신 local css 위치를 가져오기 위해서는 true",
     "isFinal": false,
     "name": "local",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 현재 스크롤 위치를 반환한다.",
    "name": "getScroll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "{left: (scrollLeft), top: (scrollTop)} 포맷의  스크롤 위치를 포함한 object",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 style을 가져오는 메소드",
    "name": "getStyle",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "조회할 style property",
     "isFinal": false,
     "name": "property",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "property의 현재값",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 style들을 가져오는 메소드(json 형 객체)",
    "name": "getStyles",
    "parameterType": "METHOD",
    "parameters": [],
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "top Y 좌표를 가져온다.",
    "name": "getTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "페이지 좌표 대신 local css 위치를 가져오기 위해서는 true",
     "isFinal": false,
     "name": "local",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 value값을 리턴한다.",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "객체에 들어 있는 값",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "targetEl이 안보이는 경우 scroll 이동하기",
    "name": "getVisibleScrollXY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "x축 자동 scroll 여부, default는 true",
      "isFinal": false,
      "name": "movingX",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "y축 자동 scroll 여부, default는 true",
      "isFinal": false,
      "name": "movingY",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "left의 padding값",
      "isFinal": false,
      "name": "paddingLeft",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "[x,y] child의 변경된 좌표 return",
    "returnType": "array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 width offset을 반환한다.",
    "name": "getWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) width의 border, padding의 음수값을 가져오려면 True",
     "isFinal": false,
     "name": "contentWidth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "element의 width",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 좌표에 기반한 element의 현재 X 위치를 가져온다.\n element는 반드시 페이지 좌표를 가지는 DOM 트리의 부분이어야 한다\n (display:none 혹은 element들이 추가되어 있지 않으면 false를 반환).",
    "name": "getX",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "element의 X 위치",
    "returnType": "Number | Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 좌표에 기반한 element의 현재 위치를 가져온다.",
    "name": "getXY",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "element의 XY 위치",
    "returnType": "Array",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지 좌표에 기반한 element의 현재 Y 위치를 가져온다.\n element는 반드시 페이지 좌표를 가지는 DOM 트리의 부분이어야 한다\n (display:none 혹은 element들이 추가되어 있지 않으면 false를 반환).",
    "name": "getY",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "element의 Y 위치",
    "returnType": "Number | Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement method를 위한 Wrapper.",
    "name": "hasChildNodes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "element가 child node들을 가지고 있는지에 대한 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 css가 존재하는지 여부를 리턴한다.",
    "name": "hasClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The className to add",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "element가 class name을 가지고 있는지에 대한 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 안보이게 설정하는 메소드",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) Animation 여부를 설정한다. Boolean값이면 디폴트 animation을 실행하고 객체면 해당 객체에 설정된 animation을 수행한다.",
     "isFinal": false,
     "name": "anim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Boolean|Rui.fx.LAnim"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "마우스가 Element에 안밖으로 움직일때 전달된 함수들을 호출하기 위한 event 핸들러를 설정한다.",
    "name": "hover",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "마우스가 Element에 들어갔을해 호출할 함수",
      "isFinal": false,
      "name": "overFn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "마우스가 Element에서 나왔을때 호출할 함수",
      "isFinal": false,
      "name": "outFn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "(optional) 함수들이 실행될 scope(&amp;lt;tt&amp;gt;this&amp;lt;/tt&amp;gt; reference). 기본적으로 Element의 DOM element.",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "(optional) listener를 위한 옵션들. {@link Rui.util.LEventProvider#addListener the &amp;lt;tt&amp;gt;options&amp;lt;/tt&amp;gt; parameter} 를 참조.",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "innerHTML에 html 내용을 채워넣는 메소드",
    "name": "html",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "innerHTML 넣은 HTML 문자열",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 dom에 다음 sibling으로서 새로운 node를 삽입한다.",
    "name": "insertAfter",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삽입될 node",
     "isFinal": false,
     "name": "newNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String | HTMLElement"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 dom에 이전 sibling으로 새 node를 삽입한다.",
    "name": "insertBefore",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삽입될 node",
     "isFinal": false,
     "name": "newNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 유효하지 않은 상태로 설정하는 메소드",
    "name": "invalid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node가 하위에 포함되어 있는지 확인하는 메소드",
    "name": "isAncestor",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "포함여부를 확인하는 객체",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "포함여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 checked값을 리턴한다.",
    "name": "isChecked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 사용 가능여부를 확인하는 메소드",
    "name": "isDisable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Mask 적용 여부",
    "name": "isMask",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체가 보이는지 여부를 확인하는 메소드",
    "name": "isShow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 유효여부를 확인하는 메소드",
    "name": "isValid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Mask 적용",
    "name": "mask",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 적용할 html 내용",
     "isFinal": false,
     "name": "contentHtml",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "targetEl이 안보이는 경우 scroll 이동하기",
    "name": "moveScroll",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "child dom 객체의 id",
      "isFinal": false,
      "name": "childId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string|HTMLElement"
     },
     {
      "deprecated": false,
      "description": "x축 자동 scroll 여부, default는 true",
      "isFinal": false,
      "name": "movingX",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "y축 자동 scroll 여부, default는 true",
      "isFinal": false,
      "name": "movingY",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "left의 padding값",
      "isFinal": false,
      "name": "paddingLeft",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "[x,y] child의 변경된 좌표 return",
    "returnType": "array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 위치되는 방법에 개의치 않고 페이지 좌표에서 element의 위치를 설정한다.\n element는 반드시 페이지 좌표를 가지는 DOM 트리의 부분이어야 한다\n (display:none 혹은 element들이 추가되어 있지 않으면 false를 반환).",
    "name": "moveTo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "새로운 위치에 대한 X값(페이지에 기반한 좌표)",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "새로운 위치에 대한 Y값(페이지에 기반한 좌표)",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "(optional) 기본 animation에 대한 true, 혹은 표준 standard Element animation config object",
      "isFinal": false,
      "name": "anim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean/Object"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 event에 대해 listener를 추가한다.\n 이것은 DOM이나 customEvent listener들이 될 수 있다.\n frieEvent를 통해 발생한 어떤 event들도 listen될 수 있다.\n 모든 handler들은 event object를 받는다.",
    "name": "on",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listen될 event의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event가 발생할때 호출할 handler",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "handler의 scope를 위해 사용할 object",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "만약 true면, 전달된 obj가 listener의 실행 scope가 된다.\n                          만약 object면, 그 object가 실행 scope가 된다.",
      "isFinal": false,
      "name": "override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean|Object"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 element에 대한 parent node를 가져오고, 부가적으로 일치하는 selector를 찾는다.",
    "name": "parent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "(optional) 전달된 simple selector와 일치하는 parent node를 찾는다.",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) Rui.LElement 대신 raw dom node를 반환하기 위해서는 True",
      "isFinal": false,
      "name": "returnDom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "parent node 혹은 null",
    "returnType": "Rui.LElement|HTMLElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 element에 대한 parent node를 가져오고, 부가적으로 일치하는 selector를 찾는다.",
    "name": "parent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상위 부모 객체의 depth까지 찾는다 부모가 null이 나오면 그전까지 찾는다.",
     "isFinal": false,
     "name": "depth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "parent LElement",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 child html 객체를 배열로 리턴한다.",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "CSS selector 문자열",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 찾은 객체의 무조건 첫번째 객체를 리턴한다.",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Array 객체 리턴",
    "returnType": "Array",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM으로 부터 해당 element를 삭제하고 캐시로부터 그것을 지운다.",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement dom 객체의 attribute 속성을 삭제한다.",
    "name": "removeAttribute",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "key값",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement method에 대한 Wrapper.",
    "name": "removeChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 HTMLElement",
     "isFinal": false,
     "name": "child",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "삭제된 DOM element.",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 적용된 css를 삭제한다.",
    "name": "removeClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 className",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Array"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "document로 부터 DOM node를 삭제한다. body node는 전달될 경우 무시될 것이다.",
    "name": "removeNode",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 다시 그린다.",
    "name": "repaint",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.Elemnent",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "oldClassName으로 적용된 css를 newClassName css로 변경한다.",
    "name": "replaceClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "교체할 클래스 이름",
      "isFinal": false,
      "name": "oldClassName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "추가할 클래스 이름",
      "isFinal": false,
      "name": "newClassName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "성공/실패 boolean이나 boolean값들의 array",
    "returnType": "Boolean | Array",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 child 객체를 LElement객체로 만들어 Rui.LElementList로 리턴한다.",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "CSS selector 문자열",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 찾은 객체의 무조건 첫번째 객체를 리턴한다.",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HTMLElement dom 객체의 attribute 속성을 추가한다.",
    "name": "setAttribute",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "key값",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "value값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 CSS bottom 스타일을 설정한다.",
    "name": "setBottom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "bottom CSS property 값",
     "isFinal": false,
     "name": "bottom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 checked값을 저장한다. dom.value는 change 이벤트가 발생하지 않으므로 사용하면 안된다.",
    "name": "setChecked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "저장할 결과값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 element의 height를 설정한다.",
    "name": "setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "새로운 height.",
      "isFinal": false,
      "name": "height",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Mixed"
     },
     {
      "deprecated": false,
      "description": "(optional) 기본 animation에 대한 true or animation 객체",
      "isFinal": false,
      "name": "anim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean/Object"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS 스타일을 사용하여 element의 left 위치를 직접 설정한다.",
    "name": "setLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "left CSS property 값",
     "isFinal": false,
     "name": "left",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 위치 정보를 {Rui.util.LRegion} 객체 정보로 셋팅한다.",
    "name": "setRegion",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Region객체",
      "isFinal": false,
      "name": "region",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.util.LRegion"
     },
     {
      "deprecated": false,
      "description": "(optional) 기본 animation에 대한 true,\n                                         혹은 표준 standard Element animation config object",
      "isFinal": false,
      "name": "anim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean/Object"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element의 CSS right 스타일을 설정한다.",
    "name": "setRight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "right CSS property 값",
     "isFinal": false,
     "name": "right",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll position 설정",
    "name": "setScroll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(left:scrollLeft,top:scrollTop)",
     "isFinal": false,
     "name": "objLeftTop",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "size를 설정한다.",
    "name": "setSize",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element의 width offset",
      "isFinal": false,
      "name": "width",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "element의 height offset",
      "isFinal": false,
      "name": "height",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) 기본 animation에 대한 true, 혹은 표준 standard Element animation config object",
      "isFinal": false,
      "name": "anim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean/Object"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 style을 주는 메소드",
    "name": "setStyle",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "설정할 style property",
      "isFinal": false,
      "name": "property",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "style property에 적용할 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 style들을 주는 메소드(json 형 객체)",
    "name": "setStyles",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "설정할 style property 객체",
     "isFinal": false,
     "name": "props",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS 스타일을 사용하여 element의 top 위치를 직접 설정한다.",
    "name": "setTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "top CSS property 값",
     "isFinal": false,
     "name": "top",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 value값을 저장한다. dom.value는 change 이벤트가 발생하지 않으므로 사용하면 안된다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "저장할 결과값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "visMode가 true면 visibility에 설정 false거나 없으면 display에 설정한다.",
    "name": "setVisibilityMode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "visibility로 설정할지 display로 설정할지 결정하는 값",
     "isFinal": false,
     "name": "visMode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 element의 width를 설정한다.",
    "name": "setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "새로운 width.",
      "isFinal": false,
      "name": "width",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Mixed"
     },
     {
      "deprecated": false,
      "description": "(optional) 기본 animation에 대한 true,\n                                         혹은 표준 standard Element animation config object",
      "isFinal": false,
      "name": "anim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean/Object"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 위치되는 방법에 개의치 않고 페이지 좌표에서 html element의 X 위치를 설정한다.\n element는 반드시 페이지 좌표를 가지는 DOM 트리의 부분이어야 한다\n (display:none 혹은 element들이 추가되어 있지 않으면 false를 반환).",
    "name": "setX",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "element에 대한 X 좌표로 사용할 값.",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 위치되는 방법에 개의치 않고 페이지 좌표에서 html element의 위치를 설정한다.\n element는 반드시 페이지 좌표를 가지는 DOM 트리의 부분이어야 한다\n (display:none 혹은 element들이 추가되어 있지 않으면 false를 반환).",
    "name": "setXY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "새 위치에 대한 X &amp; Y를 포함한 값들(페이지에 기반한 좌표)",
      "isFinal": false,
      "name": "pos",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "[optional] 첫번째가 실패할 경우 기본적으로 두번째로 위치를 설정한다.",
      "isFinal": false,
      "name": "noRetry",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 위치되는 방법에 개의치 않고 페이지 좌표에서 html element의 Y 위치를 설정한다.\n element는 반드시 페이지 좌표를 가지는 DOM 트리의 부분이어야 한다\n (display:none 혹은 element들이 추가되어 있지 않으면 false를 반환).",
    "name": "setY",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "element에 대한 Y 좌표로 사용할 값.",
     "isFinal": false,
     "name": "y",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 보이게 설정하는 메소드",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) Animation 여부를 설정한다. Boolean값이면 디폴트 animation을 실행하고 객체면 해당 객체에 설정된 animation을 수행한다.",
     "isFinal": false,
     "name": "anim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Boolean|Rui.fx.LAnim"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 현재 dom이 selector에 해당되는 객체인지 여부를 리턴한다.",
    "name": "test",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "CSS selector 문자열",
     "isFinal": false,
     "name": "selector",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "객체 리턴",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "출력상태가 show이면 hide로 hide면 show로 변경한다.",
    "name": "toggle",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.Elemnent",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "toggle시에 class를 추가하거나 제거한다.",
    "name": "toggleClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "추가할 클래스 이름",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "event listener를 삭제한다.",
    "name": "unOn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "listen될 event의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event가 발생할때 호출할 handler",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 event listener를 삭제한다.",
    "name": "unOnAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "clip 호출되기 전에 원래 clip된 overflow를 반환한다.",
    "name": "unclip",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Mask 해제",
    "name": "unmask",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 유효한 상태로 설정하는 메소드",
    "name": "valid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [
   {
    "deprecated": false,
    "description": "The default unit to append to CSS values where a unit isn't provided (defaults to px).\n unit이 제공되지 않는 CSS 값들에 추가하기 위한 기본 unit(기본적으로 px).",
    "isFinal": false,
    "name": "defaultUnit",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LElement가 가지고 있는 실제 html dom 객체",
    "isFinal": false,
    "name": "dom",
    "parameterType": "PROPERTIES",
    "sample": "default",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LElement가 가지고 있는 실제 html dom 객체의 id",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.LElement",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Element 객체를 Chain 구조로 처리하는 객체 (Rui.LElement의 메소드를 모두 사용할 수 있음.)",
   "name": "Rui.LElementList",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "html element that",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "HTMLElement"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Element 객체를 Chain 구조로 처리하는 객체 (Rui.LElement의 메소드를 모두 사용할 수 있음.)",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Element객체 추가",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "추가할 Element 객체",
     "isFinal": false,
     "name": "els",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.LElement"
    }],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item들의 parent dom에 붙인다ㅏ.",
    "name": "appendTo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "parent 객체",
     "isFinal": false,
     "name": "parent",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement|Rui.LElement"
    }],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "배열 초기화 메소드",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "index에 대한 Element객체 리턴",
    "name": "getAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "리턴할 위치",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "Rui.LElement 객체 리턴",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item들의 dom select 메소드",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "selector 문장",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 첫번째 Dom을 리턴할지 여부",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 item들이 selector에 맞는 객체인지 확인하는 메소드",
    "name": "test",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "selector 문장",
     "isFinal": false,
     "name": "selector",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LElement 배열을 리턴한다.",
    "name": "toArray",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.LElementList",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "DOM element들의 collecting과 filtering에 도움을 주는 method들을 제공한다.",
   "name": "Rui.util.LDomSelector",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "DOM element들의 collecting과 filtering에 도움을 주는 method들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "주어진 CSS selector에 기반한 node들의 집합을 filtering.",
    "name": "filter",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "filter할 node/id들의 집합",
      "isFinal": false,
      "name": "nodes",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "array"
     },
     {
      "deprecated": false,
      "description": "각 node를 테스트 하기 위해 사용되는 selector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnDescription": "selector와 일치하는 제공된 array로 부터의 node들의 array",
    "returnType": "array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 CSS selector에 기반한 node들의 집합을 받는다.",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "노드를 상대로 테스트할 CSS LDomSelector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "(optional) 쿼리가 시작할 id나 HTMLElement. 기본은 LDomSelector.document.",
      "isFinal": false,
      "name": "root",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement | String"
     },
     {
      "deprecated": false,
      "description": "(optional) 첫번째 일치값만 반환할지에 대한 여부",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "주어진 selector와 일치하는 node들의 array",
    "returnType": "Array",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "제공된 node가 제공된 selector와 일치하는지 테스트한다.",
    "name": "test",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "테스트될 HTMLElement로의 id나 node reference",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement | String"
     },
     {
      "deprecated": false,
      "description": "node를 상대로 테스트할 CSS LDomSelector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnDescription": "selector와 일치하는지에 대한 여부",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [{
   "deprecated": false,
   "description": "query들을 사용하기 위한 기본 document",
   "isFinal": false,
   "name": "document",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "object",
   "visibility": "public"
  }],
  "scope": "static",
  "type": "Rui.util.LDomSelector",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "",
   "name": "Rui.util.LDateLocale",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "인스턴스를 얻어오는 메소드",
   "name": "getInstance",
   "parameterType": "METHOD",
   "parameters": [],
   "returnType": "Rui.util.LDateLocale",
   "scope": "static",
   "visibility": "public"
  }],
  "module": "util",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.util.LDateLocale",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Base64 암호화를 지원하는 유틸리티",
   "name": "Rui.LBase64",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Base64 암호화를 지원하는 유틸리티",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "복호화 메소드",
    "name": "decode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력값",
     "isFinal": false,
     "name": "input",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "암호화 메소드",
    "name": "encode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력값",
     "isFinal": false,
     "name": "input",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.LBase64",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LCookie utility.",
   "name": "Rui.util.LCookie",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LCookie utility.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "주어진 이름에 대한 쿠키값을 반환한다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "조회할 쿠키의 이름",
      "isFinal": false,
      "name": "name",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(Optional) 함수를 반환하기 전에 값에 대해 실행하기 위한 함수.\n                  함수는 쿠키가 존재하지 않는 경우 사용되지 않는다.",
      "isFinal": false,
      "name": "converter",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "returnDescription": "converter가 명시되지 않은 경우, 문자열이나 쿠키가 존재하지 않는다면 null을 반환한다.",
    "returnType": "Variant",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이전에 유효 기간을 설정함으로 인하여 컴퓨터에서 쿠키를 삭제한다.",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삭제할 쿠키의 이름",
      "isFinal": false,
      "name": "name",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(Optional) 하나 혹은 여러개의 쿠키 옵션들을 포함한 object:",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "생성된 쿠키 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets a cookie with a given name and value.\n 주어진 이름과 값으로 쿠키를 설정한다.",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "설정할 쿠키의 이름",
      "isFinal": false,
      "name": "name",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "쿠키에 대한 설정할 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Variant"
     },
     {
      "deprecated": false,
      "description": "(Optional) 하나 혹은 여러개의 쿠키 옵션들을 포함한 object:",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "생성된 쿠키 문자열",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LCookie",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "static Date 클래스는 Date 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "prototype.Date",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "static Date 클래스는 Date 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "해당 instance에 지정된 시간량을 추가한다.\n Day \"D\", Week \"W\", Year \"Y\", Month \"M\", Hour \"H\", Minute \"m\", Second \"S\", Milisecond \"s\"",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "추가적인 실행에 사용되는 field constant",
      "isFinal": false,
      "name": "field",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "날짜에 추가하기 위한 unit들의 number(field constant에서 측정된)",
      "isFinal": false,
      "name": "amount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "Date object의 결과",
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "startDate와 endDate 사이에 포함되어 있는지 여부",
    "name": "between",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "범위 시작일자",
      "isFinal": false,
      "name": "startDate",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "범위 종료일자The end of the range",
      "isFinal": false,
      "name": "endDate",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     }
    ],
    "returnDescription": "날짜가 비교날짜 사이에 있으면 true, 아닐 경우 false.",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 날짜를 복사하여 리턴한다.",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Date객체의 Pattern에 따른 날짜 비교",
    "name": "compareString",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Date2 객체",
      "isFinal": false,
      "name": "date2",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "[optional] format pattern 문자",
      "isFinal": false,
      "name": "pattern",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     }
    ],
    "returnDescription": "true",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시간을 제외한 날짜를 비교하여 현재 날짜와의 차이를 일자로 리턴한다.",
    "name": "compareTo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "비교 날짜 객체",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 날짜를 대상날짜와 format 형식에 맞게 비교한다. config를 주지 않을경우 %x(yyyy-mm-dd)로 비교한다.",
    "name": "equals",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "비교 대상 date 객체",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "[optional] format등 옵션",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자바스크립트의 내장 객체인 Date 객체에 format 메소드를 추가한다. format 메소드는 Date 객체가 가진 날짜를\n 지정된 포멧의 스트링으로 변환한다.\n &amp;lt;pre&amp;gt;\n     var dateStr = new Date().format(\"YYYYMMDD\");\n\n     참고 : Date 오브젝트 생성자들 - dateObj = new Date()\n                             - dateObj = new Date(dateVal)\n                             - dateObj = new Date(year, month, date[, hours[, minutes[, seconds[,ms]]]])\n &amp;lt;/pre&amp;gt;\n 위의 예에서 오늘날짜가 2002년 3월 5일이라면 dateStr의 값은 \"20020305\"가 된다.\n default pattern은 \"YYYYMMDD\"이다.",
    "name": "format",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "pattern optional 변환하고자 하는 패턴 스트링이나 Config객체. (default : YYYYMMDD)",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "1일에 해당되는 Date 객체를 리턴",
    "name": "getFirstDayOfMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The JavaScript Date representing the first day of the month",
    "returnType": "Date",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "startOfWeek에 해당되는 요일에 맞는 Date 객체를 리턴",
    "name": "getFirstDayOfWeek",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The index for the first day of the week, 0 = Sun, 1 = Mon ... 6 = Sat (defaults to 0)",
     "isFinal": false,
     "name": "startOfWeek",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "The first day of the week",
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "마지막 날짜에 해당되는 Date 객체를 리턴",
    "name": "getLastDayOfMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The JavaScript Date representing the first day of the month",
    "returnType": "Date",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "scope": "instance",
  "type": "prototype.Date",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "static Number 클래스는 Number 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "prototype.Number",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "static Number 클래스는 Number 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "사용자에게 표시하기 위한 native JavaScript Number와 문자열 포맷을 가져온다.",
    "name": "format",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Number.",
      "isFinal": false,
      "name": "nData",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "(Optional) Optional 설정 값들:\n  &amp;lt;dl&amp;gt;",
      "isFinal": false,
      "name": "oConfig",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "표시하기 위한 Formatted number",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "요구되는 소수점 정밀도로 전달되는 숫자를 반올림 한다.",
    "name": "round",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "첫번째 parameter의 값을 반올림하기 위한 소수점 위치 숫자",
     "isFinal": false,
     "name": "precision",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "반올림 값",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "scope": "instance",
  "type": "prototype.Number",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "static Array 클래스는 Array 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "prototype.Array",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "static Array 클래스는 Array 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "items 배열에서 item이 존재하는지 여부를 리턴하는 메소드",
    "name": "contains",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Array 배열",
     "isFinal": false,
     "name": "item",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 배열에서 index에 해당하는 객체를 삭제하는 메소드",
    "name": "removeAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 위치",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "삭제된 위치",
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "scope": "instance",
  "type": "prototype.Array",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "HTML 조각 템플릿을 표현한다.\n 템플릿들은 더 나은 성능을 위해 미리 컴파일 될 수 있다.\n 사용가능한 format 함수들의 목록에 대해서는 {",
   "name": "Rui.LTemplate",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "join('')하거나 여러 argument들에 join('')하기 위한 HTML 조각 혹은 조각들의 array",
    "isFinal": false,
    "name": "html",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "String/Array"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "HTML 조각 템플릿을 표현한다.\n 템플릿들은 더 나은 성능을 위해 미리 컴파일 될 수 있다.\n 사용가능한 format 함수들의 목록에 대해서는 {",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "적용된 특정 값들을 가진 해당 템플릿의 HTML 조각을 반환한다.",
    "name": "apply",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "템플릿 값들.",
     "isFinal": false,
     "name": "values",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object/Array"
    }],
    "returnDescription": "HTML 조각",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "적용된 특정 값들을 가지고 있는 해당 템플릿의 HTML 조각을 반환한다.",
    "name": "applyTemplate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "템플릿 값들.",
     "isFinal": false,
     "name": "values",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object/Array"
    }],
    "returnDescription": "HTML 조각",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.LTemplate",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LException 정의",
   "name": "Rui.LException",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "생성할 메시지나 Error 객체",
     "isFinal": false,
     "name": "message",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Error|String"
    },
    {
     "deprecated": false,
     "description": "에러가 발생한 객체 정보 otype속성이 존재하는 객체만 지원",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LException 정의",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "에러 메시지를 리턴한다.",
    "name": "getMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "에러 메시지",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 Object Type을 리턴한다.",
    "name": "getOType",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "에러가 발생한 객체의 otype 값, otype값이 없으면 ''문자",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "StackTrace 정보를 리턴",
    "name": "getStackTrace",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "StackTrace 정보를 리턴값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "core",
  "propertys": [{
   "deprecated": false,
   "description": "에러 메시지",
   "isFinal": false,
   "name": "message",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "scope": "instance",
  "type": "Rui.LException",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "static LXML 클래스는 Xml 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
   "name": "Rui.util.LXml",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "static LXML 클래스는 Xml 타입의 데이터를 처리하는데 도움을 주는 함수들을 제공한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "하위의 element를 생성한다.",
    "name": "createChild",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "붙이고자 하는 Xml부모 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Element"
     },
     {
      "deprecated": false,
      "description": "element의 이름",
      "isFinal": false,
      "name": "name",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "XmlDocument",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "xml document를 생성한다.",
    "name": "createDocument",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "document의 이름을 입력한다.",
     "isFinal": false,
     "name": "docName",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "XmlDocument",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "하위의 text element를 생성한다.",
    "name": "createTextValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "붙이고자 하는 Xml부모 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Element"
     },
     {
      "deprecated": false,
      "description": "element의 이름",
      "isFinal": false,
      "name": "name",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] cdata 여부",
      "isFinal": false,
      "name": "isCData",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Boolean"
     }
    ],
    "returnType": "XmlDocument",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "xml 정보를 문자열로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "xml document",
     "isFinal": false,
     "name": "doc",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "XmlDocuement"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LXml",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LKeyListener는 DOM element를 감시하며 keydown/keyup event를 listening하는데 인테페이스를 제공하는 유틸리티이다.",
   "name": "Rui.util.LKeyListener",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "key event가 첨부되어야할 element나 element ID",
     "isFinal": false,
     "name": "attachTo",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement"
    },
    {
     "deprecated": false,
     "description": "key event가 첨부되어야할 element나 element ID",
     "isFinal": false,
     "name": "attachTo",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "감지할 key를 표시하는 object literal.\n                               가능한 attribute들은 shift(boolean), alt(boolean), ctrl(boolean),\n                               keys(키코드를 표시하는 정수나 정수들의 배열)가 있다.",
     "isFinal": false,
     "name": "keyData",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "keyevent가 감지되었을때 발생시킬 LCustomEvent handler",
     "isFinal": false,
     "name": "handler",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    },
    {
     "deprecated": false,
     "description": "handler를 표시하는 object literal.",
     "isFinal": false,
     "name": "handler",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "(Optional) listening할 keydown이나 keyup 이벤트.\n                               자동적으로 기본값은 keydown.",
     "isFinal": false,
     "name": "event",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LKeyListener는 DOM element를 감시하며 keydown/keyup event를 listening하는데 인테페이스를 제공하는 유틸리티이다.",
  "events": [
   {
    "deprecated": false,
    "description": "disable() 함수를 통해 LKeyListener가 비활성화 될 때, LCustomEvent가 발생한다.",
    "name": "disabled",
    "parameters": [{
     "deprecated": false,
     "description": "감지할 key를 표시하는 object literal\n                         가능한 attribute들은 shift(boolean), alt(boolean), ctrl(boolean),\n                         keys(키코드를 표시하는 정수나 정수들의 배열)가 있다.",
     "isFinal": false,
     "name": "keyData",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "enable() 함수를 통해 LKeyListener가 활성화 될 때, LCustomEvent가 발생한다.",
    "name": "enabled",
    "parameters": [{
     "deprecated": false,
     "description": "감지할 key를 표시하는 object literal\n                         가능한 attribute들은 shift(boolean), alt(boolean), ctrl(boolean),\n                         keys(키코드를 표시하는 정수나 정수들의 배열)가 있다.",
     "isFinal": false,
     "name": "keyData",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "키가 눌렸을때 내부적으로 LCustomEvent가 발생한다.",
    "name": "keyPressed",
    "parameters": [{
     "deprecated": false,
     "description": "감지할 key를 표시하는 object literal\n                         가능한 attribute들은 shift(boolean), alt(boolean), ctrl(boolean),\n                         keys(키코드를 표시하는 정수나 정수들의 배열)가 있다.",
     "isFinal": false,
     "name": "keyData",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "private"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "대상 DOM element로 부터 DOM event listener를 삭제함으로써 LKeyListener를 비활성화 한다.",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "대상 DOM element에 DOM event listener를 붙임으로써 LKeyListener를 활성화 한다.",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object를 나타내는 문자열을 반환한다.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "LKeyListener의 문자열 표현",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "DOM 'keydown' event를 표시하는 상수",
    "isFinal": true,
    "name": "KEYDOWN",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM 'keyup' event를 표시하는 상수",
    "isFinal": true,
    "name": "KEYUP",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LTooltip의 활성/비활성 상태를 나태느는 boolean 값",
    "isFinal": false,
    "name": "enabled",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.util.LKeyListener",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LCollection utility.",
   "name": "Rui.util.LCollection",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LCollection utility.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "item을 추가하는 메소드",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "입력할 객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모두 초기화 하는 메소드",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LCollection을 복제하여 리턴하는 메소드",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.util.LCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "items 정보에 해당되는 객체를 Function으로 호출하는 메소드",
    "name": "each",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key에 해당하는 item을 리턴하는 메소드",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "키",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "idx 위치에 해당하는 item을 리턴하는 메소드",
    "name": "getAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "idx에 해당하는 key값을 리턴하는 메소드",
    "name": "getKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key 값이 존재하는지 여부",
    "name": "has",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "키값",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key에 해당하는 item의 위치를 리턴하는 메소드",
    "name": "indexOfKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "키",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item을 idx위치에 삽입하는 메소드",
    "name": "insert",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삽입할 위치",
      "isFinal": false,
      "name": "idx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "입력할 객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "func에 해당되는 값을 LCollection으로 리턴하는 메소드",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Rui.util.LCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item을 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "키",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "역순 정렬하는 메소드",
    "name": "reverse",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key에 해당하는 item을 변경하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "func에 해당되는 값으로 정렬하는 메소드",
    "name": "sort",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "정렬 방향",
      "isFinal": false,
      "name": "dir",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LCollection",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LResizeMonitor",
   "name": "Rui.util.LResizeMonitor",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LResizeMonitor",
  "events": [{
   "deprecated": false,
   "description": "지정한 content가 resized되면 이벤트가 발생된다.",
   "name": "contentResized",
   "parameters": [],
   "visibility": "public"
  }],
  "methods": [{
   "deprecated": false,
   "description": "width auto시 resize가 일어나는지 모니터링하는 target object 설정",
   "name": "monitor",
   "parameterType": "METHOD",
   "parameters": [{
    "deprecated": false,
    "description": "객체를 붙이고자 하는 Node정보",
    "isFinal": false,
    "name": "target",
    "parameterType": "PARAMETER",
    "scope": "required",
    "type": "String|Object"
   }],
   "returnType": "void",
   "scope": "instance",
   "visibility": "public"
  }],
  "module": "util",
  "propertys": [],
  "sample": "default",
  "scope": "static",
  "type": "Rui.util.LResizeMonitor",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LDelayedTask 클래스는 새로운 타임아웃이 예전 타임아웃을 취소하는 serTimeout를 수행하는\n method의 실행을 'buffer'하기 위해 쉬운 방법을 제공한다.\n 취소될때, 타스크는 실행 전에 특정 time period를 기다릴 것이다.\n 해당 time period 동안 타스크가 다시 취소된다면, 원래 호출도 취소될 것이다.\n 이러한 연속성때문에 함수는 각 반복에 대해 오직 한번만 호출된다.\n 이 method는 사용자가 텍스트 필드에 타이핑을 마쳤는지의 여부를 확인하는 것 같은\n 일들에 특별히 유용하다.\n 예제로써, 키가 눌렸을때 validation을 수행하는 것이다.\n 밀리초의 특정 번호에 대한 키입력 이벤트를 버퍼링하기 위해 이 클래스를 사용할수 있으며,\n 그것들이 그정도의 시간동안 중지하는 경우에만 수행을 한다.",
   "name": "Rui.util.LDelayedTask",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "(optional) 타임아웃에 대한 기본 함수",
     "isFinal": false,
     "name": "fn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    },
    {
     "deprecated": false,
     "description": "(optional) 타임아웃에 대한 기본 scope",
     "isFinal": false,
     "name": "scope",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "(optional) 기본 argument array",
     "isFinal": false,
     "name": "args",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LDelayedTask 클래스는 새로운 타임아웃이 예전 타임아웃을 취소하는 serTimeout를 수행하는\n method의 실행을 'buffer'하기 위해 쉬운 방법을 제공한다.\n 취소될때, 타스크는 실행 전에 특정 time period를 기다릴 것이다.\n 해당 time period 동안 타스크가 다시 취소된다면, 원래 호출도 취소될 것이다.\n 이러한 연속성때문에 함수는 각 반복에 대해 오직 한번만 호출된다.\n 이 method는 사용자가 텍스트 필드에 타이핑을 마쳤는지의 여부를 확인하는 것 같은\n 일들에 특별히 유용하다.\n 예제로써, 키가 눌렸을때 validation을 수행하는 것이다.\n 밀리초의 특정 번호에 대한 키입력 이벤트를 버퍼링하기 위해 이 클래스를 사용할수 있으며,\n 그것들이 그정도의 시간동안 중지하는 경우에만 수행을 한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "마지막 큐의 타임아웃을 취소한다.",
    "name": "cancel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "보류중인 타임아웃을 취소하고 새로운 것을 큐에 넣는다.",
    "name": "delay",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "지연을 위한 밀리초",
      "isFinal": false,
      "name": "delay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "(optional) 생성자에 전달될 오버라이딩된 함수",
      "isFinal": false,
      "name": "newFn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "(optional) 생성자에 전달될 오버라이딩된 scope",
      "isFinal": false,
      "name": "newScope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "(optional) 생성자에 전달될 오버라이딩된 인자들",
      "isFinal": false,
      "name": "newArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.util.LDelayedTask",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LFormat",
   "name": "Rui.util.LFormat",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LFormat",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Date값을 지정된 포맷 형식으로 변환한다.",
    "name": "dateToString",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": ": oConfig.format(strptime), oConfig.locale",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "지정된 포맷의 날짜",
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "길이 단위를 표시한다.",
    "name": "lengthFormat",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "길이 단위 ex.m, km",
      "isFinal": false,
      "name": "unit",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "소수점 자리수",
      "isFinal": false,
      "name": "point",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "천 단위 쉼표",
      "isFinal": false,
      "name": "thousandsSeparator",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "config에서 설정된 default rocale을 참조하여 해당 국가의 통화를 리턴한다.",
    "name": "moneyFormat",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "locale 값 ko_KR 등...",
     "isFinal": false,
     "name": "locale",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값을 천단위 구분 쉼표(',')로 표시한다.",
    "name": "numberFormat",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "환경 정보",
      "isFinal": false,
      "name": "oConfig",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "locale 값 ko_KR 등...\n &amp;lt;div class='param-option'&amp;gt;\n   thousandsSeparator {String} 천단위 구분 쉼표",
      "isFinal": false,
      "name": "locale",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "비율(%)을 표시하고, 소수점자리 수를 지정하면 그 밑으로 반올림하여 해당 소수점을 표시한다.",
    "name": "rateFormat",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "비율단위",
      "isFinal": false,
      "name": "rate",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "소수점자리수",
      "isFinal": false,
      "name": "point",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LFormat에 등록된 모든 function을 renderer로 처리할 수 있게 해주는 메소드\n LFormat에 있는 Function의 arguments는 fnName뒤에 순차적으로 넣으면 됨.\n &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;\n Rui.util.LFormat.rendererWrapper('dateToString', {format:'%x'});\n Rui.util.LRenderer.dateRenderer('%x')\n 위 두개는 동일한 기능으로 수행 가능\n &amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;",
    "name": "rendererWrapper",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "LFormat에 등록된 모든 function명",
     "isFinal": false,
     "name": "fnName",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "String을 Data Object로 변환한다.\n format 형식은 LDate 객체 참조\n - config 파라메터가 존재하지 않을 경우 %Y-%m-%d로 파싱한다.\n - '%Y%m%d', '%Y%m%d%H%M%s', '%X' 포맷의 경우 빠르게 파싱한다.",
    "name": "stringToDate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": ": config.format(strptime), config.locale",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "parsing에 성공한 경우 Date를 실패한 경우 false를 반환한다.",
    "returnType": "Date|boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "stringToDate의 기능중 type q에 해당되는 변환이 많이 발생하여 미리 구현해 놓음.\n type q : '%y%m%d",
    "name": "stringToDateByTypeQ",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "String을 Data Object로 변환한다.\n java.sql.timestamp의 toString은 yyyy-MM-dd HH:mm:ss.ms로 return되므로 이에 대응.",
    "name": "stringToTimestamp",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": ": oConfig.format(strptime), oConfig.locale",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Date",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "어떤 값을 지정된 포맷 패턴을 사용하여 Time 형식으로 바꾸어준다.",
    "name": "timeFormat",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "595959",
      "isFinal": false,
      "name": "sTime",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": ": oConfig.format(strptime), oConfig.locale",
      "isFinal": false,
      "name": "oConfig",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "중량 단위를 표시한다.",
    "name": "weightFormat",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "중량의 단위 ex.kg, g, mg",
      "isFinal": false,
      "name": "unit",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "천 단위 쉼표",
      "isFinal": false,
      "name": "thousandsSeparator",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "소수점 자리수",
      "isFinal": false,
      "name": "point",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "static",
  "type": "Rui.util.LFormat",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Renderer",
   "name": "Rui.util.LRenderer",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Renderer",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "날짜(date) 형식으로 데이터가 표현되는 랜더러\n &amp;lt;p&amp;gt;Date형식의 값을 이용하며 locale에 따라 출력될 포맷이 정해진다. &amp;lt;/p&amp;gt;",
    "name": "dateRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "길이(length) 단위를 표현하는데 사용되는 랜더러",
    "name": "lengthRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "통화(currenty) 문자와 함께 데이터가 표현되는 랜더러\n &amp;lt;p&amp;gt;locale에 따라서 원화, 달러, 엔화 등이 값과 함계 표현된다.",
    "name": "moneyRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "숫자(number) 형식으로 데이터가 표현되는 랜더러\n &amp;lt;p&amp;gt;천단위 구분기호인 콤마(,)등이 함께 출력된다. &amp;lt;/p&amp;gt;",
    "name": "numberRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드 셀에 팝업 아이콘을 추가하는 랜더러",
    "name": "popupRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "비율(rate) 형식으로 데이터를 표현하는데 사용되는 랜더러\n &amp;lt;p&amp;gt;값과 함께 %가 표현된다.&amp;lt;/p&amp;gt;",
    "name": "rateRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시간(time) 형식으로 데이터를 표현하는데 사용되는 랜더러\n &amp;lt;p&amp;gt;23:59 형식으로 포맷이 변환되어 표현된다.&amp;lt;/p&amp;gt;",
    "name": "timeRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "무게(weight) 단위를 표현하는데 사용되는 랜더러",
    "name": "weightRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "function",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [],
  "sample": "default",
  "scope": "static",
  "type": "Rui.util.LRenderer",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LPlugin",
   "name": "Rui.util.LPlugin",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "해당 overlay에 대한 집합이어 하는 설정을 포함하는 설정 object literal.\n 더 자세한 사항은 설정 문서를 참고 한다.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LPlugin",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "플러그인 초기화",
    "name": "initPlugin",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "기능의 값이 바뀌면 호출되는 이벤트(LPlugin 객체가 생성된후 반복 수행됨/이때 이벤트는 탑재해서는 안됨.)",
    "name": "updatePlugin",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "기능의 전체가 수정되면 호출되는 이벤트(LPlugin 객체가 생성된후 한번만 수행됨/이때 이벤트는 탑재해서는 안됨.)",
    "name": "updatePluginView",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "util",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.util.LPlugin",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "region은 그리드 상에서의 object의 표시이다.\n 이것은 기본적으로 직사각형인 top, right, bottom, left의 범위에 의해 정의된다.\n 만약 다른 형태의 모양이 필요한 경우 해당 클래스는 그것을 지원하기 위하여 상속될 수 있다.",
   "name": "Rui.util.LRegion",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "top 범위",
     "isFinal": false,
     "name": "t",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "right 범위",
     "isFinal": false,
     "name": "r",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "bottom 범위",
     "isFinal": false,
     "name": "b",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "left 범위",
     "isFinal": false,
     "name": "l",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "region은 그리드 상에서의 object의 표시이다.\n 이것은 기본적으로 직사각형인 top, right, bottom, left의 범위에 의해 정의된다.\n 만약 다른 형태의 모양이 필요한 경우 해당 클래스는 그것을 지원하기 위하여 상속될 수 있다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "해당 region이 전달된 region을 포함하는 경우 true를 반환한다.",
    "name": "contains",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "평가할 region",
     "isFinal": false,
     "name": "region",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Region"
    }],
    "returnDescription": "region에 해당 region이 포함되어 있으면 true, 아니면 false",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "region의 영역을 반환한다.",
    "name": "getArea",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "region의 영역",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM element에 의해 차지되는 region을 반환한다.",
    "name": "getRegion",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The element",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "element가 차지하는 region",
    "returnType": "Region",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 region와 중복되는 region에 전달되는 region을 반환한다.",
    "name": "intersect",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "교차되는 region",
     "isFinal": false,
     "name": "region",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Region"
    }],
    "returnDescription": "중복된 region이나 중복되지 않는 경우 null",
    "returnType": "Region",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 region과 전달된 region을 둘다 포함하는 가장 작은 영역을 표시하는\n region을 반환한다.",
    "name": "union",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "조합되어 만들기 위한 region",
     "isFinal": false,
     "name": "region",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Region"
    }],
    "returnDescription": "조합된 region",
    "returnType": "Region",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "region의 bottom 범위",
    "isFinal": false,
    "name": "bottom",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "region의 left 범위",
    "isFinal": false,
    "name": "left",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "region의 right 범위",
    "isFinal": false,
    "name": "right",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "region의 top 범위",
    "isFinal": false,
    "name": "top",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.util.LRegion",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "point는 그리드 상에서의 싱글 포인트를 표현하는 특정한 영역이다.",
   "name": "Rui.util.LPoint",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "point의 X 위치",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "point의 Y 위치",
     "isFinal": false,
     "name": "y",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "point는 그리드 상에서의 싱글 포인트를 표현하는 특정한 영역이다.",
  "events": [],
  "methods": [],
  "module": "util",
  "propertys": [
   {
    "deprecated": false,
    "description": "right, left나 인덱스가 0인 point의 X 위치(Dom.getXY symmetry에 대한)",
    "isFinal": false,
    "name": "x",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The Y position of the point, which is also the top, bottom and index one (for Dom.getXY symmetry)\n top, bottom이나 인덱스가 1인 point의 Y 위치(Dom.getXY symmetry에 대한)",
    "isFinal": false,
    "name": "y",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.util.LRegion",
  "type": "Rui.util.LPoint",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Abstract LAbstractProvider utility.",
   "name": "Rui.webdb.LAbstractProvider",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LAbstractProvider.",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Abstract LAbstractProvider utility.",
  "events": [{
   "deprecated": false,
   "description": "값의 상태가 바뀌면 호출되는 이벤트.",
   "name": "stateChanged",
   "parameters": [
    {
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "변경 종류",
     "isFinal": false,
     "name": "type",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "키",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array|Object"
    }
   ],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "상태정보를 모두 삭제하는 메소드",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 얻어오는 메소드",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "상태정보를 얻어오는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값이 없을 경우 리턴되는 기본값",
      "isFinal": false,
      "name": "defaultValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "localStorage를 사용 가능한지 여부를 검사한다.\n Mobile Safari등의 경우 private browsing등의 이유로 localStorage 사용이 제한될 수 있다.\n localStorage가 private browsing의 이유로 막힌경우 다음 오류가 발생한다.\n \"QuotaExceededError: DOM Exception 22: An attempt was made to add something to storage that exceeded the quota.\"\n Safari의 보안 옵션에 따라 제한을 해제 할 수 있으나 이 옵션에 관계없이 localStorage를 사용할 수 있는 브라우저인지를 직접 localStorage.setItem을 시도해 이상유무를 검사할 수 있다.",
    "name": "isLocalStorageSupported",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "지우고자 하는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 저장하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "storage",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.webdb.LAbstractProvider",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Cookie Provider utility.",
   "name": "Rui.webdb.LCookieProvider",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LCookieProvider.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Cookie Provider utility.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "상태정보를 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "지우고자 하는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 저장하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "storage",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.webdb.LAbstractProvider",
  "type": "Rui.webdb.LCookieProvider",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "각 객체의 state상태를 관리하는 객체",
   "name": "Rui.webdb.LWebStorage",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "각 객체의 state상태를 관리하는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "상태정보를 모두 삭제하는 메소드",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 얻어오는 메소드",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "상태정보를 얻어오는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값이 없을 경우 리턴되는 기본값",
      "isFinal": false,
      "name": "defaultValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 boolean값으로 얻어오는 메소드",
    "name": "getBoolean",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "상태정보를 얻어오는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값이 없을 경우 리턴되는 기본값",
      "isFinal": false,
      "name": "defaultValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 Int로 얻어오는 메소드",
    "name": "getInt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "상태정보를 얻어오는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값이 없을 경우 리턴되는 기본값",
      "isFinal": false,
      "name": "defaultValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Provider정보를 리턴하는 메소드",
    "name": "getProvider",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "선택된 provider 정보",
    "returnType": "Rui.webdb.LAbstractProvider",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 문자로 얻어오는 메소드",
    "name": "getString",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "상태정보를 얻어오는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값이 없을 경우 리턴되는 기본값",
      "isFinal": false,
      "name": "defaultValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "지우고자 하는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 저장하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Provider정보를 셋팅하는 메소드",
    "name": "setProvider",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "셋팅하고자 하는 provider",
     "isFinal": false,
     "name": "provider",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "storage",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.webdb.LWebStorage",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LConfiguration Provider utility.",
   "name": "Rui.config.LConfigurationProvider",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LConfigurationProvider.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LConfiguration Provider utility.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "상태정보를 얻어오는 메소드",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "상태정보를 얻어오는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값이 없을 경우 리턴되는 기본값",
      "isFinal": false,
      "name": "defaultValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 읽었는지 여부",
    "name": "isLoad",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 다시 읽어드리는 메소드",
    "name": "reload",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "지우고자 하는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 저장하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "저장하고자 하는 키 이름",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "config",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.webdb.LAbstractProvider",
  "type": "Rui.config.LConfigurationProvider",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "rui_config.js 파일의 정보를 읽어오거나 변경할 수 있는 객체",
   "name": "Rui.config.LConfiguration",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "rui_config.js 파일의 정보를 읽어오거나 변경할 수 있는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "가장 첫번째 데이터를 리턴한다.",
    "name": "getFirst",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "인스턴스를 얻어오는 메소드",
    "name": "getInstance",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.config.LConfiguration",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 다시 읽어드리는 메소드",
    "name": "reload",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "config",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.webdb.LWebStorage",
  "type": "Rui.config.LConfiguration",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "다국어 메시지를 관리하는 기능",
   "name": "Rui.message.LMessageManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "다국어 메시지를 관리하는 기능",
  "events": [{
   "deprecated": false,
   "description": "Core Locale 정보를 읽어올때 발생하는 이벤트",
   "name": "createRootLocale",
   "parameters": [],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "메시지 데이터를 직접 추가한다.",
    "name": "addLocaleData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "실제 메시지 데이터를 가지는 객체",
     "isFinal": false,
     "name": "localeData",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메시지 데이터를 읽어 온다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "읽어오고자하는 메시지 키값",
      "isFinal": false,
      "name": "name",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "읽어올때 @로 대체될 값",
      "isFinal": false,
      "name": "paramArray",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnDescription": "결과 메시지",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Locale에 해당되는 데이터를 읽어온다.",
    "name": "load",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "읽어올 환경정보를 가지는 객체",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 셋팅되어 있는 Locale 정보를 변경한다.",
    "name": "setLocale",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "변경하고자 하는 locale 정보",
     "isFinal": false,
     "name": "currentLocale",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "message",
  "propertys": [
   {
    "deprecated": false,
    "description": "해당 Locale의 메시지가 없을 경우 defaultLocale에 해당되는 메시지를 출력할지 결정하는 변수",
    "isFinal": false,
    "name": "useApplyDefaultMessage",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 Locale의 메시지가 없을 경우 서버에서 자동으로 Locale에 해당되는 메시지를 읽어 올지 결정하는 변수",
    "isFinal": false,
    "name": "useAutoLoad",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "static",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.message.LMessageManager",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Base animation class는 animation효과들을 주는 interface를 제공한다.\n &amp;lt;p&amp;gt;Usage: var myAnim = new Rui.fx.LAnim(el, { width: { from: 10, to: 100 } }, 1, Rui.fx.LEasing.easeOut);&amp;lt;/p&amp;gt;",
   "name": "Rui.fx.LAnim",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "animation효과가 적용될 element",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String | HTMLElement"
    },
    {
     "deprecated": false,
     "description": "animation효과 관련 attribute, 각 attribute는 object로 to나 by가 정의되어 있다. 이외에 from, units(px)가 있으며 camelCase로 표기한다.",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "(optional, defaults to 1 second) Length of animation (frames or seconds), defaults to time-based",
     "isFinal": false,
     "name": "duration",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Number"
    },
    {
     "deprecated": false,
     "description": "(optional, defaults to Rui.fx.LEasing.easeNone) Computes the values that are applied to the attributes per frame (generally a Rui.fx.LEasing method)",
     "isFinal": false,
     "name": "method",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Base animation class는 animation효과들을 주는 interface를 제공한다.\n &amp;lt;p&amp;gt;Usage: var myAnim = new Rui.fx.LAnim(el, { width: { from: 10, to: 100 } }, 1, Rui.fx.LEasing.easeOut);&amp;lt;/p&amp;gt;",
  "events": [
   {
    "deprecated": false,
    "description": "animation이 종료되면 호출되는 이벤트",
    "name": "complete",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "animation이 시작되면 호출되는 이벤트",
    "name": "start",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "animation의 매 frame마다 호출되는 이벤트",
    "name": "tween",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "animation manager에 등록하면서 animation을 시작한다.",
    "name": "animate",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "animation을 종료한다.",
    "name": "complete",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animation의 'method'에 의해 계산된 값을 return",
    "name": "doMethod",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The name of the attribute.",
      "isFinal": false,
      "name": "attr",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The value this attribute should start from for this animation.",
      "isFinal": false,
      "name": "start",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "The value this attribute should end at for this animation.",
      "isFinal": false,
      "name": "end",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "The Value to be applied to the attribute.",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "attribute의 값 return.",
    "name": "getAttribute",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "attribute명",
     "isFinal": false,
     "name": "attr",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "val 값",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animate될 element를 return",
    "name": "getEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animation 시작 시간 return",
    "name": "getStartTime",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "시작시간",
    "returnType": "Date",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animate되고 있는지 여부 return",
    "name": "isAnimated",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "isAnimated의 현재 값",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "attribute에 값 설정",
    "name": "setAttribute",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "attribute명.",
      "isFinal": false,
      "name": "attr",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "attribute에 할당될 값.",
      "isFinal": false,
      "name": "val",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "값의 unit ('px', '%', etc.)",
      "isFinal": false,
      "name": "unit",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animate될 element를 변경한다.",
    "name": "setEl",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animation동안 사용될 실제 값들. subclass를 사용할때만 사용됨.",
    "name": "setRuntimeAttribute",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "attribute object",
     "isFinal": false,
     "name": "attr",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animation을 시작한다.",
    "name": "start",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animation을 정지한다.  일반적으로 animation이 끝났을 경우 LAnimManager에 의해 call된다.",
    "name": "stop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) true면 마지막 frame로 이동한다.",
     "isFinal": false,
     "name": "finish",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LAnim instance에 대한 이름",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "animation",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.fx.LAnim",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "animation과 theading 처리\n LAnim과 subclass 들에서 사용됨",
   "name": "Rui.fx.LAnimManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "animation과 theading 처리\n LAnim과 subclass 들에서 사용됨",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "animation thread를 시작한다.\n 한번에 오직 하나의 thread만 실행할 수 있다.",
    "name": "start",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "animation thread나 특정 animation instance를 중지한다.",
    "name": "stop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "중지할 특정 LAnim instance(optional)\n 만약 instance가 주어지지 않는다면, Manager는 thread와 모든 animation을 중지한다.",
     "isFinal": false,
     "name": "tween",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "animation",
  "propertys": [{
   "deprecated": false,
   "description": "기본 frame 비율 (frames per second).\n 더 나은 x-browser calibration을 위해 임의로 증가(느린 브라우저들은 frame이 더 떨어짐)",
   "isFinal": false,
   "name": "fps",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Int",
   "visibility": "public"
  }],
  "scope": "static",
  "type": "Rui.fx.LAnimManager",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "처음부터 끝까지 어떻게 animation을 진행할지 결정하는 Singleton 패턴",
   "name": "Rui.fx.LEasing",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "처음부터 끝까지 어떻게 animation을 진행할지 결정하는 Singleton 패턴",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Backtracks slightly, then reverses direction, overshoots end,\n then reverses and comes back to end.",
    "name": "backBoth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "Overshoot (optional)",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Backtracks slightly, then reverses direction and moves to end.",
    "name": "backIn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "Overshoot (optional)",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Overshoots end, then reverses and comes back to end.",
    "name": "backOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "Overshoot (optional)",
      "isFinal": false,
      "name": "s",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Bounces off start and end.",
    "name": "bounceBoth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Bounce off of start.",
    "name": "bounceIn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Bounces off end.",
    "name": "bounceOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "끝쪽을 향하여 천천히 감속하기 시작한다.",
    "name": "easeBoth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "끝쪽을 향하여 천천히 감속하기 시작한다.",
    "name": "easeBothStrong",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "끝쪽을 향하여 천천히 가속하기 시작한다.",
    "name": "easeIn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "끝쪽을 향하여 천천히 가속하기 시작한다.",
    "name": "easeInStrong",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "point들 간의 speed를 통일한다.",
    "name": "easeNone",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "끝쪽을 향하여 빠르게 감속하기 시작한다.",
    "name": "easeOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "끝쪽을 향하여 빠르게 감속하기 시작한다.",
    "name": "easeOutStrong",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "탄성 효과 snap both",
    "name": "elasticBoth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "진폭 (optional)",
      "isFinal": false,
      "name": "a",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "주기 (optional)",
      "isFinal": false,
      "name": "p",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "탄성 효과 snap in",
    "name": "elasticIn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "진폭 (optional)",
      "isFinal": false,
      "name": "a",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "주기 (optional)",
      "isFinal": false,
      "name": "p",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "탄성 효과 snap out",
    "name": "elasticOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재값을 계산하기 위해 사용되는 시간값",
      "isFinal": false,
      "name": "t",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값",
      "isFinal": false,
      "name": "b",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "시작값과 종료값 사이의 Delta",
      "isFinal": false,
      "name": "c",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "animation 총 길이",
      "isFinal": false,
      "name": "d",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "진폭 (optional)",
      "isFinal": false,
      "name": "a",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "주기 (optional)",
      "isFinal": false,
      "name": "p",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnDescription": "현재 animation 프레임에 대한 계산된 값",
    "returnType": "Number",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "animation",
  "propertys": [],
  "scope": "static",
  "type": "Rui.fx.LEasing",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "'attribute'의 'points' member에 의해 정의된 경로를 따라 element들을 이동하기 위한 LAnim subclass.\n 모든 'points'는 x, y 좌표 배열이다.\n &amp;lt;p&amp;gt;Usage: &amp;lt;code&amp;gt;var myAnim = new Rui.fx.LMotionAnim(el, { points: { to: [800, 800] } }, 1, Rui.fx.LEasing.easeOut);&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;",
   "name": "Rui.fx.LMotionAnim",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "animated 되어질 element에 대한 참조",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String | HTMLElement"
    },
    {
     "deprecated": false,
     "description": "animated될 attribute\n 각각의 attribute는 최소한 'to'나 'by' member가 정의된 object이다.\n 추가적인 옵션 member들은 'from'(defaults to current value)과 'unit'(defaults to 'px') 이다.\n 모든 attribute 이름은 camelCase 방식을 사용한다.",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "(optional, 기본값 1초) animation의 길이 (frames or seconds), defaults to time-based",
     "isFinal": false,
     "name": "duration",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Number"
    },
    {
     "deprecated": false,
     "description": "(optional, Rui.fx.LEasing.easeNone 기본값) 각 frame별 attribute에 적용되는 값을 계산 (일반적으로 Rui.fx.LEasing method)",
     "isFinal": false,
     "name": "method",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "'attribute'의 'points' member에 의해 정의된 경로를 따라 element들을 이동하기 위한 LAnim subclass.\n 모든 'points'는 x, y 좌표 배열이다.\n &amp;lt;p&amp;gt;Usage: &amp;lt;code&amp;gt;var myAnim = new Rui.fx.LMotionAnim(el, { points: { to: [800, 800] } }, 1, Rui.fx.LEasing.easeOut);&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "attribute값 반환",
    "name": "getAttribute",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "attribute값 설정",
    "name": "setAttribute",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "animation",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.fx.LAnim",
  "type": "Rui.fx.LMotionAnim",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "control point 들의 숫자에 대한 LBezier spline 들을 계산하기 위하여 사용된다.",
   "name": "Rui.fx.LBezier",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "control point 들의 숫자에 대한 LBezier spline 들을 계산하기 위하여 사용된다.",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "t 에 기반한 animated element의 현재 위치를 가져온다.\n 각각의 point는 'x'와 'y' 값들의 array 이다. (0 = x, 1 = y)\n 적어도 start와 end의 2개 point가  필요하다.\n 처음 point는 start이며, 마지막 point는 end이다.\n 추가적인 control point들은 옵션이다.",
   "name": "getPosition",
   "parameterType": "METHOD",
   "parameters": [
    {
     "deprecated": false,
     "description": "LBezier point들을 포함하고 있는 array",
     "isFinal": false,
     "name": "points",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    },
    {
     "deprecated": false,
     "description": "현재 위치를 지정하기 위한 기본이 되는 0에서 1사이의 숫자",
     "isFinal": false,
     "name": "t",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }
   ],
   "returnDescription": "정수 x와 y member data를 포함하는 array",
   "returnType": "Array",
   "scope": "instance",
   "visibility": "protected"
  }],
  "module": "animation",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.fx.LBezier",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LDragDropManager는 window에서 모든 LDragDrop 항목에 대한 element 상호작용을\n 추적하는 싱글턴 패턴이다.\n 일반적으로 이 클래스를 직접 호출하지는 않겠지만, 이것은 LDragDrop에\n 유용할 수 있는 도움을 주는 method를 가진다.",
   "name": "Rui.dd.LDragDropManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LDragDropManager는 window에서 모든 LDragDrop 항목에 대한 element 상호작용을\n 추적하는 싱글턴 패턴이다.\n 일반적으로 이 클래스를 직접 호출하지는 않겠지만, 이것은 LDragDrop에\n 유용할 수 있는 도움을 주는 method를 가진다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "INTERSECT 모드에 있을때 드래그드랍 event들에 의해 반환된 드래그드랍\n object들의 목록으로부터 가장 일치하는 것을 가져오는 helper 함수\n 이는 커서가 가리키는 첫번째 object나 드래그된 element와 가장 크게\n 오버랩된 object를 반환한다.",
    "name": "getBestMatch",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드래그드랍 object들의 array\n targeted",
     "isFinal": false,
     "name": "dds",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "LDragDrop[]"
    }],
    "returnDescription": "가장 일치하는 object",
    "returnType": "Rui.dd.LDragDrop",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "클라이언트 height를 가져온다.",
    "name": "getClientHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "픽셀 단위의 클라이언트 height",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "클라이언트 width를 가져온다.",
    "name": "getClientWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "픽셀 단위의 클라이언트 width",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "DOM element에 대한 스타일 property를 반환한다.(다시 말하면, document.getElById(id).style)",
    "name": "getCss",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "가져올 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "element의 스타일 property",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the LDragDrop instance for a given id\n 주어진 id에 대한 LDragDrop 인스턴스를 반환한다.",
    "name": "getDDById",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "LDragDrop object의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "드래그드랍 object, 찾지 못한 경우 null",
    "returnType": "Rui.dd.LDragDrop",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "실제 DOM element를 반환한다.",
    "name": "getElement",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "가져올 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "The element",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "설정할 padding 값을 포함한 드래그드랍 element의 위치와 사이즈를 포함하는\n Region object를 반환한다.",
    "name": "getLocation",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치를 가져올 드래그드랍 object",
     "isFinal": false,
     "name": "oDD",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.dd.LDragDrop"
    }],
    "returnDescription": "a 설정될 padding 인스턴스를 포함한 element가 나타내는",
    "returnType": "Rui.util.LRegion",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "html element에 대한 X 위치를 반환한다.",
    "name": "getPosX",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "X 좌표",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "html element에 대한 Y 위치를 반환한다.",
    "name": "getPosY",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Y 좌표",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "인스턴스가 속할 모든 그룹에 전달된 드래그드랍 인스턴스들을 반환한다.",
    "name": "getRelated",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "연관된 데이터를 가져올 object",
      "isFinal": false,
      "name": "p_oDD",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.dd.LDragDrop"
     },
     {
      "deprecated": false,
      "description": "true인 경우 타겟팅 가능한 object만 반환한다.",
      "isFinal": false,
      "name": "bTargetsOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "연관된 인스턴스",
    "returnType": "LDragDrop[]",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scrollLeft을 가져온다.",
    "name": "getScrollLeft",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "document의 scrollTop",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scrollTop을 가져온다.",
    "name": "getScrollTop",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "document의 scrollTop",
    "returnType": "int",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "특정 element의 스타일 property를 반환한다.",
    "name": "getStyle",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "스타일 property",
      "isFinal": false,
      "name": "styleProp",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnDescription": "스타일 property의 값",
    "returnType": "string",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "클릭되었는지 여부를 결정하기 위해서 handle element에 대해\n 인접한 parent와 모든 child 노드를 재귀적으로 탐색한다.",
    "name": "handleWasClicked",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주어진 element가 드래그드랍 항목으로써 등록되어 있는지에 대한\n 여부를 결정하는 유틸리티 함수",
    "name": "isDragDrop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "체크할 element id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "해당 element가 LDragDrop인 경우 true, 아니면 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "주오진 드래그드랍 object에 대해 주어진 element가 드래그드랍 handle로써\n 등록되었는지에 대한 여부를 결정하는 유틸리티 함수",
    "name": "isHandle",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "체크할 element id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "해당 element가 LDragDrop handle인 경우 true, 아니면 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 드래그 obj에 대해 특정 dd 대상이 유효한 대상인 경우 true를 반환한다.",
    "name": "isLegalTarget",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "드래그 obj",
      "isFinal": false,
      "name": "oDD",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.dd.LDragDrop"
     },
     {
      "deprecated": false,
      "description": "대상",
      "isFinal": false,
      "name": "oTargetDD",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.dd.LDragDrop"
     }
    ],
    "returnDescription": "dd obj애 대해 대상이 유요한 대상인 경우 true",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그드랍이 lock 되어 있는지 여부 확인",
    "name": "isLocked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "드래그드랍이 lock되어 있으면 true 아니면 false",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object가 LDragDrop typeof인지 LDragDrop의 정확한 서브클래스인지를\n 투명하게 결정할 수 있는 것이 목표이다.\n typeof는 'object'를 반환하며, oDD.constructor.toString()은 항상\n  서브클래스의 이름이 아닌 'LDragDrop'을 반환한다.\n 그래서 지금은 그냥 LDragDrop에서 잘 알려진 변수를 평가한다.",
    "name": "isTypeOfDD",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "평가할 object",
     "isFinal": false,
     "name": "oDD",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "typeof oDD가 LDragDrop와 같은 경우 true",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 드래그드랍을 기능적으로 lock 한다.",
    "name": "lock",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "대상 element의 위치에 대한 element의 x/y 위치를 설정한다.",
    "name": "moveToEl",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동할 element",
      "isFinal": false,
      "name": "moveEl",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "element의 위치 참조",
      "isFinal": false,
      "name": "targetEl",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "숫자 배열 정렬 함수",
    "name": "numericSort",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 그룹에서 드래그드랍 object들의 top-left와 bottom-right 지점의\n 캐시를 새로고침한다.\n 이것은 드래그드랍 인스턴스에 저장되는 포맷이며, 전형적인 사용법은 다음과 같다:\n &amp;lt;code&amp;gt;\n Rui.dd.LDragDropManager.refreshCache(ddinstance.groups);\n &amp;lt;/code&amp;gt;\n 다른 방법으로:\n &amp;lt;code&amp;gt;\n Rui.dd.LDragDropManager.refreshCache({group1:true, group2:true});\n &amp;lt;/code&amp;gt;",
    "name": "refreshCache",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로고침할 그룹들의 연관 배열",
     "isFinal": false,
     "name": "groups",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "각각의 LDragDrop 인스턴스는 반드시 LDragDropManager와 같이 등록되어야 한다.\n 이것은 LDragDrop.init()에서 실행된다.",
    "name": "regDragDrop",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "등록할 LDragDrop object",
      "isFinal": false,
      "name": "oDD",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.dd.LDragDrop"
     },
     {
      "deprecated": false,
      "description": "해당 element가 속할 그룹의 이름",
      "isFinal": false,
      "name": "group",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "각각의 LDragDrop handle element는 반드시 등록되어야 한다.\n 이것은 LDragDrop.setHandleElId()이 실행될때 자동적으로 수행된다.",
    "name": "regHandle",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element가 핸들링 할 LDragDrop id",
      "isFinal": false,
      "name": "sDDId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "드래그 될 element의 id\n handle",
      "isFinal": false,
      "name": "sHandleId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 픽셀 threshold나 mousedown hold 시간 threshold가\n 만났을때 발생한다.",
    "name": "startDrag",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "원래 mousedown의 X 위치",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "원래 mousedown의 Y 위치",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재의 드래그를 끝내고 상태를 초기화 하며, endDrag와 mouseUp event들을 발생시킨다.\n 드래그 하는 동안 mouseup이 감지 되었을때 내부적으로 호출된다.\n 다른 event(이를테면, onDrag에서 받는 mousemove event)나 pageX와 pageY로 정의된\n fake event(그래서 endDrag와 onMouseUp은 사용가능한 위치데이터를 가짐)에 의해\n 전달됨으로써 드래그 하는 동안 수동적으로 발생할 수 있다.\n 대안으로, silent parameter에 대해 true를 전달해서 ednDrag나 onMouseUp event들이\n 스킵되도록 한다.(그래서 event 데이터가 필요하지 않다.)",
    "name": "stopDrag",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "mouseup event나 다른 pageX and pageY로 정의된 event(아니면 fake event)나\n                  silent parameter가 true인 경우에는 없음",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Event"
     },
     {
      "deprecated": false,
      "description": "true인 경우 enddrag와 mouseup event를 스킵한다.",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이 항목이 켜지는 경우 event의 디폴트 처리와 event의 전파를 막는 유틸리티",
    "name": "stopEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "the event as returned by this.getEvent()",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "두 노드를 바꾼다.\n IE 브라우저에서는 다른 IE 작동을 에뮬레이팅 하기 위해서 native method를 사용한다.",
    "name": "swapNode",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 드래그드랍을 기능적으로 unlock 한다.",
    "name": "unlock",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element가 존재하고 DOM안에 있는지 확인하기 위해 체크한다.\n 주요 목적은 innerHTML 에서 DOM으로부터 드래그드랍 object를 제거하기 위해\n 사용되는 경우를 핸들링하는 것이다.\n IE 브라우저는 그런 element의 offsetParent를 액세스 하려고 할때\n 'unspecified error'를 제공한다.",
    "name": "verifyEl",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "체크할 element",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "element가 사용가능한 경우 true",
    "returnType": "boolean",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "dragdrop",
  "propertys": [
   {
    "deprecated": false,
    "description": "intersect에서 드래그드랍 상호작용은 커서 위치나 두개 혹은 그 이상의\n 드래그드랍 object들의 overlap 양에 의해 정의된다.",
    "isFinal": true,
    "name": "INTERSECT",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "point 모드에서 드래그드랍 상호작용은 드래그드랍 동안 커서의 위치에 의해 정의된다.",
    "isFinal": true,
    "name": "POINT",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "intersect에서 드래그드랍 상호작용은 두개 혹은 그 이상의\n 드래그드랍 object들의 overlap에 의해서만 정의된다.",
    "isFinal": true,
    "name": "STRICT_INTERSECT",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그가 초기화 되기 이전 mousedown이후에 마우스를 움직일\n 필요가 있을 경우 픽셀의 숫자. 기본값은 3",
    "isFinal": false,
    "name": "clickPixelThresh",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mouseup event를 가져오지 않는 경우 드래그를 초기화 하기 위한\n mousedown event이후의 밀리초 숫자. 기본값은 1000.",
    "isFinal": false,
    "name": "clickTimeThresh",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "A reference to the style property",
    "isFinal": false,
    "name": "css",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The element",
    "isFinal": false,
    "name": "el",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The element id",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상호작용의 현재 집합에 대한 추가적인 정보를 제공한다.\n event hanlder들로부터 액세스될 수 있다.\n 이것은 다음과 같은 property들을 포함한다:\n &amp;lt;pre&amp;gt;\n\n       out:       onDragOut interactions\n       enter:     onDragEnter interactions\n       over:      onDragOver interactions\n       drop:      onDragDrop interactions\n       point:     커서의 위치\n       draggedRegion: interaction시 드래그된 element의 위치\n       sourceRegion: interaction시 source element의 위치\n       validDrop: boolean\n &amp;lt;/pre&amp;gt;",
    "isFinal": false,
    "name": "interactionInfo",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The current drag and drop mode.  Default: POINT",
    "isFinal": false,
    "name": "mode",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "정의한 event들의 기본 작업을 막아야 할지에 대한 여부를 결정하기 위한 flag.\n 기본적으로 true 이지만, 기본 작업을 원하는 경우 false로 설정할 수 있다.(추천하지는 않음)",
    "isFinal": false,
    "name": "preventDefault",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "생성한 event들의 전파를 그만두어야 할지에 대한 여부를 결정하기 위한 flag.\n 기본적으로 true 이지만 마우스 클릭이 필요한 다른 특징을 포함하는\n html element인 경우 false로 설정하고자 할 수도 있다.",
    "isFinal": false,
    "name": "stopPropagation",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 하는 동안 끊임없는 각 드래그드랍 linked element의 lookup을\n 강제하고자 하는 경우 useCache를 false로 설정한다.",
    "isFinal": false,
    "name": "useCache",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이 property는 모든 LDragDrop 인스턴스에서의 shim element의 광범위한 사용 전환에 사용된다,\n 기본적으로 backcompat에 대해 false이다.(사용법: Rui.dd.LDDM.useShim = true)",
    "isFinal": false,
    "name": "useShim",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "scope": "static",
  "type": "Rui.dd.LDragDropManager",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "대상을 드래그하거나 드랍할 수 있는 항목의 인터페이스나 기본 작업을 정의한다.\n 이것은 startDrag, onDrag, onDragOver, onDragOut에 대한\n event handler 오버라이딩 되거나 상속되도록 디자인 되어졌다.\n html 참조가 LDragDrop 인스턴스와 연결될 수 있는 건 3개 까지이다.\n &amp;lt;ul&amp;gt;\n &amp;lt;li&amp;gt;linked element: 생성자에 전달된 element.\n 이것은 다른 LDragDrop object들과 상호작용하는데 대한 경계를 정의하는 element이다.&amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;handle element(s): 클릭된 element가handle element와 매치되는 경우에만 발생하는 드래그 작업.\n 기본적으로 이것은 linked element이지만 드래그 작업을 초기화 하기 위한\n linked element의 부분으로만 여겨질 기회는 있으며, setHandleElId() method는\n 이것을 정의하기 위한 방법을 제공한다.&amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;drag element: 이것은 드래그 작업 동안 커서와 함께 움직여야 하는 element를 표현한다.\n 기본적으로 이것은 {",
   "name": "Rui.dd.LDragDrop",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "해당 인스턴스에 연결된 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "LDragDrop object들과 연관된 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정가능한 attribue를 포함한 object\n                LDragDrop에 대해 유요한 property들:\n                    padding, isTarget, maintainOffset, primaryButtonOnly,",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "대상을 드래그하거나 드랍할 수 있는 항목의 인터페이스나 기본 작업을 정의한다.\n 이것은 startDrag, onDrag, onDragOver, onDragOut에 대한\n event handler 오버라이딩 되거나 상속되도록 디자인 되어졌다.\n html 참조가 LDragDrop 인스턴스와 연결될 수 있는 건 3개 까지이다.\n &amp;lt;ul&amp;gt;\n &amp;lt;li&amp;gt;linked element: 생성자에 전달된 element.\n 이것은 다른 LDragDrop object들과 상호작용하는데 대한 경계를 정의하는 element이다.&amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;handle element(s): 클릭된 element가handle element와 매치되는 경우에만 발생하는 드래그 작업.\n 기본적으로 이것은 linked element이지만 드래그 작업을 초기화 하기 위한\n linked element의 부분으로만 여겨질 기회는 있으며, setHandleElId() method는\n 이것을 정의하기 위한 방법을 제공한다.&amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;drag element: 이것은 드래그 작업 동안 커서와 함께 움직여야 하는 element를 표현한다.\n 기본적으로 이것은 {",
  "events": [
   {
    "deprecated": false,
    "description": "dragEvent 이전에 발생한다.",
    "name": "b4Drag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dragDropEvent 이전에 발생한다.",
    "name": "b4DragDrop",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dragOutEvent 이전에 발생한다.",
    "name": "b4DragOut",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dragOverEvent 이전에 발생한다.",
    "name": "b4DragOver",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "endDragEvent 이전에 발생한다. false 반환은 event를 취소한다.",
    "name": "b4EndDrag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mouseDownEvent가 발생하기 전에 mousedown event에의 접근을 제공한다. false 반환은 드래그를 취소한다.",
    "name": "b4MouseDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "startDragEvent 전에 발생하며 false 반환은 startDrag Event를 취소한다.",
    "name": "b4StartDrag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 하는 동안 모든 mousemove event가 발생한다.",
    "name": "drag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그된 object가 다른데 드랍됐을 때 발생한다.",
    "name": "dragDrop",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그된 object가 다른 타겟가능한 드래그나 드랍 object와 처음으로 상호작용할 때 발생한다.",
    "name": "dragEnter",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그된 object가 onDragEnter를 발생시킨 object 위에 더 이상 있지 않으면 발생한다.",
    "name": "dragOut",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그와 드랍 object위에 있는 동안 모든 mousemove event가 발생한다.",
    "name": "dragOver",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그가 초기화된 이후에 mouseup event에서 발생한다.(startDrag 발생)",
    "name": "endDrag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그된 object가 드랍 대상을 포함하고 있지 않은 위치에 드랍되었을때 발생한다.",
    "name": "invalidDrop",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mousedown event에의 접근을 제공한다. mousedown는 드래그 작업에서 항상 같은 결과를 내지 않는다.",
    "name": "mouseDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 작업이 끝났을 때 LDragDropManager 안에서부터 발생하는 이벤트",
    "name": "mouseUp",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mousedown과 드래그 threshold가 만난 이후에 발생한다. 드래그 threshold 기본값은 마우스 움직임의 3픽셀이거나 mousedown의 홀딩의 1초이다.",
    "name": "startDrag",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "드래그를 초기화 하지 않아야 할 element들의 css 클래스를 명시하게 해준다.",
    "name": "addInvalidHandleClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "무시하고자 하는 element의 클래스",
     "isFinal": false,
     "name": "cssClass",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그를 초기화 하지 말아야 할 드래그 handle의 child에 대한 element id를 명시하게 해준다.",
    "name": "addInvalidHandleId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "무시하고자 하는 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "클릭됐을 때 드래그 작업을 시작하지 말아야할 tag 이름을 명시하게 한다.\n 이것은 드래그를 시작하는 것 이외의 다른 일을 하는 드래그 handle 안에\n 링크들을 끼워 넣기 용이하도록 디자인 된다.",
    "name": "addInvalidHandleType",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "제외되는 element의 타입",
     "isFinal": false,
     "name": "tagName",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 인스턴스를 연관된 드래그/드랍 object들의 그룹에 추가한다.\n 모든 인스턴스는 적어도 하나의 그룹에 속하며, 필요한 만큼 많은 그룹에 속할 수 있다.",
    "name": "addToGroup",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "그룹의 이름",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 인스턴스에 적용된 모든 제한을 삭제한다.\n 그것들은 시간에 대한 제한의 종속성을 유지할 수가 없기 때문에 tick들 또한 삭제한다.",
    "name": "clearConstraints",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 인스턴스에 대해 정의된 tick 간격을 삭제한다.",
    "name": "clearTicks",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그한 실제 element에 대한 참조를 반환한다.\n 이것은 html element로써 같지만, 다른 element에 할당될 수도 있다.\n 이에 대한 예제는 Rui.dd.LDDProxy에서 찾을 수 있다.",
    "name": "getDragEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "html element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "linked element에 대한 참조를 반환한다.",
    "name": "getEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "html element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 인스턴스가 lock 되어 있거나 드래그드랍 매니저가 lock 되어 있는 경우 true를 반환한다.\n (이는 페이지에 모든 드래그/드랍이 비활성되어 있는 것을 의미함.)",
    "name": "isLocked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "해당 obj나 모든 드래그/드랍이 lock되어 있으면 true, 아니면 false",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 클릭이 무시되어야 하는 경우 확인하기 위한 tag 제외 목록을 체크한다.",
    "name": "isValidHandleChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "평가할 HTMLElement",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnDescription": "유효한 tag 타입인 경우 true, 아니면 false",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 인스턴스를 lock 한다.",
    "name": "lock",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "제공된 상호작용 그룹으로부터 해당 인스턴스를 제거한다.",
    "name": "removeFromGroup",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드랍할 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "유효하지 않은 css 클래스를 제거한다.",
    "name": "removeInvalidHandleClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "다시 활성화하고자 하는 element의 클래스",
     "isFinal": false,
     "name": "cssClass",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "유효하지 않은 handle id를 제거한다.",
    "name": "removeInvalidHandleId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "다시 활성화할 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Unsets an excluded tag name set by addInvalidHandleType\n addInvalidHandleType에 의해 설정한 제외된 tag 이름을 unset한다.",
    "name": "removeInvalidHandleType",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "제외하지 않을 element의 타입",
     "isFinal": false,
     "name": "tagName",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "수동으로 dd element의 재위치 하고자 하는 경우 resetConstraints가 반드시 호출되어야 한다.",
    "name": "resetConstraints",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 동안 커서와 함께 움직일 linked element이외의 element를\n 명시하게 한다.",
    "name": "setDragElId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드래그를 초기화 하기 위해 사용될 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 작업을 초기화하기 위해 사용되어야 할 linked element의 child를\n 명시하게 한다.\n content div가 텍스트와 링크들을 가지는 경우가 이에 대한 예제가 될 것이다.\n content 영역의 어디든지 클릭하는 것은 일반적으로 드래그 작업을 시작할 것이다.\n 드래그 작업을 시작하는 content div 안의 element를 명시하기 위해\n 이 method를 사용한다.",
    "name": "setHandleElId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드래그를 초기화 하기 위해 사용되는 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 handle로써 linked element의 바깥 element를 설정하게 한다.",
    "name": "setOuterHandleElId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드래그를 초기화 하기 위해 사용되는 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "대상 지역에 픽셀 단위의 padding을 설정한다.\n 대상을 계산하는데에 대한 가상 object 사이즈를 효과적으로 증가(감소)시킨다.\n 약칭의 css-style을 제공한다; 하나의 parameter만 전달된 경우 모든 side가\n padding을 가질 것이며, 두개만 전달된 경우 top과 bottom은 첫번째 parameter,\n left와 right는 두번째를 가질 것이다.",
    "name": "setPadding",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Top pad",
      "isFinal": false,
      "name": "iTop",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "Right pad",
      "isFinal": false,
      "name": "iRight",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "Bot pad",
      "isFinal": false,
      "name": "iBot",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "Left pad",
      "isFinal": false,
      "name": "iLeft",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본적으로 element는 화면에서 어떤 곳에든 드래그될 수 있다.\n element의 수평 움직임을 제한하기 위해서 이 method를 사용한다.\n y 축에의 드래그를 lock 하고자 하는 경우 parameter에 0,0을 전달한다.",
    "name": "setXConstraint",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element가 left로 움직일 수 있는 픽셀 숫자",
      "isFinal": false,
      "name": "iLeft",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "element가 right로 움직일 수 있는 픽셀 숫자",
      "isFinal": false,
      "name": "iRight",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "element가 한번에 움직여야 할 iTickSize 픽셀을 명시하기 위한 부가적인 parameter",
      "isFinal": false,
      "name": "iTickSize",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본적으로 element는 화면에서 어떤 곳에든 드래그될 수 있다.\n element의 수직 움직임을 제한하기 위해서 이 method를 사용한다.\n x 축에의 드래그를 lock 하고자 하는 경우 parameter에 0,0을 전달한다.",
    "name": "setYConstraint",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "element가 up으로 움직일 수 있는 픽셀 숫자",
      "isFinal": false,
      "name": "iUp",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "element가 down으로 움직일 수 있는 픽셀 숫자",
      "isFinal": false,
      "name": "iDown",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "element가 한번에 움직여야 할 iTickSize 픽셀을 명시하기 위한 부가적인 parameter",
      "isFinal": false,
      "name": "iTickSize",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그/드랍 object가 클릭되고 드래그나 mousedown 시간 초입이\n 만난 이후에 호출되는 추상 method.",
    "name": "startDrag",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "클릭 위치",
      "isFinal": false,
      "name": "X",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "클릭 위치",
      "isFinal": false,
      "name": "Y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체명",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 인스턴스를 unlock 한다.",
    "name": "unlock",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 element에 대한 모든 드래그와 드랍에 대한 연결 정보를 삭제한다.",
    "name": "unreg",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "dragdrop",
  "propertys": [
   {
    "deprecated": false,
    "description": "연결된 dom element가 약세스 가능할때까지 사용가능한 property는 false이다.",
    "isFinal": false,
    "name": "available",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "다른 dd object에 의해 대상이 된 경우 확인하기 위해 테스팅 할때\n 드래그와 드랍 object에 할당되는 property.\n 이 property는 마우스 교차의 포커스를 결정하는데 도움을 주기 위하여\n 교차 모드가 사용될 수 있다.\n LDDM.getBestMatch은 여러 대상들이 같은 상호작용의 일부분일때\n 교차 모드에서 가장 가까운 일치점을 결정하는데 이 property를 처음으로 사용한다.",
    "isFinal": false,
    "name": "cursorIsOver",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 flag가 true인 경우 드랍 event들을 발생시키지 않는다.\n element는 유일한 drag element이다.(드랍이 아닌 이동에 대해)",
    "isFinal": false,
    "name": "dragOnly",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그룹은 관련된 LDragDrop object들의 집합을 정의한다.\n 인스턴스는 같은 그룹의 다른 LDragDrop object와 상호작용할 때만 event를 가져온다.\n 이것은 원하는 경우 여러 그룹에 하나의 LDragDrop subclass 사용을 하게 해준다.",
    "isFinal": false,
    "name": "groups",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본적으로 드래그는 mousedown이 linked element 영역 안에서\n 일어나는 경우에만 초기화 될 수 있다.\n 이것은 이전의 mouseup이 window 밖에서 발생한 경우 mousedown을\n 잘못 보고하는 몇몇 브라우저 들에서 버그를 부분적으로 해결하기 위해 일부 이루어진다.\n outer handle이 정의되어 있는 경우 해당 property를 true로 설정한다.",
    "isFinal": false,
    "name": "hasOuterHandles",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본적으로 모든 인스턴스들은 드랍 대상이 될 수 있다.\n 이것은 isTarget을 false로 설정함으로써 비활성화 될 수 있다.",
    "isFinal": false,
    "name": "isTarget",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "기본적으로 드래그와 드랍 인스턴스는 첫번째 버튼 클릭에만\n 반응을 한다.(오른손잡이용 마우스에 대한 왼쪽 클릭)\n 브라우저에 의해 전달되는 마우스 클릭으로 시작하는 드래그와 드랍을\n 가능하게 하기 위해서 true로 설정한다.",
    "isFinal": false,
    "name": "primaryButtonOnly",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 flag가 true인 경우 shim은 마우스 event 추적을 위한 screen/viewable 영역에 배치될 것이다.\n iframe과 다른 컨트롤에서의 element 드래그에 도움이 된다.",
    "isFinal": false,
    "name": "useShim",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.dd.LDragDrop",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "드래그 하는 동안 연결된 element가 마우스 커서를 따라가는\n 것에 대한 LDragDrop 구현",
   "name": "Rui.dd.LDD",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "연결된 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop 항목들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "LDD에 대한 설정 가능한 attribute Vaild attribute를 포함한 object: scroll",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "드래그 하는 동안 연결된 element가 마우스 커서를 따라가는\n 것에 대한 LDragDrop 구현",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "드래그 element를 클릭된 element상의 위치에 관련된\n 커서 위치를 포함하는 mousedown이나 클릭 event의 위치에 설정한다.\n 커서가 있는 곳에 element를 놓고자 하는 경우 이것을 override 한다.",
    "name": "setDragElPos",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "mousedown이나 드래그 event의 X 좌표",
      "isFinal": false,
      "name": "iPageX",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "mousedown이나 드래그 event의 Y 좌표",
      "isFinal": false,
      "name": "iPageY",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체명",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "dragdrop",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDragDrop",
  "type": "Rui.dd.LDD",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "드래그 작업동안 커서를 따라가는 document안의 빈 bordered div를 삽입하는 LDragDrop 구현\n 클릭할 때, frame div은 연결된 html element의 치수로 사이즈가 변경되며,\n 연결된 element의 정확한 위치로 이동된다.\n\n \"frame\" element에 대한 참조는 페이지의 모든 LDDProxy element들의 위치에\n 드래그되면서 만들어진 싱글 proxy element를 참조하십시오.",
   "name": "Rui.dd.LDDProxy",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "연결된 html element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop object들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정 가능한 attribute를 포함한 object\n                LDragDrop에 추가적으로 LDDProxy에 대해 유효한 속성들: resizeFrame, centerFrame, dragElId",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "드래그 작업동안 커서를 따라가는 document안의 빈 bordered div를 삽입하는 LDragDrop 구현\n 클릭할 때, frame div은 연결된 html element의 치수로 사이즈가 변경되며,\n 연결된 element의 정확한 위치로 이동된다.\n\n \"frame\" element에 대한 참조는 페이지의 모든 LDDProxy element들의 위치에\n 드래그되면서 만들어진 싱글 proxy element를 참조하십시오.",
  "events": [
   {
    "deprecated": false,
    "description": "",
    "name": "b4Drag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "b4DragDrop",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "b4DragOut",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "b4DragOver",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "b4EndDrag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "b4MouseDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "b4StartDrag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "drag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "dragDrop",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "dragEnter",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "dragOut",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "dragOver",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "endDrag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "invalidDrop",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "mouseDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "mouseUp",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "startDrag",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "proxy element가 아직 존재하지 않는 경우 생성한다.",
    "name": "createFrame",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체명",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "dragdrop",
  "propertys": [{
   "deprecated": false,
   "description": "기본 드래그 frame div id",
   "isFinal": false,
   "name": "dragElId",
   "parameterType": "PROPERTIES",
   "scope": "static",
   "type": "String",
   "visibility": "public"
  }],
  "scope": "instance",
  "superclass": "Rui.dd.LDD",
  "type": "Rui.dd.LDDProxy",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "이동이 아닌, 대상이 드랍될 수 있는 LDragDrop 구현.\n You would get the same result by simply omitting implementation\n for the event callbacks, but this way we reduce the processing cost of the\n event listener and the callbacks.\n event callbakc에 대한 간단하게 생략된 구현에 의해 똑같은 결과를 얻을 수 있다.\n 그러나 이러한 방법은 event listener나 callback의 처리 비용을 감소시킨다.",
   "name": "Rui.dd.LDDTarget",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "드랍 대상인 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop object들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정 가능한 attribute를 포함한 object\n                 LDragDrop에 추가적으로 LDDTarget에 대해 유효한 속성들:\n                    none",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "이동이 아닌, 대상이 드랍될 수 있는 LDragDrop 구현.\n You would get the same result by simply omitting implementation\n for the event callbacks, but this way we reduce the processing cost of the\n event listener and the callbacks.\n event callbakc에 대한 간단하게 생략된 구현에 의해 똑같은 결과를 얻을 수 있다.\n 그러나 이러한 방법은 event listener나 callback의 처리 비용을 감소시킨다.",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "객체명",
   "name": "toString",
   "parameterType": "METHOD",
   "parameters": [],
   "returnType": "String",
   "scope": "instance",
   "visibility": "public"
  }],
  "module": "dragdrop",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDragDrop",
  "type": "Rui.dd.LDDTarget",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "canMarkable 이벤트를 수행할 지 여부\n (사용할 경우 성능 저하가 발생합니다. 꼭 필요한 경우만 사용하세요.)",
    "isFinal": false,
    "name": "canMarkableEvent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "rui_config.js 에 있는 기본 failure handler를 사용할지 여부를 리턴한다.",
    "isFinal": false,
    "name": "defaultFailureHandler",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Field 정보를 가지는 배열",
    "isFinal": false,
    "name": "fields",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "데이터 load 후에 선택될 레코드를 지정한다.\n 기본값은 -1이며, 0 이상의 값을 입력시 해당 행의 레코드가 focus된다.",
    "isFinal": false,
    "name": "focusFirstRow",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "dataSet의 id",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "대량건의 데이터를 로딩할 경우 timer로 처리하여 ie에서 스크립트 로딩 메시지가 출력하지 않게 한다.",
    "isFinal": false,
    "name": "lazyLoad",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "5000",
    "deprecated": false,
    "description": "대량건의 데이터를 몇건씩 분할하여 처리할 것인지 결정하는 속성",
    "isFinal": false,
    "name": "lazyLoadCount",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "대량건의 데이터를 분할하여 처리할 때 timer의 시간(ms)",
    "isFinal": false,
    "name": "lazyLoadTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "서버에서 받은 데이터가 기존에 받은 데이터와 같으면 데이터를 로딩하지 않는다. (같은 데이터면 모든 이벤트도 작동 안함)",
    "isFinal": false,
    "name": "loadCache",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "POST",
    "deprecated": false,
    "description": "ajax request를 호출할 때 GET 방식으로 처리할 지 POST방식으로 처리할 지 결정한다.",
    "isFinal": false,
    "name": "method",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "sortable을 멀티 필드로 적용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "multiSortable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "삭제시 삭제건으로 처리하지 않고 state만 바꾼다.",
    "isFinal": false,
    "name": "remainRemoved",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "DataSet을 serialize할 때 metaData를 포함할지 여부.",
    "isFinal": false,
    "name": "serializeMetaData",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "response timeout 시간 (async일때만 작동함.)",
    "isFinal": false,
    "name": "timeout",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "콤포넌트와 연계된 데이터를 처리하는 객체",
   "name": "Rui.data.LDataSet",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LDataSet.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "콤포넌트와 연계된 데이터를 처리하는 객체",
  "events": [
   {
    "deprecated": false,
    "description": "Record 객체가 추가될 경우 수행하는 이벤트",
    "name": "add",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "record객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "row의 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "setMarkAll메소드나 clearMark 메소드가 호출되면 발생하는 이벤트",
    "name": "allMarked",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "선택 여부",
      "isFinal": false,
      "name": "isSelect",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "load이 발생하기전 수행하는 이벤트",
    "name": "beforeLoad",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "서버에서 데이터를 로딩한 후 메모리로 로딩하기전 호출되는 이벤트",
    "name": "beforeLoadData",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row가 선택이 가능한지 여부를 리턴하는 이벤트",
    "name": "canMarkable",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "현재 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Row가 변경되지전에 변경을 해도 되는지 체크하는 이벤트. 일반적으로 유효성 체크로 사용",
    "name": "canRowPosChange",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "target 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "현재 row 위치",
      "isFinal": false,
      "name": "oldRow",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "commit시 발생하는 이벤트",
    "name": "commit",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터 전체의 구조가 변경될 경우 수행하는 이벤트 sort, filter ...등",
    "name": "dataChanged",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "dataChanged 이벤트 수행 후 -1번 위치로 이동할지 지정할 row 이동할지 여부 (false: 이동안함, true: focusRow메소드 발생, -1보다 클 경우 setRow 호출)",
      "isFinal": false,
      "name": "moveRow",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "setRow 수행시 강제로 rowPosChanged 이벤트를 발생시킬지 여부",
      "isFinal": false,
      "name": "forceRow",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "visibility": "private"
   },
   {
    "deprecated": false,
    "description": "fields의 내용을 모둔 변경하면 수행하는 이벤트 setFields ...등",
    "name": "fieldsChanged",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터의 row가 invalid될 경우 호출되는 이벤트",
    "name": "invalid",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row의 위치값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "field의 아이디",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "출력될 메시지",
      "isFinal": false,
      "name": "message",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "load 메소드가 실행되면 호출되는 이벤트",
    "name": "load",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "load딩시 에러가 발생했을 경우 호출되는 이벤트",
    "name": "loadException",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "Exception 객체",
      "isFinal": false,
      "name": "throwObject",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "marked를 호출 할 수 있는지 여부 이벤트",
    "name": "marked",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "현재 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "선택 여부",
      "isFinal": false,
      "name": "isSelect",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record객체가 삭제될 경우 수행하는 이벤트",
    "name": "remove",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "record객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "row의 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Row의 변경이 된 후 수행하는 이벤트",
    "name": "rowPosChanged",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "현재 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이전 위치",
      "isFinal": false,
      "name": "oldRow",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터의 row의 state가 변경되는 경우 호출되는 이벤트",
    "name": "stateChanged",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "record객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "state값",
      "isFinal": false,
      "name": "state",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이전 state값",
      "isFinal": false,
      "name": "beforeState",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "undo시 발생하는 이벤트",
    "name": "undo",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "현재 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "이전 Record 상태 (Rui.data.LRecord.STATE_NORMAL | Rui.data.LRecord.STATE_INSERT | Rui.data.LRecord.STATE_UPDATE | Rui.data.LRecord.STATE_DELETE)",
      "isFinal": false,
      "name": "beforeState",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record객체의 값이 변경될 경우 수행하는 이벤트",
    "name": "update",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "record객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "row의 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row의 record id값",
      "isFinal": false,
      "name": "rowId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "col의 column field id값",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "원본값",
      "isFinal": false,
      "name": "originValue",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "이전값",
      "isFinal": false,
      "name": "beforeValue",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터의 row가 valid될 경우 호출되는 이벤트",
    "name": "valid",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row의 위치값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "field의 아이디",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "Record객체를 추가한다. 이 메소드는 다른 DataSet에 포함된 record객체를 add 하면 안된다.",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "입력하고자 하는 record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "row 값",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 대량건의 변경이 발생하여 성능 저하가 발생할 경우 이벤트를 발생시키지 않고 처리하는 메소드",
    "name": "batch",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "수행할 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "[optional] scope 정보",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "fields 정보를 제외한 모든 정보를 초기화 한다.",
    "name": "clearData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 환경정보 객체",
     "isFinal": false,
     "name": "option",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet에 적용된 filter를 지운다.",
    "name": "clearFilter",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet에 선택된 모든 마크 정보를 지운다.",
    "name": "clearMark",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet를 newId객체로 복사하여 리턴한다.",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "신규 DataSet객체 id 문자거나 id와 fields가 필수로 들어 있는 config객체",
     "isFinal": false,
     "name": "newId",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "Rui.data.LDataSet",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 확정한다.",
    "name": "commit",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "record들을 모두 commit한다.",
    "name": "commitRecords",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 정렬된 기준으로 sort 데이터를 확정한다. 메소드가 호출되면 데이터는 현재 그대로 남기고 정렬정보만 모두 초기화 된다.",
    "name": "commitSort",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "viod",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record객체를 생성한다. 생성된 레코드는 DataSet에 반영되지 않은 상태이다. 순수하게 LRecord객체만 생성된다.",
    "name": "createRecord",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "데이터 객체",
      "isFinal": false,
      "name": "data",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "[optional] option 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Rui.data.LRecord",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 dataChanged 이벤트를 수행한다.",
    "name": "dataChanged",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet객체 정보를 모두 지운다. (이벤트 포함)",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row 위치를 변경 할 수 있는지 여부",
    "name": "doCanRowPosChange",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "변경할 row 값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 위치를 변경",
    "name": "doRowPosChange",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "변경할 row 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 같은 위치가 선택되어도 다시 이벤트를 호출하게 하는 속성",
      "isFinal": false,
      "name": "forceRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 filter를 적용한다.\n function에서 true인 데이터만 남는다.",
    "name": "filter",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "정보를 비교할 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "[optional] scope정보 옵션",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "[optional] 필터후 원 위치로 이동할지 여부(기본값 true)",
      "isFinal": false,
      "name": "focusRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Id에 해당되는 Record의 index를 리턴한다.\n 주의! 이 메소드는 내부에서 전체 레코드를 대상으로 결과 index를 검색하므로 사용시 성능저하가 발생될 수 있습니다.",
    "name": "findRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "검색할 field명",
      "isFinal": false,
      "name": "fieldName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "검색할 field의 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 검색 시작할 index",
      "isFinal": false,
      "name": "startIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Id에 해당되는 Record객체를 리턴한다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "얻고자 하는 Record객체의 아이디",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "아이디에 해당되는 LRecord 객체",
    "returnType": "Rui.data.LRecord",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "위치값에 해당되는 Record객체를 리턴한다.",
    "name": "getAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "얻고자 하는 Record객체의 위치값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "아이디에 해당되는 LRecord 객체",
    "returnType": "Rui.data.LRecord",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터의 갯수를 리턴한다.",
    "name": "getCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "id정보에 해당되는 {Rui.data.LField} 객체 리턴",
    "name": "getFieldById",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "field의 Id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.data.LField",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "id정보에 해당되는 field 배열 index를 리턴",
    "name": "getFieldIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "field의 Id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 fields의 모든 항목을 리턴한다.",
    "name": "getFields",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 마크된 건수를 리턴한다.",
    "name": "getMarkedCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "마크된 건수 리턴",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet을 mark 모든 LRecord객체의 값을 가지는 LCollection을 리턴한다.",
    "name": "getMarkedRange",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.util.LCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 리턴한다.",
    "name": "getModifiedRecords",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경된 Record객체 배열",
    "returnType": "Rui.util.LCollection",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row와 col의 값을 리턴한다.",
    "name": "getNameValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 Id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 DataSet 기준으로 결과 데이터를 Object로 변환하여 리턴",
    "name": "getReadData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "응답 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 DataSet 기준으로 결과 데이터를 Object로 변환하여 리턴",
    "name": "getReadResponseData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "응답 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 시작위치 부터 끝위치에 해당하는 Record배열을 리턴한다.",
    "name": "getRecords",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작 위치",
      "isFinal": false,
      "name": "startIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "끝 위치",
      "isFinal": false,
      "name": "endIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 위치를 리턴",
    "name": "getRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "현재 위치를 리턴",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치 데이터의 상태를 반환한다.",
    "name": "getState",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "state Record에 해당되는 상태값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "서버에서 리턴한 DataSet의 총 갯수를 리턴한다.",
    "name": "getTotalCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "총갯수",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row와 col의 값을 리턴한다.",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Id에 해당되는 Record의 index를 리턴한다.",
    "name": "indexOfKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "얻고자 하는 Record객체의 아이디",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "record의 row 위치를 리턴한다. 이 메소드는 데이터셋의 row 위치를 검색하므로 성능 느리니 권장하지 않는다.",
    "name": "indexOfRecord",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "객체",
     "isFinal": false,
     "name": "LRecord",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LRecord"
    }],
    "returnDescription": "Record의 row 위치",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "init",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "idx위치에 Record객체를 추가하고 add 이벤트를 발생시킨다.",
    "name": "insert",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "입력 위치값",
      "isFinal": false,
      "name": "idx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "입력하고자 하는 record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체\n &amp;lt;div class='param-options'&amp;gt;\n ignoreEvent {boolean} 이벤트 무시",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "row 값",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row가 invalid될경우 호출되는 메소드",
    "name": "invalid",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row의 아이디",
      "isFinal": false,
      "name": "rowId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "col의 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "field의 아이디",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "출력할 메시지",
      "isFinal": false,
      "name": "message",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "원본 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "멀티건 여부",
      "isFinal": false,
      "name": "isMulti",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 filter가 적용되었는지 여부",
    "name": "isFiltered",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치를 마크가 가능한지 체크하는 canMarkable 이벤트를 발생시킨다. 리턴값이 false이면 마크되지 않는다.",
    "name": "isMarkable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치가 마크되어 있는지 리턴한다.",
    "name": "isMarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "마크 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Row가 delete상태 여부 확인. DataSet의 생성자속성의 remainRemoved값이 true일 경우만 사용이 가능하다.",
    "name": "isRowDeleted",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태 확인 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Row가 Insert상태 여부 확인",
    "name": "isRowInserted",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태 확인 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Row가 변경상태 여부 확인",
    "name": "isRowModified",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태 확인 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Row가 Update상태 여부 확인",
    "name": "isRowUpdated",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태 확인 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet에 변경정보가 존재하는지 확인",
    "name": "isUpdated",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 cell의 invalid 여부",
    "name": "isValid",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row의 아이디",
      "isFinal": false,
      "name": "rowId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "col의 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "field의 아이디",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "URL을 통해 데이터정보를 읽어온다.",
    "name": "load",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체\n &amp;lt;div class='param-options'&amp;gt;\n url {String} 서버 호출 url&amp;lt;br&amp;gt;\n params {Object} 서버에 전달할 파라미터 객체&amp;lt;br&amp;gt;\n method {String} get or post&amp;lt;br&amp;gt;\n sync {boolean} sync 여부 (default : false)&amp;lt;br&amp;gt;\n state {Rui.data.LRecord.STATE_INSERT|Rui.data.LRecord.STATE_UPDATE|Rui.data.LRecord.STATE_DELETE} load시 record의 기본 상태\n dataSetId {String} 서버에서 받아온 결과값의 dataSet의 id",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "data를 읽어온다.",
    "name": "loadData",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "데이터 객체",
      "isFinal": false,
      "name": "data",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체\n &amp;lt;div class='param-options'&amp;gt;\n  state {Rui.data.LRecord.STATE_INSERT|Rui.data.LRecord.STATE_UPDATE|Rui.data.LRecord.STATE_DELETE} load시 record의 기본 상태",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 colId의 해당되는 컬럼값의 max를 리턴한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "max",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "col의 Id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 시작위치",
      "isFinal": false,
      "name": "startRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 종료위치",
      "isFinal": false,
      "name": "endRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 colId의 해당되는 컬럼값의 평균을 리턴한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "max",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "col의 Id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 시작위치",
      "isFinal": false,
      "name": "startRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 종료위치",
      "isFinal": false,
      "name": "endRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 colId의 해당되는 컬럼값의 max를 리턴한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "min",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "col의 Id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 시작위치",
      "isFinal": false,
      "name": "startRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 종료위치",
      "isFinal": false,
      "name": "endRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "신규 Record객체를 생성하고 row위치를 이동한다. 생성된 레코드는 DataSet에 반영된 상태이다. 반복적인 레코드 추가는 반드시 add 메소드를 이용한다. 성능차이가 많이 발생됨.",
    "name": "newRecord",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] 위치",
      "isFinal": false,
      "name": "idx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] option객체\n &amp;lt;div class='param-options'&amp;gt;\n isInitData {boolean} 데이터를 초기화할지 여부를 설정&amp;lt;br&amp;gt;\n moveRow {boolean} record 추가시 해당 위치로 이동할지 여부",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "record의 값이 변경되면 호출되는 이벤트",
    "name": "onFieldChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "record의 state값이 변경되면 호출되는 이벤트",
    "name": "onStateChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 query에 해당되는 데이터를 리턴한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "정보를 비교할 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "scope정보 옵션",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Rui.util.LCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "id로 Record 객체를 삭제한다. (성능이 낮음)",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "지우고자 하는 키값",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "삭세된 Record객체",
    "returnType": "Rui.data.LRecord",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 Record객체를 지우고 dataChanged 이벤트를 발생시킨다.",
    "name": "removeAll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 환경정보 객체",
     "isFinal": false,
     "name": "option",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record객체를 삭제하고 remove 이벤트를 발생시킨다.",
    "name": "removeAt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "지우고자 하는 위치값",
      "isFinal": false,
      "name": "index",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "삭세된 Record객체",
    "returnType": "Rui.data.LRecord",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet에 마크된 row를 모두 삭제한다.",
    "name": "removeMarkedRows",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "data의 reverse 메소드 수행",
    "name": "reverse",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터 정보를 문자열로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LDataSet 배열의 데이터 정보를 리턴한다.",
    "name": "serializeDataSetList",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "데이터 객체 배열",
     "isFinal": false,
     "name": "dataSets",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "선택된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeMarkedOnly",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LDataSet 배열의 선택된 데이터 정보를 리턴한다.",
    "name": "serializeMarkedOnlyDataSetList",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "데이터 객체 배열",
     "isFinal": false,
     "name": "dataSets",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeModified",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] true일 경우 변경된 전체 데이터를 리턴",
     "isFinal": false,
     "name": "isAll",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LDataSet 배열의 변경된 데이터 정보를 리턴한다.",
    "name": "serializeModifiedDataSetList",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "데이터 객체 배열",
     "isFinal": false,
     "name": "dataSets",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "지정된 row외의 DataSet에 선택된 row를 선택 false로 설정한다.",
    "name": "setDemarkExcept",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "지정된 row index외의 select된 행을 false로 설정한다.",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 fields의 모든 항목을 변경한다.",
    "name": "setFields",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치",
     "isFinal": false,
     "name": "fields",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치를 마크한다.",
    "name": "setMark",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "마크 여부",
      "isFinal": false,
      "name": "isSelect",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet을 전체의 마크를 설정한다.",
    "name": "setMarkAll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "마크 여부",
     "isFinal": false,
     "name": "isSelect",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치 하나만 남기고 나머지는 모두 선택을 취소한다.",
    "name": "setMarkOnly",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "마크 여부",
      "isFinal": false,
      "name": "isSelect",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet을 sInx부터 eInx까지 마크한다.",
    "name": "setMarkRange",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작 위치",
      "isFinal": false,
      "name": "sInx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "종료 위치",
      "isFinal": false,
      "name": "eInx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "마크 여부",
      "isFinal": false,
      "name": "isSelect",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row와 colId의 값을 셋팅한다.",
    "name": "setNameValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 Id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "value 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 위치를 변경하기전에 canRowPosChange이벤트를 발생하여 이동 가능여부를 체크하고 가능하면 현재 위치를 변경한 후 rowPosChanged 이벤트를 발생시킨다.",
    "name": "setRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "변경하고자 하는 위치값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "config 객체\n                 (forceRow : [optional] 같은 위치가 선택되어도 다시 이벤트를 호출하게 하는 속성,\n                 ignoreCanRowPosChange : [optional] canRowPosChange 이벤트를 무시할지 여부)",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치 데이터의 상태를 변경한다.",
    "name": "setState",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "Record에 해당되는 상태값",
      "isFinal": false,
      "name": "state",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LRecord.STATE_NORMAL|Rui.data.LRecord.STATE_INSERT|Rui.data.LRecord.STATE_UPDATE|Rui.data.LRecord.STATE_DELETE"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row와 col의 값을 셋팅한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "value 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet을 정렬한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "sort",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "정보를 비교할 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "정렬 방식 [asc|desc]",
      "isFinal": false,
      "name": "desc",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "field에 해당하는 DataSet을 정렬한다.",
    "name": "sortField",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "field 명",
      "isFinal": false,
      "name": "fieldName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "정렬 방식 [asc|desc]",
      "isFinal": false,
      "name": "desc",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "json형 object의 정보로 DataSet을 정렬한다. { col1: 'asc', col2: 'desc' }",
    "name": "sorts",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "sort할 정보",
     "isFinal": false,
     "name": "sortInfos",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 colId의 해당되는 컬럼값의 합계를 리턴한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "sum",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "col의 Id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 시작위치",
      "isFinal": false,
      "name": "startRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] row의 종료위치",
      "isFinal": false,
      "name": "endRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "idx에 해당되는 Record를 복원한다.",
    "name": "undo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "복원하고자 하는 위치값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "전체 데이터를 초기 로딩데이터로 복원한다.",
    "name": "undoAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LRecord의 state에 따라 변경건을 등록한다.",
    "name": "updateState",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "LRecord객체",
     "isFinal": false,
     "name": "record",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LRecord"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row가 valid될경우 호출되는 메소드",
    "name": "valid",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row의 아이디",
      "isFinal": false,
      "name": "rowId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "col의 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "field의 아이디",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "멀티건 여부",
      "isFinal": false,
      "name": "isMulti",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row가 valid될경우 호출되는 메소드",
    "name": "validRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row의 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "propertys": [
   {
    "deprecated": false,
    "description": "canMarkable 이벤트를 수행할 지 여부\n 이 기능을 활성화 하면 LSelectionColumn을 사용할 때\n (사용할 경우 성능 저하가 발생합니다. 꼭 필요한 경우만 사용하세요.)",
    "isFinal": false,
    "name": "canMarkableEvent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rui_config.js 에 있는 기본 failure handler를 사용할지 여부를 리턴한다.",
    "isFinal": false,
    "name": "defaultFailureHandler",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Field 정보를 가지는 배열",
    "isFinal": false,
    "name": "fields",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Array",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 id",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "invalid된 데이터의 정보",
    "isFinal": false,
    "name": "invalidData",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "배치 처리 여부",
    "isFinal": false,
    "name": "isBatch",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "최종 Option정보를 가지는 객체",
    "isFinal": false,
    "name": "lastOptions",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "대량건의 데이터를 로딩할 경우 timer로 처리하여 ie에서 스크립트 로딩 메시지가 출력하지 않게 한다.",
    "isFinal": false,
    "name": "lazyLoad",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "대량건의 데이터를 몇건씩 분할하여 처리할 것인지 결정하는 속성",
    "isFinal": false,
    "name": "lazyLoadCount",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "대량건의 데이터를 분할하여 처리할 때 timer의 시간(ms)",
    "isFinal": false,
    "name": "lazyLoadTime",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "서버에서 받은 데이터가 기존에 받은 데이터와 같으면 데이터를 로딩하지 않는다. (같은 데이터면 모든 이벤트도 작동 안함)",
    "isFinal": false,
    "name": "loadCache",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "ajax request를 호출할 때 GET 방식으로 처리할 지 POST방식으로 처리할 지 결정한다.",
    "isFinal": false,
    "name": "method",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "sortable을 멀티 필드로 적용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "multiSortable",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "삭제시 삭제건으로 처리하지 않고 state만 바꾼다.",
    "isFinal": false,
    "name": "remainRemoved",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet을 serialize할 때 metaData를 포함할지 여부.",
    "isFinal": false,
    "name": "serializeMetaData",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "response timeout 시간 (async일때만 작동함.)",
    "isFinal": false,
    "name": "timeout",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "server에서 return된 metaData의 total count, 전체 record수이며, paging시에는 전체 count 수이다.",
    "isFinal": false,
    "name": "totalCount",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.data.LDataSet",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "undefined",
    "deprecated": false,
    "description": "field의 기본 출력값",
    "isFinal": false,
    "name": "defaultValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String|Int|Date",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "field의 id",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'string'",
    "deprecated": false,
    "description": "field객체의 종류(number, string, date)",
    "isFinal": false,
    "name": "type",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LField utility.",
   "name": "Rui.data.LField",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LField utility.",
  "events": [],
  "methods": [],
  "module": "data",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.data.LField",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Record의 데이터 객체로 json형 데이터객체를 저장한다.",
    "isFinal": false,
    "name": "data",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "new",
    "deprecated": false,
    "description": "LRecord id",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "데이터의 실제 값을 가지는 객체",
   "name": "Rui.data.LRecord",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "초기 데이터.",
     "isFinal": false,
     "name": "data",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "The intial LDataSet.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "데이터의 실제 값을 가지는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Record를 newId객체로 복사하여 리턴한다.",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) state:상태값, id:신규 Record객체 Id",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Rui.data.LRecord",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 상태를 commit한다.",
    "name": "commit",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet객체 정보를 모두 지운다. (이벤트 포함)",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key에 해당되는 데이터를 리턴하는 메소드",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Field id",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "ui용 attribute key에 해당되는 데이터를 리턴하는 메소드.",
    "name": "getAttribute",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Field id",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "ui용 attributes에 해당되는 데이터를 리턴하는 메소드",
    "name": "getAttributes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Record의 id를 리턴하는 메소드",
    "name": "getId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "record 데이터중에 field의 값이 변경된 데이터만 json object형으로 리턴한다.",
    "name": "getModifiedData",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LRecord 객체의 자동 순번 id",
    "name": "getNewRecordId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Record의 상태를 리턴한다.",
    "name": "getState",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Record에 해당되는 상태값",
    "returnType": "Rui.data.LRecord.STATE_NORMAL|Rui.data.LRecord.STATE_INSERT|Rui.data.LRecord.STATE_UPDATE|Rui.data.LRecord.STATE_DELETE",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record의 전체값을 json형 Object 객체로 리턴한다.",
    "name": "getValues",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터를 초기화하는 메소드",
    "name": "initRecord",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Record가 변경되었는지를 true or false로 리턴한다.",
    "name": "isModified",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record에 id에 해당되는 Field가 변경 데이터인지 여부를 리턴한다.",
    "name": "isModifiedField",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검색할 Field의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "변경 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key에 해당되는 value를 저장하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Field id",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Field에 대항되는 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "ui용 attribute key에 해당되는 value를 저장하는 메소드. 이 메소드로 값을 변경해도 데이터셋에서는 변경건 처리를 하지 않는다.",
    "name": "setAttribute",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Field id",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Field에 대항되는 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Record의 상태를 변경한다.",
    "name": "setState",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Record에 해당되는 상태값",
     "isFinal": false,
     "name": "state",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LRecord.STATE_NORMAL|Rui.data.LRecord.STATE_INSERT|Rui.data.LRecord.STATE_UPDATE|Rui.data.LRecord.STATE_DELETE"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record에 json형 Object의 객체 정보의 값을 반영한다.",
    "name": "setValues",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Record에 반영할 Object 객체",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 Record를 undo하는 메소드",
    "name": "undo",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "propertys": [{
   "deprecated": false,
   "description": "LRecord id",
   "isFinal": false,
   "name": "id",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.data.LRecord",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LJsonDataSet",
   "name": "Rui.data.LJsonDataSet",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LJsonDataSet.",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LJsonDataSet",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "데이터 정보를 문자열로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeMarkedOnly",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeModified",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] true일 경우 변경된 전체 데이터를 리턴",
     "isFinal": false,
     "name": "isAll",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeRecords",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.data.LDataSet",
  "type": "Rui.data.LJsonDataSet",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LDelimiterDataSet",
   "name": "Rui.data.LDelimiterDataSet",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LDelimiterDataSet.\n { id:'dataSet',\n      fields:[\n          {id:'col1'}\n      ]\n }",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LDelimiterDataSet",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "record들을 모두 commit한다.",
    "name": "commitRecords",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Record객체를 생성한다. 생성된 레코드는 DataSet에 반영되지 않은 상태이다. 순수하게 LRecord객체만 생성된다.",
    "name": "createDelimiterRecord",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "데이터 문자",
      "isFinal": false,
      "name": "data",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] option 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Rui.data.LRecord",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Id에 해당되는 Record객체를 리턴한다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "얻고자 하는 Record객체의 아이디",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "아이디에 해당되는 LRecord 객체",
    "returnType": "Rui.data.LRecord",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "위치값에 해당되는 Record객체를 리턴한다.",
    "name": "getAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "얻고자 하는 Record객체의 위치값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "아이디에 해당되는 LRecord 객체",
    "returnType": "Rui.data.LRecord",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 DataSet 기준으로 결과 데이터를 Object로 변환하여 리턴",
    "name": "getReadResponseData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "응답 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet에 query에 해당되는 데이터를 리턴한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "정보를 비교할 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "scope정보 옵션",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Rui.util.LCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터 정보를 문자열로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeModified",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] true일 경우 변경된 전체 데이터를 리턴",
     "isFinal": false,
     "name": "isAll",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet을 정렬한다.\n 주의! 이 메소드는 반복 사용시 성능저하가 발생될 수 있습니다.",
    "name": "sort",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "정보를 비교할 Function",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "정렬 방식 [asc|desc]",
      "isFinal": false,
      "name": "desc",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.data.LDataSet",
  "type": "Rui.data.LDelimiterDataSet",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "LBind 여부",
    "isFinal": false,
    "name": "bind",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Bind객체 정보",
    "isFinal": false,
    "name": "bindInfo",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "validate를 처리할 지 여부",
    "isFinal": false,
    "name": "isValidation",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'input,select,textarea,span[id]'",
    "deprecated": false,
    "description": "bind 객체를 찾는 selector 문장",
    "isFinal": false,
    "name": "selector",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "html form object와 dataSet을 연결하는 객체",
   "name": "Rui.data.LBind",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LBind.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "html form object와 dataSet을 연결하는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "bindInfo 정보를 추가한다.",
    "name": "addBindInfo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "추가할 bindInfo",
     "isFinal": false,
     "name": "bindInfo",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "bindInfoMap cache를 지운다.",
    "name": "clearBindInfoMap",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 row 위치에 해당되는 정보를 읽는 메소드",
    "name": "load",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "읽어올 위치 값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "invalid시 호출되는 이벤트 메소드",
    "name": "onInvalid",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "valid시 호출되는 이벤트 메소드",
    "name": "onValid",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "changedData 이벤트 발생시 호출되는 메소드",
    "name": "onValidAll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "groupId에 있는 객체들을 다시 bind 시킨다.",
    "name": "rebind",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "bind 속성을 변경하는 메소드",
    "name": "setBind",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "바인드할지 여부",
     "isFinal": false,
     "name": "isBind",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터셋을 변경하는 메소드",
    "name": "setDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 데이터셋",
     "isFinal": false,
     "name": "dataSet",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LDataSet"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "propertys": [
   {
    "deprecated": false,
    "description": "LBind 여부",
    "isFinal": false,
    "name": "bind",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Bind객체 정보",
    "isFinal": false,
    "name": "bindInfo",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "bindRow 위치",
    "isFinal": false,
    "name": "bindRow",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Group을 가지는 Element",
    "isFinal": false,
    "name": "groupEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Group 객체 Id",
    "isFinal": false,
    "name": "groupId",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "validate를 처리할 지 여부",
    "isFinal": false,
    "name": "isValidation",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.data.LBind",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'dui_datasetdata'",
    "deprecated": false,
    "description": "updateDataSet할 때 서버로 전송될 DataSet 값의 parameter name.",
    "isFinal": false,
    "name": "dataParameterName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'dui_datasetdatatype'",
    "deprecated": false,
    "description": "updateDataSet할 때 서버로 전송될 DataSet Type 값의 parameter name.",
    "isFinal": false,
    "name": "dataTypeParameterName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "rui_config.js에 있는 defaultFailureHandler를 사용할지 여부",
    "isFinal": false,
    "name": "defaultFailureHandler",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "rui_config.js에 있는 defaultLoadExceptionHandler를 사용할지 여부",
    "isFinal": false,
    "name": "defaultLoadExceptionHandler",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "rui_config.js에 있는 defaultSuccessHandler를 사용할지 여부",
    "isFinal": false,
    "name": "defaultSuccessHandler",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "URL에 대한 Cache 여부",
    "isFinal": false,
    "name": "disableCaching",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "서버에서 받은 데이터가 기존에 받은 데이터와 같으면 데이터를 로딩하지 않는다. (같은 데이터면 모든 이벤트도 작동 안함)",
    "isFinal": false,
    "name": "loadCache",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "30",
    "deprecated": false,
    "description": "Request의 timeout값",
    "isFinal": false,
    "name": "timeout",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "waitPanel(mask)을 사용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "useWaitPanel",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "변경된 dataSet을 서버에 전송하거나 멀티건의 dataSet을 load하는 객체",
   "name": "Rui.data.LDataSetManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LDataSetManager.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "변경된 dataSet을 서버에 전송하거나 멀티건의 dataSet을 load하는 객체",
  "events": [
   {
    "deprecated": false,
    "description": "load이 발생하기전 수행하는 이벤트",
    "name": "beforeLoad",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "서버에서 데이터를 로딩한 후 메모리로 로딩하기전 호출되는 이벤트",
    "name": "beforeLoadData",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Update를 실행하기전에 실행여부를 판단하는 이벤트",
    "name": "beforeUpdate",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "url 정보",
      "isFinal": false,
      "name": "url",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "form 객체",
      "isFinal": false,
      "name": "form",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "HtmlElement"
     },
     {
      "deprecated": false,
      "description": "parameter 객체",
      "isFinal": false,
      "name": "params",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "dataset 객체",
      "isFinal": false,
      "name": "dataSets",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LDataSet"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Update가 실패할 경우 발생하는 이벤트",
    "name": "failure",
    "parameters": [{
     "deprecated": false,
     "description": "ajax response 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "XMLHttpRequest"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "loadDataSet메소드 호출시 수행되는 이벤트",
    "name": "load",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "loadDataSet메소드 호출시 에러가 발생했을 경우",
    "name": "loadException",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "exception 객체",
      "isFinal": false,
      "name": "throwObject",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Update가 성공할 경우 발생하는 이벤트",
    "name": "success",
    "parameters": [{
     "deprecated": false,
     "description": "ajax response 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "XMLHttpRequest"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "upload를 할 경우 발생하는 이벤트.",
    "name": "upload",
    "parameters": [{
     "deprecated": false,
     "description": "ajax response 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "XMLHttpRequest"
    }],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "request를 중단하는 메소드",
    "name": "abort",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet의 update를 수행하는 메소드",
    "name": "doUpdateDataSet",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "호출할때 전달할 Option정보 객체",
      "isFinal": false,
      "name": "options",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "서버에 전달할 데이터셋 리스트",
      "isFinal": false,
      "name": "dataSets",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "update를 호출했는지 판단하는 메소드",
    "name": "isUpdating",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "HttpResponse 결과를 여러개의 {Rui.data.LDataSet}에 반영하는 메소드\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/data/dataSetManagerMultidatasetSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "loadDataResponse",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "DataSet 배열",
      "isFinal": false,
      "name": "dataSets",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "HttpResponse 객체",
      "isFinal": false,
      "name": "conn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "호출할때 전달할 Option정보 객체\n &amp;lt;div class='param-options'&amp;gt;\n state {Rui.data.LRecord.STATE_INSERT|Rui.data.LRecord.STATE_UPDATE|Rui.data.LRecord.STATE_DELETE} load시 record의 기본 상태",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "여러개의 {Rui.data.LDataSet}을 서버에서 load하는 메소드",
    "name": "loadDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "호출할때 전달할 Option정보 객체",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "여러개의 {Rui.data.LDataSet}에 해당되는 queryString을 리턴한다.",
    "name": "serializeByDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "데이터셋 리스트",
     "isFinal": false,
     "name": "dataSets",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "여러개의 {Rui.data.LDataSet}에 해당되는 queryString을 리턴한다.",
    "name": "serializeByMarkedOnlyDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "데이터셋 리스트",
     "isFinal": false,
     "name": "dataSets",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "여러개의 {Rui.data.LDataSet}에 해당되는 queryString을 리턴한다.",
    "name": "serializeByModifiedDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "데이터셋 리스트",
     "isFinal": false,
     "name": "dataSets",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "params정보를 가지고 url로 서버를 호출하는 메소드",
    "name": "update",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "호출할때 전달할 Option정보 객체",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet의 변경정보를 가지고 url로 서버를 호출하는 메소드",
    "name": "updateDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "호출할때 전달할 Option정보 객체",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form의 element정보를 가지고 url로 서버를 호출하는 메소드",
    "name": "updateForm",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "호출할때 전달할 Option정보 객체",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wait panel을 숨기는 메소드",
    "name": "waitPanelHide",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wait panel을 출력하는 메소드",
    "name": "waitPanelShow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "propertys": [
   {
    "deprecated": false,
    "description": "field의 id",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "서버에서 받은 데이터가 기존에 받은 데이터와 같으면 데이터를 로딩하지 않는다. (같은 데이터면 모든 이벤트도 작동 안함)",
    "isFinal": false,
    "name": "loadCache",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "waitPanel(mask)을 사용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "useWaitPanel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "updateDataSet할 때 서버로 전송될 DataSet 값의 parameter name.",
    "isFinal": false,
    "name": "useWaitPanel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "updateDataSet할 때 서버로 전송될 DataSet Type 값의 parameter name.",
    "isFinal": false,
    "name": "useWaitPanel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.data.LDataSetManager",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Validator",
   "name": "Rui.validate.LValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "Validator",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "validate하는 메소드",
    "name": "validate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "비교 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "비교 결과값",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.validate.LValidator",
  "visibility": "protected"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "LValidator들을 가지는 객체",
   "isFinal": false,
   "name": "validators",
   "parameterType": "CONFIG",
   "sample": "default",
   "scope": "instance",
   "type": "Array",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "LValidator 기반의 각종 FORM, UI Component, DataSet 등의 객체 유효성을 관리하는 컴포넌트",
   "name": "Rui.validate.LValidatorManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LValidatorManager.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LValidator 기반의 각종 FORM, UI Component, DataSet 등의 객체 유효성을 관리하는 컴포넌트",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Validator객체를 추가하는 메소드",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "validation할 객체의 id",
      "isFinal": false,
      "name": "id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "validator 객체",
      "isFinal": false,
      "name": "validator",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.validate.LValidator"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "validate, validateField, validateGroup 메소드 실행의 결과로 invalid 상태가 된 각종 폼객체들을 일괄 valid 상태로 만든다.\n 주의!! validateDataSet, validateGrid등에 의해 invalid 상태가 된 경우는 이 메소드를 사용해선 안된다.",
    "name": "clearInvalids",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "invalid된 객체를 담아 배열로 리턴한다.",
    "name": "getInvalidList",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "invalid 배열",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "출력했던 메시지를 문자로 리턴한다.",
    "name": "getMessageList",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "출력했던 전체 메시지",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "validator의 id에 해당되는 LValidator를 리턴한다.",
    "name": "getValidator",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "validator id",
      "isFinal": false,
      "name": "id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "validator 종류(ex. date, length, minDate 등)",
      "isFinal": false,
      "name": "validatorId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "validator의 id에 해당되는 LValidator를 배열로 리턴한다.",
    "name": "getValidatorList",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "validator id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "ArrayList",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "validation를 object에 가지고 있는 키,값으로 수행하는 메소드",
    "name": "validate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Validation할 object",
     "isFinal": false,
     "name": "obj",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "validate 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet의 값을 기준으로 유효성체크를 한다.",
    "name": "validateDataSet",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Validation할 dataSet객체",
      "isFinal": false,
      "name": "dataSet",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LDataSet"
     },
     {
      "deprecated": false,
      "description": "[optional] Validation할 dataSet객체의 행 번호, 생략할 경우 전체 행을 검사한다.",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "validate 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "지정한 el의 INPUT, TextArea, CheckBox, Radio 및 Rui.ui.form.LField 컴포넌트의 입력 폼 값의 유효성을 검사하는 메소드\n validation 결과 =&amp;gt; isValid: {boolean}, id: {string}, label: {string}, message: {string}, messages: {string[]}",
    "name": "validateEl",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Validation할 Element객체",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.LElement"
    }],
    "returnDescription": "validate 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "지정한 id의 INPUT, TextArea, CheckBox, Radio등의 입력 폼 값의 유효성을 검사하는 메소드\n validation 결과 =&amp;gt; isValid: {boolean}, id: {string}, label: {string}, message: {string}, messages: {string[]}",
    "name": "validateField",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Validation할 field",
      "isFinal": false,
      "name": "id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Validation할 object",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnDescription": "row",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "지정한 id의 DOM 하위에 구성된 INPUT, TextArea, CheckBox, Radio등의 입력폼 안에서 유효성을 검사하는 메소드",
    "name": "validateGroup",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Validation할 group id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "validate 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "validate",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.validate.LValidatorManager",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LLengthValidator 전체 글자의 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col2', validExp:'Col2:true:length=4'}",
   "name": "Rui.validate.LLengthValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 문자의 길이",
     "isFinal": false,
     "name": "length",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LLengthValidator 전체 글자의 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col2', validExp:'Col2:true:length=4'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LLengthValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "&amp;lt;pre&amp;gt;\n LDateValidator 날짜의 유효성을 체크하는 validator\n { id: 'col11', validExp:'Col11:true:date=YYYYMMDD'}\n format문자 :  YYYY,  -&amp;gt; 4자리 년도\n               YY,    -&amp;gt; 2자리 년도. 2000년 이후.\n               MM,    -&amp;gt; 2자리 숫자의 달.\n               DD,    -&amp;gt; 2자리 숫자의 일.\n               hh,    -&amp;gt; 2자리 숫자의 시간. 12시 기준\n               HH,    -&amp;gt; 2자리 숫자의 시간. 24시 기준\n               mm,    -&amp;gt; 2자리 숫자의 분.\n               ss     -&amp;gt; 2자리 숫자의 초.\n\n 예)\n     'YYYYMMDD' -&amp;gt; '20020328'\n     'YYYY/MM/DD' -&amp;gt; '2002/03/28'\n     'Today : YY-MM-DD' -&amp;gt; 'Today : 02-03-28'\n\n 참고)\n       format문자가 중복해서 나오더라도 처음 나온 문자에 대해서만\n       format문자로 인식된다. YYYY와 YY, hh와 HH 도 중복으로 본다.\n       날짜는 년,월이 존재할 때만 정확히 체크하고 만일 년, 월이 없다면\n       1 ~ 31 사이인지만 체크한다.\n &amp;lt;/pre&amp;gt;",
   "name": "Rui.validate.LDateValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "허용되는 byte길이",
     "isFinal": false,
     "name": "dateExpr",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "&amp;lt;pre&amp;gt;\n LDateValidator 날짜의 유효성을 체크하는 validator\n { id: 'col11', validExp:'Col11:true:date=YYYYMMDD'}\n format문자 :  YYYY,  -&amp;gt; 4자리 년도\n               YY,    -&amp;gt; 2자리 년도. 2000년 이후.\n               MM,    -&amp;gt; 2자리 숫자의 달.\n               DD,    -&amp;gt; 2자리 숫자의 일.\n               hh,    -&amp;gt; 2자리 숫자의 시간. 12시 기준\n               HH,    -&amp;gt; 2자리 숫자의 시간. 24시 기준\n               mm,    -&amp;gt; 2자리 숫자의 분.\n               ss     -&amp;gt; 2자리 숫자의 초.\n\n 예)\n     'YYYYMMDD' -&amp;gt; '20020328'\n     'YYYY/MM/DD' -&amp;gt; '2002/03/28'\n     'Today : YY-MM-DD' -&amp;gt; 'Today : 02-03-28'\n\n 참고)\n       format문자가 중복해서 나오더라도 처음 나온 문자에 대해서만\n       format문자로 인식된다. YYYY와 YY, hh와 HH 도 중복으로 본다.\n       날짜는 년,월이 존재할 때만 정확히 체크하고 만일 년, 월이 없다면\n       1 ~ 31 사이인지만 체크한다.\n &amp;lt;/pre&amp;gt;",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LDateValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LFormatValidator format에 맞는 값인지를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col17', validExp:'Col17:true:format=abc'}",
   "name": "Rui.validate.LFormatValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사 포맷",
     "isFinal": false,
     "name": "format",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LFormatValidator format에 맞는 값인지를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col17', validExp:'Col17:true:format=abc'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LFormatValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LNumberValidator 숫자 여부를 판단하는 validator&amp;lt;br&amp;gt;\n { id: 'col6', validExp:'Col6:true:number'}",
   "name": "Rui.validate.LNumberValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 숫자 포맷, 소숫점 포함 여부 등",
     "isFinal": false,
     "name": "format",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LNumberValidator 숫자 여부를 판단하는 validator&amp;lt;br&amp;gt;\n { id: 'col6', validExp:'Col6:true:number'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LNumberValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LRequiredValidator 필수 여부",
   "name": "Rui.validate.LRequiredValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LRequiredValidator 필수 여부",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LRequiredValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LByteLengthValidator byte로 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col4', validExp:'Col4:true:byteLength=4'}",
   "name": "Rui.validate.LByteLengthValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "허용되는 byte길이",
     "isFinal": false,
     "name": "length",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LByteLengthValidator byte로 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col4', validExp:'Col4:true:byteLength=4'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LByteLengthValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "&amp;lt;pre&amp;gt;\n filterValidator : 지정된 문자가 들어있을 경우 유효하지 않은 것으로 판단한다.\n { id: 'col16', validExp:'Col16:true:filter=%;&amp;lt;;\\\\h;\\\\;;haha' }\n Wild 문자\n   ;    - \\;\n   한글 - \\h\n   영문 - \\a\n   숫자 - \\n\n &amp;lt;/pre&amp;gt;",
   "name": "Rui.validate.LFilterValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "허용되는 byte길이",
     "isFinal": false,
     "name": "filterExpr",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "&amp;lt;pre&amp;gt;\n filterValidator : 지정된 문자가 들어있을 경우 유효하지 않은 것으로 판단한다.\n { id: 'col16', validExp:'Col16:true:filter=%;&amp;lt;;\\\\h;\\\\;;haha' }\n Wild 문자\n   ;    - \\;\n   한글 - \\h\n   영문 - \\a\n   숫자 - \\n\n &amp;lt;/pre&amp;gt;",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LFilterValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LInNumberValidator 범위안에 숫자가 존재하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col10', validExp:'Col10:true:inNumber=90~100'}",
   "name": "Rui.validate.LInNumberValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "숫자의 범위 (ex, '90~100')",
     "isFinal": false,
     "name": "inNumber",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LInNumberValidator 범위안에 숫자가 존재하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col10', validExp:'Col10:true:inNumber=90~100'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LInNumberValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMinByteLengthValidator byte로 최소 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col5', validExp:'Col5:true:minByteLength=8'}",
   "name": "Rui.validate.LMinByteLengthValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LMinByteLengthValidator.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMinByteLengthValidator byte로 최소 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col5', validExp:'Col5:true:minByteLength=8'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMinByteLengthValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMinDateValidator 최소 입력 날짜인지 확인하는 validator&amp;lt;br&amp;gt;\n { id: 'col12', validExp:'Col12:true:minDate=2008/11/11(YYYY/MM/DD)'}",
   "name": "Rui.validate.LMinDateValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 min date string (ex, '20081111' or '2008/11/11(YYYY/MM/DD)')",
     "isFinal": false,
     "name": "minDate",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMinDateValidator 최소 입력 날짜인지 확인하는 validator&amp;lt;br&amp;gt;\n { id: 'col12', validExp:'Col12:true:minDate=2008/11/11(YYYY/MM/DD)'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMinDateValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMinLengthValidator 최소 길이를 확인하는 validator&amp;lt;br&amp;gt;\n { id: 'col3', validExp:'Col3:true:minLength=6'}",
   "name": "Rui.validate.LMinLengthValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 min length",
     "isFinal": false,
     "name": "minLength",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMinLengthValidator 최소 길이를 확인하는 validator&amp;lt;br&amp;gt;\n { id: 'col3', validExp:'Col3:true:minLength=6'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMinLengthValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMinNumberValidator 최소 숫자를 확인하는 validator&amp;lt;br&amp;gt;\n { id: 'col8', validExp:'Col8:true:minNumber=100'}",
   "name": "Rui.validate.LMinNumberValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 min number",
     "isFinal": false,
     "name": "minNumber",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMinNumberValidator 최소 숫자를 확인하는 validator&amp;lt;br&amp;gt;\n { id: 'col8', validExp:'Col8:true:minNumber=100'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMinNumberValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMaxByteLengthValidator byte로 최대 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col5', validExp:'Col5:true:maxByteLength=8'}",
   "name": "Rui.validate.LMaxByteLengthValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 문자의 byte 길이",
     "isFinal": false,
     "name": "length",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMaxByteLengthValidator byte로 최대 길이를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col5', validExp:'Col5:true:maxByteLength=8'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMaxByteLengthValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMaxDateValidator 기준 날짜를 초과하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col13', validExp:'Col13:true:maxDate=20081111'}",
   "name": "Rui.validate.LMaxDateValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 max date string (ex, '20081111' or '2008/11/11(YYYY/MM/DD)')",
     "isFinal": false,
     "name": "maxDate",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMaxDateValidator 기준 날짜를 초과하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col13', validExp:'Col13:true:maxDate=20081111'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMaxDateValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMaxLengthValidator 최대 길이를 초과하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col3', validExp:'Col3:true:maxLength=6'}",
   "name": "Rui.validate.LMaxLengthValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 max length",
     "isFinal": false,
     "name": "maxLength",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMaxLengthValidator 최대 길이를 초과하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col3', validExp:'Col3:true:maxLength=6'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMaxLengthValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMaxNumberValidator 최대 숫자를 초과하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col9', validExp:'Col9:true:maxNumber=100'}",
   "name": "Rui.validate.LMaxNumberValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "검사할 max number",
     "isFinal": false,
     "name": "maxNumber",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LMaxNumberValidator 최대 숫자를 초과하는지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col9', validExp:'Col9:true:maxNumber=100'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LMaxNumberValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LSsnValidator 주민번호인지 체크하는 validator",
   "name": "Rui.validate.LSsnValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LSsnValidator 주민번호인지 체크하는 validator",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LSsnValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LCsnValidator 사업자 번호인지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col15', validExp:'Col15:true:csn'}",
   "name": "Rui.validate.LCsnValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LCsnValidator 사업자 번호인지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col15', validExp:'Col15:true:csn'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LCsnValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LEmailValidator 이메일인지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col18', validExp:'Col18:true:email'}",
   "name": "Rui.validate.LEmailValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LEmailValidator 이메일인지 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col18', validExp:'Col18:true:email'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LEmailValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "&amp;lt;pre&amp;gt;\n AllowCharValidator : 지정된 문자가 들어있을 경우 유효한것으로 판단한다.\n { id: 'col17', validExp:'Col17:true:allow=\\\\a;\\\\n'}\n Wild 문자\n   ;    - \\;\n   한글 - \\h\n   영문 - \\a\n   숫자 - \\n\n &amp;lt;/pre&amp;gt;",
   "name": "Rui.validate.LAllowValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "허용문자 표현식",
     "isFinal": false,
     "name": "allowExpr",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "&amp;lt;pre&amp;gt;\n AllowCharValidator : 지정된 문자가 들어있을 경우 유효한것으로 판단한다.\n { id: 'col17', validExp:'Col17:true:allow=\\\\a;\\\\n'}\n Wild 문자\n   ;    - \\;\n   한글 - \\h\n   영문 - \\a\n   숫자 - \\n\n &amp;lt;/pre&amp;gt;",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LAllowValidator",
  "visibility": "protected"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Checkbox나 Radiobox의 필수 여부를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col18', validExp:'Col18:true:groupName=col8'}",
   "name": "Rui.validate.LGroupRequireValidator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "field id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "그룹명",
     "isFinal": false,
     "name": "groupName",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "string"
    },
    {
     "deprecated": false,
     "description": "label등 validator 속성",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "Checkbox나 Radiobox의 필수 여부를 체크하는 validator&amp;lt;br&amp;gt;\n { id: 'col18', validExp:'Col18:true:groupName=col8'}",
  "events": [],
  "methods": [],
  "module": "validate",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.validate.LValidator",
  "type": "Rui.validate.LGroupRequireValidator",
  "visibility": "protected"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "객체를 render할 위치를 지정한다. 생성자 옵션이기때문에 생성시에 해당 html dom 객체의 id를 바로 찾아서 생성한다.",
    "isFinal": false,
    "name": "applyTo",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "컴포넌트의 기본 class를 탑재한다.",
    "isFinal": false,
    "name": "defaultClass",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "객체의 disabled 여부를 관리한다.",
    "isFinal": false,
    "name": "disabled",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "높이 지정시 사용",
    "isFinal": false,
    "name": "height",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "객체를 renderTo html dom 객체 하위에 dom객체를 생성한다. 생성자 옵션이기때문에 생성시에 해당 html dom 객체의 id를 바로 찾아서 생성한다.",
    "isFinal": false,
    "name": "renderTo",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "넓이 지정시 사용",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "UI Component들이 상속받는 추상 클래스",
   "name": "Rui.ui.LUIComponent",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LUIComponent.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "UI Component들이 상속받는 추상 클래스",
  "events": [
   {
    "deprecated": false,
    "description": "blur 메소드가 호출되면 수행하는 이벤트",
    "name": "blur",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "destroy 메소드가 호출되면 수행하는 이벤트",
    "name": "destroy",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "disable 메소드가 호출되면 수행하는 이벤트",
    "name": "disable",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "enable 메소드가 호출되면 수행하는 이벤트",
    "name": "enable",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus 메소드가 호출되면 수행하는 이벤트",
    "name": "focus",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "hide 메소드가 호출되면 수행하는 이벤트",
    "name": "hide",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "move 메소드가 호출되면 수행하는 이벤트",
    "name": "move",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render 메소드가 호출되면 수행하는 이벤트",
    "name": "render",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "resize 메소드가 호출되면 수행하는 이벤트",
    "name": "resize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "show 메소드가 호출되면 수행하는 이벤트",
    "name": "show",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "IE에서 동작이 멈추는 에러를 유발하는 모듈을 위해 DOM 구조를 만들 때 사용되는 protected helper.\n 일반적인 DOM 구조로 사용되면 안된다.\n &amp;lt;p&amp;gt;\n parentNode가 document.body가 아니면 엘리먼트는 마지막 엘리먼트에 append 된다.\n &amp;lt;/p&amp;gt;++\n &amp;lt;p&amp;gt;\n parentNode가 document.body이면 IE의 동작이 멈추는 에러를 방지하기 위해\n 엘리먼트는 첫번째 child로 추가된다.\n &amp;lt;/p&amp;gt;",
    "name": "_addToParent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "HTML element to which the element will be added",
      "isFinal": false,
      "name": "The",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "parentNode"
     },
     {
      "deprecated": false,
      "description": "HTML element to be added to parentNode's children",
      "isFinal": false,
      "name": "The",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "elNode"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 속성에 따른 실제 적용 메소드",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "left 속성에 따른 실제 적용 메소드",
    "name": "_setLeft",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "top 속성에 따른 실제 적용 메소드",
    "name": "_setTop",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "parentNode 중 하나에 HTMLElement를 append한다.",
    "name": "appendTo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The node to append to",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement | Element"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "부모의 dom 객체를 기준으로 height 100%으로 채운다.",
    "name": "availableHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] 기준이 되는 부모 객체의 id나 dom",
      "isFinal": false,
      "name": "parentId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement"
     },
     {
      "deprecated": false,
      "description": "[optional] 추가 여유 공간을 확보하기 위해 마이너스할 높이",
      "isFinal": false,
      "name": "margin",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 blur한다.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createElement",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 defer를 연결하는 메소드",
    "name": "deferOnBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 사용 불가능하게 하는 메소드",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 사용 가능하게 하는 메소드",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 현재 node중 selector로 지정된 child node만 배열로 리턴한다.",
    "name": "filter",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "CSS selector 문자열",
     "isFinal": false,
     "name": "selector",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "Array 객체 리턴",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 focus한다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "컨테이너 객체를 리턴하는 메소드",
    "name": "getContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 오프셋 높이를 리턴한다.",
    "name": "getHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) : border와 padding을 뺀 높이를 가져오게 하려면 true",
     "isFinal": false,
     "name": "contentHeight",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "The element's height",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 오프셋 Left를 리턴한다.",
    "name": "getLeft",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The element's left",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 오프셋 top를 리턴한다.",
    "name": "getTop",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The element's top",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 오프셋 넓이를 리턴한다.",
    "name": "getWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) : border와 padding을 뺀 높이를 가져오게 하려면 true",
     "isFinal": false,
     "name": "contentWidth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "The element's width",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 안보이게 설정하는 메소드",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) Animation 여부를 설정한다. Boolean값이면 디폴트 animation을 실행하고 객체면 해당 객체에 설정된 animation을 수행한다.",
     "isFinal": false,
     "name": "anim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Boolean|Rui.fx.LAnim"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "disable 상태 여부를 리턴하는 메소드",
    "name": "isDisable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "콤포넌트가 render가 됐는지 여부",
    "name": "isRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "콤포넌트가 render가 됐는지 여부",
    "name": "isRendered",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "editor의 show 여부를 리턴하는 메소드",
    "name": "isShow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 호출되는 메소드",
    "name": "onBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus 여부를 확인하는 메소드",
    "name": "onCheckFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus 이벤트 발생시 호출되는 메소드",
    "name": "onFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 parent node를 가져온다. 선택사항으로 parent node와 일치하는 selector를 줄 수 있음.",
    "name": "parent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "(optional) Find a parent node that matches the passed simple selector",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "(optional) True to return a raw dom node instead of an Rui.LElement",
      "isFinal": false,
      "name": "returnDom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "The parent node or null",
    "returnType": "Rui.LElement|HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 child 객체를 배열로 리턴한다.",
    "name": "query",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "CSS selector 문자열",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 찾은 객체의 무조건 첫번째 객체를 리턴한다.",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Array 객체 리턴",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트를 취소후 재 등록하는 메소드 (이벤트 순서 변경)",
    "name": "reOnDeferOnBlur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "컴포넌트를 랜더링한다. 이때 부모 노드를 지정할 수 있으며 지정할 경우 지정된 노드의 자식노드로 랜더링된다.\n 부모 노드를 지정하지 않거나 찾을 수 없는 경우 오류가 발생한다.",
    "name": "render",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "컴포넌트를 지정된 노드에 랜더링한다. 이 경우 지정된 노드가 el이 된다.",
    "name": "renderAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "적용할 dom 객체나 아이디",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS Selector로 child 객체를 배열로 리턴한다.",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "CSS selector 문자열",
      "isFinal": false,
      "name": "selector",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 찾은 객체의 무조건 첫번째 객체를 리턴한다.",
      "isFinal": false,
      "name": "firstOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "Rui.LElementList 객체 리턴",
    "returnType": "Rui.LElementList",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 높이를 설정한다.\n &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;\n// 높이를 200px로 바꾸고 default configuration으로 동작한다.\nRui.get('elementId').setHeight(200, true);\n\n// 높이를 150px로 바꾸고 custom configuration으로 동작한다.\nRui.get('elId').setHeight(150, {\nduration : .5, // 동작이 .5초 동안 지속된다\n// 내용을 'finished'로 변환한다\ncallback: function(){ this.{",
    "name": "setHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 높이. 다음 중 하나:&amp;lt;div class=\"mdetail-params\"&amp;gt;&amp;lt;ul&amp;gt;",
     "isFinal": false,
     "name": "height",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Mixed"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 Left를 설정한다.",
    "name": "setLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 Left",
     "isFinal": false,
     "name": "left",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 top를 설정한다.",
    "name": "setTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 top",
     "isFinal": false,
     "name": "top",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "visMode가 true면 visibility에 설정 false거나 없으면 display에 설정한다.",
    "name": "setVisibilityMode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "visibility로 설정할지 display로 설정할지 결정하는 값",
     "isFinal": false,
     "name": "visMode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 넓이를 설정한다.",
    "name": "setWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 넓이. 다음 중 하나:&amp;lt;div class=\"mdetail-params\"&amp;gt;&amp;lt;ul&amp;gt;",
     "isFinal": false,
     "name": "width",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Mixed"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 보이게 설정하는 메소드",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "(optional) Animation 여부를 설정한다. Boolean값이면 디폴트 animation을 실행하고 객체면 해당 객체에 설정된 animation을 수행한다.",
     "isFinal": false,
     "name": "anim",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Boolean|Rui.fx.LAnim"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.ui.LUIComponent",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "더블클릭 방지 기능을 사용할 지 여부\n 더블클릭 방지 기능을 사용할 경우 버튼이 클릭되는 순간부터 disableDbClickInterval에 설정된 시간동안 버튼이 disable된다.",
    "isFinal": false,
    "name": "disableDbClick",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "500",
    "deprecated": false,
    "description": "더블클릭 방지 기능을 사용할 경우의 disable interval",
    "isFinal": false,
    "name": "disableDbClickInterval",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "field의 name으로 input, select태그들의 name 속성 값",
    "isFinal": false,
    "name": "label",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'button'",
    "deprecated": false,
    "description": "button 태그의 type값",
    "isFinal": false,
    "name": "type",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LButton 객체는 form 입력 객체들을 추상 클래스",
   "name": "Rui.ui.LButton",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The html element that represents the Element.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "The intial Field.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LButton 객체는 form 입력 객체들을 추상 클래스",
  "events": [{
   "deprecated": false,
   "description": "button이 click되면 호출되는 이벤",
   "name": "click",
   "parameters": [],
   "sample": "default",
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "disable 메소드의 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "setLabel 기능의 실제 적용 메소드",
    "name": "_setLabel",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "버튼을 blur한다.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "버튼을 클릭한다.",
    "name": "click",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "LElement|HTMLElement|String"
    }],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createElement",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "객체의 아이디나 객체",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy 한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "버튼을 focus한다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "버튼이 속해있는 Form Element 객체를 리턴한다.",
    "name": "getForm",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLFormElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "버튼의 label을 설정 또는 변경한다.",
    "name": "setLabel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "변경할 label 값",
     "isFinal": false,
     "name": "label",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "버튼의 label을 반환한다.",
    "name": "setLabel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "label 현재의 label 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "버튼이 포함된 form을 submit 한다.\n form이 성공적으로 submit 된 경우 true, submission이 취소된 경우에는\n false를 반환한다.",
    "name": "submitForm",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LButton",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Config is a utility used within an Object to allow the implementer to\n maintain a list of local configuration properties and listen for changes\n to those properties dynamically using LCustomEvent. The initial values are\n also maintained so that the configuration can be reset at any given point\n to its initial state.",
   "name": "Rui.ui.LConfig",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The owner Object to which this Config Object belongs",
    "isFinal": false,
    "name": "owner",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "Config is a utility used within an Object to allow the implementer to\n maintain a list of local configuration properties and listen for changes\n to those properties dynamically using LCustomEvent. The initial values are\n also maintained so that the configuration can be reset at any given point\n to its initial state.",
  "events": [{
   "deprecated": false,
   "description": "Custom Event, notifying subscribers when Config properties are set\n (setProperty is called without the silent flag",
   "name": "configChanged",
   "parameters": [],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "Adds a property to the Config Object's private config hash.",
    "name": "addProperty",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The configuration property's name",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The Object containing all of this\n property's arguments",
      "isFinal": false,
      "name": "propertyObject",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Applies a key-value Object literal to the configuration, replacing\n any existing values, and queueing the property events.\n Although the values will be set, fireQueue() must be called for their\n associated events to execute.",
    "name": "applyConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The configuration Object literal",
      "isFinal": false,
      "name": "userConfig",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "When set to true, the initialConfig will\n be set to the userConfig passed in, so that calling a reset will\n reset the properties to the passed values.",
      "isFinal": false,
      "name": "init",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets all properties to null, unsubscribes all listeners from each\n property's change event and all listeners from the configChangedEvent.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a key-value configuration map of the values currently set in\n the Config Object.",
    "name": "getConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The current config, represented in a key-value map",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the value of specified property.",
    "name": "getProperty",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The name of the property",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "The value of the specified property",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Resets the specified property's value to its initial value.",
    "name": "resetProperty",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The name of the property",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "True is the property was reset, false if not",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the value of a property. If the silent property is passed as\n true, the property's event will not be fired.",
    "name": "setProperty",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The name of the property",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The value to set the property to",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] Whether the value should be set silently,\n without firing the property event.",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "True, if the set was successful, false if it failed.",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representation of the Config object",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The Config object in string format.",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [{
   "deprecated": false,
   "description": "Boolean flag that specifies whether a queue is currently\n being executed",
   "isFinal": false,
   "name": "queueInProgress",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Boolean",
   "visibility": "protected"
  }],
  "scope": "instance",
  "type": "Rui.ui.LConfig",
  "visibility": "protected"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "height 설정 값이 정해지면 overlay의 높이를 자동적으로 늘리는 표준 모듈 엘리먼트\n 지원되는 값은 \"header\", \"body\", \"footer\"",
    "isFinal": false,
    "name": "autofillheight",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The body element, denoted with CSS class \"bd\"",
    "isFinal": false,
    "name": "body",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Panel이 \"닫힘\" 버튼을 보여주어야 한다면 참(true).",
    "isFinal": false,
    "name": "close",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "&amp;lt;p&amp;gt;\n context-sensitive 포지셔닝을 위한 컨텍스트 아규먼트들의 배열\n &amp;lt;/p&amp;gt;\n\n &amp;lt;p&amp;gt;\n 배열의 포맷 : &amp;lt;code&amp;gt;[contextElementOrId, overlayCorner, contextCorner, arrayOfTriggerEvents (optional)]&amp;lt;/code&amp;gt;,\n 4개의 배열 엘리먼트는 아래에 상세하게 기술되어 있다.\n &amp;lt;/p&amp;gt;\n\n &amp;lt;dl&amp;gt;\n &amp;lt;dt&amp;gt;contextElementOrId &amp;#60;String|HTMLElement&amp;#62;&amp;lt;/dt&amp;gt;\n &amp;lt;dd&amp;gt;overlay가 맞추어 정렬되는 컨텍스트 엘리먼트에 대한 레퍼런스(또는 해당 id).&amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;overlayCorner &amp;#60;String&amp;#62;&amp;lt;/dt&amp;gt;\n &amp;lt;dd&amp;gt;정렬에 사용되는 overlay의 코너. 이 코너는 뒤에 오는 \"contextCorner\" 엔트리에 의해 정의된\n 컨텍스트 엘리먼트의 코너이다. 지원되는 문자열 값 :\n \"tr\" (top right), \"tl\" (top left), \"br\" (bottom right), or \"bl\" (bottom left).&amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;contextCorner &amp;#60;String&amp;#62;&amp;lt;/dt&amp;gt;\n &amp;lt;dd&amp;gt;정렬에 사용되는 컨텍스트 엘리먼트의 코너. 지원되는 문자열 값은 위의 overlayCorner 엔트리에서 리스트업 된 목록과 동일하다.&amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;arrayOfTriggerEvents (optional) &amp;#60;Array[String|LCustomEvent]&amp;#62;&amp;lt;/dt&amp;gt;\n &amp;lt;dd&amp;gt;\n &amp;lt;p&amp;gt;\n 기본적으로 컨텍스트 alignment는 일회성 오퍼레이션이며,\n 컨텍스트 컨피그 정보가 설정되었을 때 또는 &amp;lt;a href=\"#method_align\"&amp;gt;align&amp;lt;/a&amp;gt; 메소드가 invoke 되었을 때\n overlay를 컨텍스트 엘리먼트에 맞추어 조정한다.\n 이는 다큐먼트 레이아웃이 변경되는 상황에서 유용하며 컨텍스트 엘리먼트의 위치가 변경되는 결과를 가져온다.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n\n 이 배열은, 인스턴스가 Publish하는 이벤트의 이벤트 타입 문자열(e.g. \"beforeShow\") 또는 LCustomEvent 인스턴스 중 하나를 포함한다.\n 추가적으로 뒤에 나오는 3가지 static 컨테이너 이벤트 타입들 역시 현재 지원된다 : &amp;lt;code&amp;gt;\"windowResize\", \"windowScroll\", \"textResize\"&amp;lt;/code&amp;gt; (defined in &amp;lt;a href=\"#property__TRIGGER_MAP\"&amp;gt;_TRIGGER_MAP&amp;lt;/a&amp;gt; private property).\n &amp;lt;/p&amp;gt;\n &amp;lt;/dd&amp;gt;\n &amp;lt;/dl&amp;gt;\n\n &amp;lt;p&amp;gt;\n 예를 들어, 이 속성을 &amp;lt;code&amp;gt;[\"img1\", \"tl\", \"bl\"]&amp;lt;/code&amp;gt;로 설정하는 것은\n overlay의 왼쪽 상단 코너를 id \"img1\"로 컨텍스트 엘리먼트의 왼쪽 하단 코너에 맞추어 정렬하는 것이다.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n 선택적인 트리거 값을 추가하는 경우 : &amp;lt;code&amp;gt;[\"img1\", \"tl\", \"bl\", [\"beforeShow\", \"windowResize\"]]&amp;lt;/code&amp;gt;\n \"beforeShow\" 또는 \"windowResize\"이벤트가 fired될 때마다 항상 overlay 위치를 재정렬 할 것이다.\n &amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "context",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "draggable Panel이 페이지 위 drop할 대상과 상호 작용하는 것이 아니라\n  drag만 되어야 할지 정의한다.\n &amp;lt;p&amp;gt;\n true로 설정할 때 draggable Panel은 drop 대상 위에 있는지의 여부 또는 LDragDrop 이벤트\n (drop할 대상에 동작하도록 지원이 필요함. onDragEnter, onDragOver, onDragOut, onDragDrop 등)\n 를 fire하는지 체크하지 않는다.\n 패널이 페이지의 어떠한 타겟 엘리먼트에도 drop되도록 설계되지 않는다면\n 이 flag는 성능을 향상시키기 위해 true로 설정될 수 있다.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n false로 설정되면 이벤트와 관련된 모든 drop target이 fire 될 것이다.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n 속성은 하위 버전 호환성을 유지하기 위해 기본으로 false로 설정되어 있다.\n 그러나 drop 대상의 인터랙션이 패널에 필요하지 않다면 성능 향상을 위해 true로 설정되어야 한다.&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "dragOnly",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Panel이 드래그가 가능하게 되어야 할 경우 Boolean 설정.\n 드래그앤드롭 유틸이 포함되어 있다면 기본값은 \"true\"이고 아니면 \"false\".\n &amp;lt;strong&amp;gt;PLEASE NOTE:&amp;lt;/strong&amp;gt; IE6(Strict모드와 Quirks모드)와\n IE7(Quirks모드)에서 이미 알려진 이슈, \"width\" 설정값을 위한 value set을\n 가지고 있지 않거나 \"width\" 설정값이 \"auto\"로 설정되어 있는 Panel이\n 마우스를 Panel의 헤더 엘리먼트 텍스트에 올려서만 드래그할 수 있다는 것이다.\n 이 버그를 수정하기 위해, \"width\" 설정값에 대한 value를 잃어버린 또는\n \"width\"설정 값이 \"auto\"로 설정된 draggable Panels는, Panels가 보이기 전에\n root HTML 엘리먼트의 offsetWidth 값으로 설정해야 한다.\n 계산된 width는 Panel이 숨겨질 때 제거된다.\n &amp;lt;em&amp;gt;이 수정본은 IE6(Strict모드와 Quirks모드)와 IE7(Quirks모드)에서의\n draggable Panels에서만 적용된다.&amp;lt;/em&amp;gt;\n 자세한 사항은 이곳을 참조하라:\n SourceForge bugs #1726972 and #1589210.",
    "isFinal": false,
    "name": "draggable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "&amp;lt;p&amp;gt;\n Object or array of objects representing the ContainerEffect\n classes that are active for animating the container.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n &amp;lt;strong&amp;gt;NOTE:&amp;lt;/strong&amp;gt; Although this configuration\n property is introduced at the Module level, an out of the box\n implementation is not shipped for the Module class so setting\n the proroperty on the Module class has no effect. The Overlay\n class is the first class to provide out of the box ContainerEffect\n support.\n &amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "effect",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The main module element that contains the header, body, and footer",
    "isFinal": false,
    "name": "element",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "overlay가 viewport 중앙에 고정되어야 할 경우 True",
    "isFinal": false,
    "name": "fixedcenter",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The footer element, denoted with CSS class \"ft\"",
    "isFinal": false,
    "name": "footer",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The header element, denoted with CSS class \"hd\"",
    "isFinal": false,
    "name": "header",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "",
    "isFinal": false,
    "name": "iframe",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "패널이 보여질 때 사용 가능하고 패널이 감추어졌을 때 사용 불가능한\n LKeyListener(또는 LKeyListener Array)",
    "isFinal": false,
    "name": "keylisteners",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.util.LKeyListener[]",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "패널이 모달 방식으로 보여져야 한다면 True,\n 패널이 해제될 때까지 제거되지 않는 문서 위로 투명한 mask를 자동 생성한다.",
    "isFinal": false,
    "name": "modal",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Specifies whether to create a special proxy iframe to monitor\n for user font resizing in the document",
    "isFinal": false,
    "name": "monitorresize",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "",
    "isFinal": false,
    "name": "preventcontextoverlap",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "An",
    "deprecated": false,
    "description": "UI Strings used by the Panel",
    "isFinal": false,
    "name": "strings",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "shadow",
    "deprecated": false,
    "description": "패널을 보여주는 underlay 타입을 설정한다.\n 유효값은 \"shadow,\" \"matte,\"와 \"none\". &amp;lt;strong&amp;gt;PLEASE NOTE:&amp;lt;/strong&amp;gt;\n underlay 엘리먼트 생성은 패널이 처음 보이게 될 때까지 늦추어진다.\n Mac OS X의 Gecko-based 브라우저에는,\n 패널 인스턴스 아래로 Aqua 스크롤바가 뚫고 지나가는 것을 방지하기 위해\n underlay 엘리먼트가 shim(연결판)으로 사용됨으로써 underlay 엘리먼트가 항상 생성된다.\n (SourceForge bug #836476 참조)",
    "isFinal": false,
    "name": "underlay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Specifies whether the Module is visible on the page.",
    "isFinal": false,
    "name": "visible",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "overlay의 x 절대좌표 위치",
    "isFinal": false,
    "name": "x",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "overlay의 x와 y의 절대좌표 위치를 가진 배열",
    "isFinal": false,
    "name": "xy",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number[]",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "overlay의 y 절대좌표 위치",
    "isFinal": false,
    "name": "y",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Overlay의 CSS z-index",
    "isFinal": false,
    "name": "zIndex",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "Panel은 드래그 가능한 헤더와 top 우측의 선택적 close icon과 함께\n OS 윈도우 같이 행동하는 Panel구현체이다.",
   "name": "Rui.ui.LPanel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "Panel을 나타내는 엘리먼트ID&amp;lt;em&amp;gt;또는&amp;lt;/em&amp;gt; Panel을 나타내는 엘리먼트",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String|HTMLElement"
    },
    {
     "deprecated": false,
     "description": "Panel에 설정되어야 할 환경설정을 포함한 configuration 오브젝트 문자\n 더 자세한 사항은 configuration 문서를 참조하라.",
     "isFinal": false,
     "name": "userConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Panel은 드래그 가능한 헤더와 top 우측의 선택적 close icon과 함께\n OS 윈도우 같이 행동하는 Panel구현체이다.",
  "events": [
   {
    "deprecated": false,
    "description": "Event fired before the Module is hidden",
    "name": "beforeHide",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired prior to class initalization.",
    "name": "beforeInit",
    "parameters": [{
     "deprecated": false,
     "description": "class reference of the initializing\n class, such as this.beforeInitEvent.fire(Module)",
     "isFinal": false,
     "name": "classRef",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "class"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel 이동되기 전에 fire move event",
    "name": "beforeMove",
    "parameters": [
     {
      "deprecated": false,
      "description": "x coordinate",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "y coordinate",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Number"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired before the Module is rendered",
    "name": "beforeRender",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired before the Module is shown",
    "name": "beforeShow",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired when the body content of the Module is modified",
    "name": "changeBody",
    "parameters": [{
     "deprecated": false,
     "description": "String/element representing\n the new body content",
     "isFinal": false,
     "name": "content",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String/HTMLElement"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired when the content of the Module is modified",
    "name": "changeContent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired when the footer content of the Module\n is modified",
    "name": "changeFooter",
    "parameters": [{
     "deprecated": false,
     "description": "String/element representing\n the new footer content",
     "isFinal": false,
     "name": "content",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String/HTMLElement"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired when the header content of the Module\n is modified",
    "name": "changeHeader",
    "parameters": [{
     "deprecated": false,
     "description": "String/element representing\n the new header content",
     "isFinal": false,
     "name": "content",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String/HTMLElement"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired when the Module is destroyed",
    "name": "destroy",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Panel이 드래그될 때 LCustomEvent fired",
    "name": "drag",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "modal mask(팝업 뒤의 화면)가 숨겨진 후 LCustomEvent가 fired 된다",
    "name": "hideMask",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event fired after class initalization.",
    "name": "init",
    "parameters": [{
     "deprecated": false,
     "description": "class reference of the initializing\n class, such as this.beforeInitEvent.fire(Module)",
     "isFinal": false,
     "name": "classRef",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "class"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LCustomEvent fired after the Module is rendered",
    "name": "render",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "modal mask(팝업 뒤의 화면)가 보여진 후 LCustomEvent가 fired 된다.",
    "name": "showMask",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Singleton LCustomEvent fired when the font size is changed in the browser.\n Opera's \"zoom\" functionality currently does not support text\n size detection.",
    "name": "textResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "윈도우 리사이즈를 위한 DOM 이벤트에 반응하도록 사용되는 싱글톤 LCustomEvent",
    "name": "windowResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "윈도우 스크롤을 위한 DOM 이벤트에 반응하도록 사용되는 싱글톤 LCustomEvent",
    "name": "windowScroll",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "",
    "name": "_addFocusHandlers",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "event type",
      "isFinal": false,
      "name": "Custom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event arguments",
      "isFinal": false,
      "name": "Custom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Custom Event handler for context alignment triggers. Invokes the align method",
    "name": "_alignOnTrigger",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The event type (not used by the default implementation)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The array of arguments for the trigger event (not used by the default implementation)",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Any[]"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The default custom event handler executed when the Panel's height is changed,\n if the autofillheight property has been set.",
    "name": "_autoFillOnHeightChange",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The event type",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The array of arguments passed to event subscribers",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "The header, body or footer element which is to be resized to fill\n out the containers height",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "close 아이콘을 위한 이벤트 핸들러",
    "name": "_doClose",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Create and initialize the text resize monitoring iframe.",
    "name": "_initResizeMonitor",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the Module's body content to the HTML specified.\n\n If no body is present, one will be automatically created.\n\n An empty string can be passed to the method to clear the contents of the body.",
    "name": "_insertBody",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The HTML used to set the body.\n As a convenience, non HTMLElement objects can also be passed into\n the method, and will be treated as strings, with the body innerHTML\n set to their default toString implementations.",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The HTMLElement to add as the first and only\n child of the body element.",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "The document fragment\n containing elements which are to be added to the body",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DocumentFragment"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Utility method that subscribes or unsubscribes the given\n function from the list of trigger events provided.",
    "name": "_processTriggers",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "An array of either CustomEvents, event type strings",
      "isFinal": false,
      "name": "triggers",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array[String|LCustomEvent]"
     },
     {
      "deprecated": false,
      "description": "Either \"on\" or \"unOn\", specifying whether or not\n we are subscribing or unsubscribing trigger listeners",
      "isFinal": false,
      "name": "mode",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The function to be subscribed/unsubscribed to/from the trigger event.\n Context is always set to the overlay instance, and no additional object argument\n get passed to the subscribed function.",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "",
    "name": "_removeFocusHandlers",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "type",
      "isFinal": false,
      "name": "Event",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Arguments",
      "isFinal": false,
      "name": "Event",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the currently set body into it's proper position under the\n module element. If the module element is not provided, \"this.element\"\n is used.",
    "name": "_renderBody",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Optional. A reference to the module element.",
     "isFinal": false,
     "name": "moduleElement",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the currently set footer into it's proper position under the\n module element. If the module element is not provided, \"this.element\"\n is used.",
    "name": "_renderFooter",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Optional. A reference to the module element",
     "isFinal": false,
     "name": "moduleElement",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the currently set header into it's proper position under the\n module element. If the module element is not provided, \"this.element\"\n is used.",
    "name": "_renderHeader",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Optional. A reference to the module element",
     "isFinal": false,
     "name": "moduleElement",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 속성이 변경될 때 fire되는 기본 이벤트 핸들러",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "left 속성에 따른 실제 적용 메소드",
    "name": "_setLeft",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "top 속성에 따른 실제 적용 메소드",
    "name": "_setTop",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성이 변경될 때 fire되는 기본 이벤트 핸들러",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "autofillheight validator. Verifies that the autofill value is either null\n or one of the strings : \"body\", \"header\" or \"footer\".",
    "name": "_validateAutoFillHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "overlay를 특정 코너 포인트(상수 TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, BOTTOM_RIGHT)를 사용하여\n 컨텍스트 엘리먼트에 맞추어 조정한다.",
    "name": "align",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The String representing the corner of\n the Overlay that should be aligned to the context element",
      "isFinal": false,
      "name": "elementAlign",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The corner of the context element\n that the elementAlign corner should stick to.",
      "isFinal": false,
      "name": "contextAlign",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Appends the passed element to the body. If no body is present, one\n will be automatically created.",
    "name": "appendToBody",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The element to\n append to the body. In the case of a document fragment, the\n children of the fragment will be appended to the body.",
     "isFinal": false,
     "name": "element",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement | DocumentFragment"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Appends the passed element to the footer. If no footer is present,\n one will be automatically created.",
    "name": "appendToFooter",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The element to\n append to the footer. In the case of a document fragment, the\n children of the fragment will be appended to the footer",
     "isFinal": false,
     "name": "element",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement | DocumentFragment"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "overlay를 Rui.ui.LOverlay의 모든 다른 인스턴스들의 top에 올려놓는다.",
    "name": "bringToTop",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "패널이 modal로 설정될 때 document에 놓인 마스크를 build한다.",
    "name": "buildMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "패널 주위의 wrapping된 컨테이너를 빌드한다.\n 이 패널은 shadow와 matte underlay를 포지셔닝하기 위해 사용된다.\n 컨테이너 엘리먼트는 콘테이너라고 불리는 로컬 인스턴스 변수로 할당되고,\n 이 엘리먼트는 이 변수 내에 재등록된다.",
    "name": "buildWrapper",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "viewport에서 컨테이너를 중앙에 위치시킨다.\n Centers the container in the viewport.",
    "name": "center",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "autofillheight 속성이 변경되었을 떄 fire되는 기본 이벤트 핸들러",
    "name": "configAutoFillHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "close 속성이 변경될 때 fire되는 기본 이벤트 핸들러\n 메소드는 패널의 오른쪽 위에 close 아이콘을 추가하거나 숨기는 것을 제어한다.",
    "name": "configClose",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"context\" 속성이 변경될 때 fire되는 기본 이벤트 핸들러.",
    "name": "configContext",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "draggable 속성이 변경될 때 fire되는 기본 이벤트 핸들러",
    "name": "configDraggable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"iframe\"속성이 변경되었을 때 fire된 기본 이벤트 핸들러",
    "name": "configIframe",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "keylisteners 속성이 변경될 때 fire되는 기본 이벤트 핸들러",
    "name": "configKeyListeners",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "modal 속성이 변경될 때 fire되는 기본 이벤트 핸들러\n 이 핸들러는 modal 마스크를 보여주거나 숨기기 위해 show와 hide 이벤트를\n 등록 또는 해지한다.",
    "name": "configModal",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "strings 속성을 위한 기본 핸들러",
    "name": "configStrings",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "underlay 속성이 변경될 때 fire되는 기본 이벤트 핸들러",
    "name": "configUnderlay",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"visible\" 속성이 변경될 때 fire되는 기본 이벤트 핸들러.\n 이 메소드는 showEvent와 hideEvent를 fire 시킬 의무가 있다.",
    "name": "configVisible",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "x 속성이 변경되었을 떄 fire되는 기본 이벤트 핸들러",
    "name": "configX",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "xy 속성이 변경되었을 떄 fire되는 기본 이벤트 핸들러",
    "name": "configXY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "y 속성이 변경되었을 떄 fire되는 기본 이벤트 핸들러",
    "name": "configY",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "zIndex 속성이 변경될 때 fire되는 기본 이벤트 핸들러",
    "name": "configzIndex",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "zIndex 속성이 변경되었을 떄 fire되는 기본 이벤트 핸들러",
    "name": "configzIndex",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration\n handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers,\n this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createElement",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "overlay가 보일 때만 스크롤을 중심에 오도록 하거나 리사이즈 하는데 사용되는\n center 이벤트 핸들러",
    "name": "doCenterOnDOMEvent",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "&amp;lt;p&amp;gt;\n 컨테이너의 높이를 채우기 위해 제공된 header, body 또는 footer 엘리먼트 위의 높이를 설정한다.\n 이 메소드는, 설정된 높이 값을 근거로 컨테이너 컨텐츠 박스의 높이를 결정하며,\n 다른 표준 모듈 엘리먼트 높이가 확인된 후 남은 공간을 모두 채우기 위해\n autofillheight의 높이를 결정한다.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;NOTE:&amp;lt;/strong&amp;gt; 이 메소드는\n This method is not designed to work if an explicit\n height has not been set on the container, since for an \"auto\" height container,\n the heights of the header/body/footer will drive the height of the container.&amp;lt;/p&amp;gt;",
    "name": "fillHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The element which should be resized to fill out the height\n of the container element.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Overlay fillHeight에서 container = this.element || this.innerElement, this.element가 우선이 되도록 순서 변경. panel을 height를 부모의 나머지 공간까지 채우는 메소드",
    "name": "fillHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The element which should be resized to fill out the height of the container element.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Panel의 첫번째 엘리먼트에 포커스를 설정한다.",
    "name": "focusFirst",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Panel의 마지막 엘리먼트에 포커스를 설정한다.",
    "name": "focusLast",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body정보 반환",
    "name": "getBody",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "} return element",
    "returnType": "HTMLElement ",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Panel 내에 속한 현재 포커스 가능한 아이템을 array로 리턴한다.\n 메소드가 찾는 포커스 가능한 엘리먼트 셋은 Panel에서 정의된다.\n FOCUSABLE static property",
    "name": "getFocusableElements",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "element to start from.",
     "isFinal": false,
     "name": "root",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "footer정보 반환",
    "name": "getFooter",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "} return element",
    "returnType": "HTMLElement ",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "header정보 반환",
    "name": "getHeader",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "} return element",
    "returnType": "HTMLElement ",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Hides the Module element by setting the visible configuration\n property to false. Also fires two events: beforeHideEvent prior to\n the visibility change, and hideEvent after.",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Hides the element",
    "name": "hideAnim",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "iframe shim이 enable 되면 숨긴다.",
    "name": "hideIframe",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "modal 마스크를 숨긴다.",
    "name": "hideMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체의 아이디나 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|Object"
     },
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "oConfig",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Panel의 컨피그 오브젝트(cgf)를 사용해서 변경될 수 있는,\n 클래스의 컨피그 속성들을 초기화한다.",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor의 show 여부를 리턴하는 메소드",
    "name": "isShow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel를 특정 위치로 이동시킨다.\n 이 함수는 this.cfg.setProperty(\"xy\", [x,y])를 호출한 것과 동일하다.",
    "name": "moveTo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The Overlay's new x position",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "The Overlay's new y position",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "리사이즈 모니터 엘리먼트가 리사이즈 되었을 때 fire되는 이벤트 핸들러.",
    "name": "onDomResize",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The resize DOM event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "The scope object",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Drag &amp; Drop 기능을 패널 헤더에 등록한다.",
    "name": "registerDragDrop",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the Module's body content to the HTML specified.\n\n If no body is present, one will be automatically created.\n\n An empty string can be passed to the method to clear the contents of the body.",
    "name": "setBody",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The HTML used to set the body.\n As a convenience, non HTMLElement objects can also be passed into\n the method, and will be treated as strings, with the body innerHTML\n set to their default toString implementations.",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The HTMLElement to add as the first and only\n child of the body element.",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "The document fragment\n containing elements which are to be added to the body",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DocumentFragment"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Panel의 첫번째와 마지막의 포커스 가능한 엘리먼츠에\n firstElement와 lastElement 인스턴스 속성들을 설정한다.",
    "name": "setFirstLastFocusable",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the Module's footer content to the HTML specified, or appends\n the passed element to the footer. If no footer is present, one will\n be automatically created. An empty string can be passed to the method\n to clear the contents of the footer.",
    "name": "setFooter",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The HTML used to set the footer\n As a convenience, non HTMLElement objects can also be passed into\n the method, and will be treated as strings, with the footer innerHTML\n set to their default toString implementations.",
      "isFinal": false,
      "name": "footerContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The HTMLElement to append to\n the footer",
      "isFinal": false,
      "name": "footerContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "The document fragment containing\n elements which are to be added to the footer",
      "isFinal": false,
      "name": "footerContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DocumentFragment"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the Module's header content to the string specified, or appends\n the passed element to the header. If no header is present, one will\n be automatically created. An empty string can be passed to the method\n to clear the contents of the header.",
    "name": "setHeader",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The string used to set the header.\n As a convenience, non HTMLElement objects can also be passed into\n the method, and will be treated as strings, with the header innerHTML\n set to their default toString implementations.",
      "isFinal": false,
      "name": "headerContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The HTMLElement to append to",
      "isFinal": false,
      "name": "headerContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "The document fragment\n containing elements which are to be added to the header",
      "isFinal": false,
      "name": "headerContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DocumentFragment"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel container Left속성",
    "name": "setLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 Left",
     "isFinal": false,
     "name": "left",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "첫번째와 마지막 엘리먼트 사이에 tab, shift-tab loop를 설정한다.\n NOTE: preventBackTab과 preventTabOut LKeyListener 인스턴스 속성들을 설정한다.\n 이들은 이 메소드가 invoke 될 때마다 리셋된다.",
    "name": "setTabLoop",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel container top속성",
    "name": "setTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 top",
     "isFinal": false,
     "name": "top",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Shows the Module element by setting the visible configuration\n property to true. Also fires two events: beforeShowEvent prior to\n the visibility change, and showEvent after.",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "iframe shim이 enable 되면 나타낸다.",
    "name": "showIframe",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "modal 마스크를 보여준다.",
    "name": "showMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "전체 스크롤 가능한 구역을 커버하는 modal 마스크 사이즈 설정",
    "name": "sizeMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 사이즈에 근거하여 그림자의 사이즈를 조정한다.",
    "name": "sizeUnderlay",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "존재한다면 overlay 엘리먼트의 zindex에 근거하여 iframe shim의 zindex를 설정한다.\n iframe의 zindex는 overlay 엘리먼트의 zindex보다 하나 더 적게 설정된다.\n\n &amp;lt;p&amp;gt;NOTE: 이 메소드는 iframe shim이 양수(0 포함) zindex를 가지도록 보장하기 위해\n overlay 엘리먼트의 zindex를 올리지 않는다.\n iframe zindex가 0 또는 그 이상이 되어야 한다면, 이 메소드가 호출되기 전에\n overlay 엘리먼트의 zindex는 0 보다 큰 값으로 설정되어야 한다.\n &amp;lt;/p&amp;gt;",
    "name": "stackIframe",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "패널 엘리먼트의 zindex를 근거로 마스크의 zindex를 설정한다(zindex가 존재할 경우)\n 마스크의 zindex는 패널 엘리먼트의 zindex 보다 하나 적은 값으로 설정된다.\n\n &amp;lt;p&amp;gt;NOTE: 이 메소드는 마스크가 non-negative zindex를 가지고 있음을\n 확인하는 패널의 zindex를 올리지 않는다.\n 마스크 zindex가 0 또는 그 이상이 되는 것이 필요하다면\n 이 메소드가 호출되기 전에 패널의 zindex 값을 0보다 크게 설정해야 한다.\n This method will not bump up the zindex of the Panel\n to ensure that the mask has a non-negative zindex. If you require the\n mask zindex to be 0 or higher, the zindex of the Panel\n should be set to a value higher than 0, before this method is called.\n &amp;lt;/p&amp;gt;",
    "name": "stackMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Overlay 인스턴스에 해당하는 사이즈와 위치에 iframe shim의 사이즈와 위치를 동기화 한다.",
    "name": "syncIframe",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM 에 있는 Panel의 위치를 Panel의 \"xy\", \"x\", \"y\" 속성과 동기화 한다.\n 이는 주로 drag&amp;drop 동안에 위치 정보를 갱신하는데 사용된다.",
    "name": "syncPosition",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "해당 오브젝트를 String 으로 표현하여 리턴.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The string representation of the Panel.",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "android의 toast 메시지 처럼 잠시 메시지를 잠시 출력했다가 사라진다. IE8이상 지원",
    "name": "toast",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "출력할 메시지",
      "isFinal": false,
      "name": "text",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "환경 설정값",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [{
   "deprecated": false,
   "description": "The id of the element",
   "isFinal": false,
   "name": "id",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LPanel",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'none'",
    "deprecated": false,
    "description": "dialog의 button 객체들 정보",
    "isFinal": false,
    "name": "buttons",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Array|String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "다이얼로그에서 submit시 호출될 callback 함수 (callback.success/callback.failure/callback.upload/callback.argument)",
    "isFinal": false,
    "name": "callback",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Object reference to the Dialog's",
    "isFinal": false,
    "name": "form",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "HTMLFormElement",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "dialog의 submit을 호출한 후에 dialog를 숨길것인지 여부를 결정한다.",
    "isFinal": false,
    "name": "hideaftersubmit",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "async",
    "deprecated": false,
    "description": "dialog의 submit 종류를 지정한다. 종류로는 'async', 'form', 'manual', 'none' 가 있다.",
    "isFinal": false,
    "name": "postmethod",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "Dialog를 구현한 객체",
   "name": "Rui.ui.LDialog",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The configuration object literal containing\n the configuration that should be set for this Dialog. See configuration\n documentation for more details.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Dialog를 구현한 객체",
  "events": [
   {
    "deprecated": false,
    "description": "postmethod값이 async일 경우 submit 전에 호출되는 이벤트",
    "name": "asyncSubmit",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "submit 전에 호출되는 이벤트",
    "name": "beforeSubmit",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cancel시 호출되는 이벤트",
    "name": "cancel",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "postmethod값이 form일 경우 submit 전에 호출되는 이벤트",
    "name": "formSubmit",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "postmethod값이 manual일 경우 submit 전에 호출되는 이벤트",
    "name": "manualSubmit",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "submit시 호출되는 이벤트",
    "name": "submit",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "validate시 호출되는 이벤트",
    "name": "validate",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "close 아이콘을 위한 이벤트 핸들러",
    "name": "_doClose",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Retrieves important attributes (currently method and action) from\n the form element, accounting for any elements which may have the same name\n as the attributes.",
    "name": "_getFormAttributes",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The HTML Form element from which to retrieve the attributes",
     "isFinal": false,
     "name": "oForm",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLFormElement"
    }],
    "returnDescription": "Object literal, with method and action String properties.",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Internal handler for the form submit event",
    "name": "_submitHandler",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The DOM Event object",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "DOMEvent"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Blurs all the buttons defined via the 'buttons'\n configuration property.",
    "name": "blurButtons",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Executes the cancel of the Dialog followed by a hide.",
    "name": "cancel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체의 invalid된 모든 객체를 초기화 하는 메소드",
    "name": "clearInvalid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The default event handler for the 'buttons' configuration property",
    "name": "configButtons",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers, this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The default event handler for the 'postmethod' configuration property",
    "name": "configPostMethod",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The LCustomEvent type (usually the property name)",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The LCustomEvent arguments. For configuration handlers, args[0] will equal the newly applied value for the property.",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "The scope object. For configuration handlers, this will usually equal the owner.",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "LElement|HTMLElement|String"
    }],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes the Dialog element from the DOM and sets all child elements to null.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Submits the Dialog's form depending on the value of the\n 'postmethod' configuration property.",
    "name": "doSubmit",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the focus to the button that is designated as the default via\n the 'buttons' configuration property. By default, this method is\n called when the Dialog is made visible.",
    "name": "focusDefaultButton",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets focus to the first element in the Dialog's form or the first\n button defined via the 'buttons' configuration property. Called\n when the Dialog is made visible.",
    "name": "focusFirst",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the focus to the first button created via the 'buttons'\n configuration property.",
    "name": "focusFirstButton",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets focus to the last element in the Dialog's form or the last\n button defined via the 'buttons' configuration property.",
    "name": "focusLast",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the focus to the last button created via the 'buttons'\n configuration property.",
    "name": "focusLastButton",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LDialog의 button들의 정보를 배열로 리턴한다.",
    "name": "getButtons",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a Json-compatible data structure representing the data\n currently contained in the form.",
    "name": "getData",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "A Json object reprsenting the data of thecurrent form.",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Initializes the class's configurable properties which can be changed\n using the Dialog's Config object (cfg).",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Initializes the custom events for Dialog which are fired\n automatically at appropriate times by the Dialog class.",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Prepares the Dialog's internal FORM object, creating one if one is not currently present.",
    "name": "registerForm",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LDialog의 button들의 정보를 배열로 설정한다.",
    "name": "setButtons",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Configures instance properties, pointing to the\n first and last focusable elements in the Dialog's form.",
    "name": "setFirstLastFocusable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets up a tab, shift-tab loop between the first and last elements\n provided. NOTE: Sets up the preventBackTab and preventTabOut LKeyListener\n instance properties, which are reset everytime this method is invoked.",
    "name": "setTabLoop",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Executes a submit of the Dialog if validation\n is successful. By default the Dialog is hidden\n after submission, but you can set the 'hideaftersubmit'\n configuration property to false, to prevent the Dialog\n from being hidden.",
    "name": "submit",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representation of the object.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The string representation of the Dialog",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Built-in function hook for writing a validation function that will\n be checked for a 'true' value prior to a submit. This function, as\n implemented by default, always returns true, so it should be\n overridden if validation is necessary.",
    "name": "validate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui",
  "propertys": [{
   "deprecated": false,
   "description": "Object reference to the Dialog's",
   "isFinal": false,
   "name": "form",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "HTMLFormElement",
   "visibility": "protected"
  }],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LPanel",
  "type": "Rui.ui.LDialog",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'none'",
    "deprecated": false,
    "description": "LSimpleDialog에 대한 정보 icon을 설정한다.",
    "isFinal": false,
    "name": "icon",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "LSimpleDialog에 대한 text를 설정한다.",
    "isFinal": false,
    "name": "text",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LSimpleDialog 는 간단한 다이얼로그 구현이다. 단일 값을 submit 하는데 사용될 수 있다.\n 형태는 세 가지로 구성될 수 있다\n async connection utility call, 단순 form POST 또는 GET, 매뉴얼",
   "name": "Rui.ui.LSimpleDialog",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "LSimpleDialog를 나타내는 엘리먼트ID&amp;lt;em&amp;gt;또는&amp;lt;/em&amp;gt;LSimpleDialog를 나타내는 엘리먼트",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String|HTMLElement"
    },
    {
     "deprecated": false,
     "description": "LSimpleDialog에 설정되어야 할 환경설정을 포함한 configuration 오브젝트 문자\n 더 자세한 사항은 configuration 문서를 참조하라.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LSimpleDialog 는 간단한 다이얼로그 구현이다. 단일 값을 submit 하는데 사용될 수 있다.\n 형태는 세 가지로 구성될 수 있다\n async connection utility call, 단순 form POST 또는 GET, 매뉴얼",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes the Panel element from the DOM and sets all child elements\n to null.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "변경가능한 클래스 config properties를 초기화 한다.\n LSimpleDialog의 Config object(cfg) 사용.",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Initializes the custom events for Dialog which are fired\n automatically at appropriate times by the Dialog class.",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LSimpleDialog의 내부 form 오브젝트 준비.\n 이 form obj는 현재 없으면 생성하고 hidden field에 값을 추가.",
    "name": "registerForm",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "&amp;lt;p&amp;gt;\n HTML에 LSimpleDialog의 body 내용 설정\n body가 존재하지 않으면 자동으로 생성된다.\n 빈 string 값이 body 내용을 클리어하는 메소드로 넘겨질 수 있다.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;NOTE:&amp;lt;/strong&amp;gt; LSimpleDialog는 &amp;lt;a href=\"#config_text\"&amp;gt;text&amp;lt;/a&amp;gt;,\n 그리고 &amp;lt;a href=\"#config_icon\"&amp;gt;icon&amp;lt;/a&amp;gt; 를 제공한다.\n 이들은 LSimpleDialog(icon과 message text)의 UI 디자인에 부합되게 body 엘리먼츠 내용을 설정한다.\n LSimpleDialog에서 setBody 호출은 이 UI 디자인 제한에 구애받지 않고\n LSimpleDialog body의 전체 내용을 교체한다.\n 이는 custom makrup으로 LSimpleDialog 기본 icon/text body 구조를 교체하려고 할 때만 사용할 수 있다.&amp;lt;/p&amp;gt;",
    "name": "setBody",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "body 설정하는데 사용되는 HTML.\n 편의상, HTMLElement 오브젝트가 아닌 것들도 메소드로 넘겨질 수 있고\n string으로 취급되며 body innerHTML과 함께 기본 toString 구현으로 설정될 수 있다.",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "body 엘리먼트의 첫번째이자 유일한 child로 추가되는 HTMLElement.",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "body에 추가되는 엘리먼츠를 포함하는 문서",
      "isFinal": false,
      "name": "bodyContent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DocumentFragment"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object를 string 형태로 리턴한다.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "LSimpleDialog의 string 형태 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [
   {
    "deprecated": false,
    "description": "LSimpleDialog에 사용되는 기본 CSS 클래스를 나타내는 상수",
    "isFinal": true,
    "name": "CSS_SIMPLEDIALOG",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "alarm에 대한 표준 네트워크 아이콘 상수",
    "isFinal": true,
    "name": "ICON_ALARM",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "블로킹에 대한 표준 네트워크 아이콘 상수",
    "isFinal": true,
    "name": "ICON_BLOCK",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트에 적용되는 CSS 클래스 이름을 나타내는 상수\n 'icon' config property에 의해 생성",
    "isFinal": true,
    "name": "ICON_CSS_CLASSNAME",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "help에 대한 표준 네트워크 아이콘 상수",
    "isFinal": true,
    "name": "ICON_HELP",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "info에 대한 표준 네트워크 아이콘 상수",
    "isFinal": true,
    "name": "ICON_INFO",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "tip에 대한 표준 네트워크 아이콘 상수",
    "isFinal": true,
    "name": "ICON_TIP",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "warn에 대한 표준 네트워크 아이콘 상수",
    "isFinal": true,
    "name": "ICON_WARN",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.ui.LDialog",
  "type": "Rui.ui.LSimpleDialog",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "메시지 박스를 띄울경우 사용한다.\n 종류: alert, confirm, prompt",
   "name": "Rui.ui.LMessageBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "메시지 박스를 띄울경우 사용한다.\n 종류: alert, confirm, prompt",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "alert message",
    "name": "alert",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 메시지나 출력 정보 객체",
     "isFinal": false,
     "name": "option",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String || Object"
    }],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "confirm message",
    "name": "confirm",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 메시지나 출력 정보 객체",
     "isFinal": false,
     "name": "option",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String || Object"
    }],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "prompt message",
    "name": "prompt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 메시지나 출력 정보 객체",
     "isFinal": false,
     "name": "option",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String || Object"
    }],
    "returnType": "void",
    "scope": "static",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [],
  "sample": "default",
  "scope": "static",
  "type": "Rui.ui.LMessageBox",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "mask message 객체\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/waitpanelSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
   "isFinal": false,
   "name": "maskMsg",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "Object",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "사용자로부터 기다려야 함을 요구할 때 사용",
   "name": "Rui.ui.LWaitPanel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "사용자로부터 기다려야 함을 요구할 때 사용",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "wait panel의 Region정보를 리턴하는 메소드",
    "name": "getRegion",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Region | Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wait panel 객체를 숨기는 메소드",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wait panel의 region 정보를 설정하는 메소드",
    "name": "setRegion",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Region 정보 객체",
     "isFinal": false,
     "name": "g",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Region | Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wait panel 객체를 출력하는 메소드",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.LWaitPanel",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "컨텐츠로 사용될 DOM의 정보를 지정한다. 이 값이 없을 경우는 랜더링될 DOM의 첫번째 자식(firstChild)이 컨텐츠 DOM이 된다.",
    "isFinal": false,
    "name": "content",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String|HTMLElement|LElement",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "스크롤러를 설정할 컨텐츠의 DOM 또는 DOM의 ID",
    "isFinal": false,
    "name": "content",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String|HTMLElement|LElement",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "컨텐츠에 margin등이 있을경우 정확한 컨텐츠의 크기를 얻을 수 없기에 wrapper DOM(inline-block) 생성해서\n 컨텐츠의 정확한 크기를 얻을 수 있는데, margin등이 없는 컨텐츠의 경우 wrapper DOM을 생성할 필요 없다.\n marginSafe기능을 true로 설정시 wrapper DOM을 생성하여 하위 컨텐츠의 margin을 포함한 정확한 크기를 얻을 수 있다.",
    "isFinal": false,
    "name": "marginSafe",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'auto'",
    "deprecated": false,
    "description": "scrollbar를 설정한다.\n auto : 필요에 따라 스크롤바가 나타남\n both : x, y 양쪽 스크롤바가 고정으로 나타나며 불필요시 비활성화됨\n x : x스크롤바는 고정이며 y스크롤바는 자동으로 나타남\n y : y스크롤바는 고정이며 x스크롤바는 자동으로 나타남",
    "isFinal": false,
    "name": "scrollbar",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "가상 스크롤을 사용할지 여부. 사용할 경우 true로 설정한다.",
    "isFinal": false,
    "name": "useVirtual",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LScroller",
   "name": "Rui.ui.LScroller",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "LScroller의 초기 설정값",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LScroller",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "el 컨테이너 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "x, y축 scrollbar가 생성된 상태(사용중)인지 여부 반환",
    "name": "existScrollbar",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar를 조회하는지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "X scroller의 최대 스크롤값(scrollLeft)을 반환한다.",
    "name": "getMaxScrollLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional]",
     "isFinal": false,
     "name": "margin",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Y scroller의 최대 스크롤값(scrollTop)을 반환한다.",
    "name": "getMaxScrollTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional]",
     "isFinal": false,
     "name": "margin",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll의 1단위 다음 scroll 값을 반환한다.",
    "name": "getNext",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회할 지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll의 1단위 이전 scroll 값을 반환한다.",
    "name": "getPrevious",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회할 지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll x,y 가져오기",
    "name": "getScroll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "coord",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll의 height을 반환한다.\n 이 값은 일반적으로 scroller el의 height에서 scrollbar의 size등을 제한 값이다.",
    "name": "getScrollHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll의 scrollLeft 값을 반환",
    "name": "getScrollLeft",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll의 scrollTop 값을 반환",
    "name": "getScrollTop",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll의 width를 반환한다.\n 이 값은 일반적으로 scroller el의 width에서 scrollbar의 size등을 제한 값이다.",
    "name": "getScrollWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scrollbar의 크기를 조회한다. y scrollbar의 경우 width,  x scrollbar의 경우 height이 반환되며\n 보통 이 값은 17px이다.",
    "name": "getScrollbarSize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회하는지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "스크롤 상하좌우 단에 공간이 필요하며, 이 공간들이 스크롤에 포함되지 않아야 하는경우 space을 사용할 수 있음.\n 스크롤에 포함되지 않는 영역의 상하좌우 값을 반환함.",
    "name": "getSpace",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 축의 명칭 (top, right, bottom, left)",
     "isFinal": false,
     "name": "axis",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "마우스의 상하 wheel 동작시 한번에 욺직이는 스크롤의 한 단위(px) 조회\n 이 값이 크면 스크롤의 속도가 빠르며 값이 작으면 스크롤 속도가 느려짐.",
    "name": "getStep",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] wheel의 값을 조회할지 여부",
      "isFinal": false,
      "name": "wheel",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] x-scrollbar의 값을 조회할지 여부",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll을 원하는 위치로 이동시킨다.\n go 함수의 경우 스크롤 위치를 기억한다. 이동되어야 할 위치가 없더라도 후에 재 랜더링 시에 이동되어야 할 위치가 확보되면 그때 이동한다.",
    "name": "go",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "위치 px (scrollTop 또는 scrollLeft)",
      "isFinal": false,
      "name": "이동할",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] x-scrollbar를 이동할지 여부",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll을 끝 위치로 이동 시킨다.",
    "name": "goEnd",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar를 이동할지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll을 다음 위치로 이동 시킨다.",
    "name": "goNext",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar를 이동할지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll을 이전 위치로 이동 시킨다.",
    "name": "goPrevious",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar를 이동할지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll을 시작 위치로 이동시킨다.",
    "name": "goStart",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar를 이동할지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll이 끝 위치에 있는지 여부 반환.",
    "name": "isEnd",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회하는지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll이 처음 위치에 있는지 여부 반환.",
    "name": "isStart",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회하는지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "window resize시 handler, 새로 그린다.",
    "name": "refresh",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "스크롤의 높이를 설정한다.",
    "name": "setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "새로운 높이.",
      "isFinal": false,
      "name": "height",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] space적용 후 스크롤을 refresh할 지 여부. default true",
      "isFinal": false,
      "name": "skipRefresh",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll 이동하기",
    "name": "setScroll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "coord.top, coord.left",
     "isFinal": false,
     "name": "coord",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll left 설정하기",
    "name": "setScrollLeft",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll top 설정하기",
    "name": "setScrollTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "scrollTop px값",
     "isFinal": false,
     "name": "scrollTop",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "x스크롤 상,하,좌,우 공간이 필요하며, 이 공간은 x, y스크롤에 포함되지 않아야 하는경우 setSpace를 사용할 수 있음.\n 이 값은 스크롤에 포함되지 않는 영역의 width, height값을 설정할것.",
    "name": "setSpace",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] space적용 후 스크롤을 refresh할 지 여부. default true",
      "isFinal": false,
      "name": "skipRefresh",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] 축의 명칭 (top, right, bottom, left)",
      "isFinal": false,
      "name": "axis",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "마우스의 상하 wheel 동작시 한번에 욺직이는 스크롤의 한 단위(px).\n 이 값이 크면 스크롤의 속도가 빠르며 값이 작으면 스크롤 속도가 느려짐.",
    "name": "setStep",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] wheel의 값을 설정할지 여부",
      "isFinal": false,
      "name": "wheel",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] x-scrollbar의 값을 설정할지 여부",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering 전 가상의 높이 설정",
    "name": "setVirtualContentHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering 전 가상의 넓이 설정",
    "name": "setVirtualContentWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "스크롤의 넓이를 설정한다.",
    "name": "setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "새로운 넓이",
      "isFinal": false,
      "name": "width",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] space적용 후 스크롤을 refresh할 지 여부. default true",
      "isFinal": false,
      "name": "skipRefresh",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "x, y scrollbar의 각 content의 넓이 및 높이를 자동으로 설정한다.",
    "name": "setupVirtualContent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scrollEl과 xScrollBar의 left값을 맞춘다.",
    "name": "syncScrollLeft",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체 String",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [{
   "deprecated": false,
   "description": "scrollbar의 넓이 (가로스크롤의 경우 height, 세로스크롤의 경우 width)",
   "isFinal": false,
   "name": "scrollbarSize",
   "parameterType": "PROPERTIES",
   "scope": "static",
   "type": "int",
   "visibility": "protected"
  }],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LScroller",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "','",
    "deprecated": false,
    "description": "The value used to delimit individual dates in a date string passed to various LCalendar functions.",
    "isFinal": false,
    "name": "DATE_DELIMITER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'/'",
    "deprecated": false,
    "description": "The value used to delimit date fields in a date string passed to various LCalendar functions.",
    "isFinal": false,
    "name": "DATE_FIELD_DELIMITER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'-'",
    "deprecated": false,
    "description": "The value used to delimit date ranges in a date string passed to various LCalendar functions.",
    "isFinal": false,
    "name": "DATE_RANGE_DELIMITER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should suppress weeks that are not a part of the current month. False by default.",
    "isFinal": false,
    "name": "HIDE_BLANK_WEEKS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'long'",
    "deprecated": false,
    "description": "The setting that determines which length of month labels should be used. Possible values are 'short' and 'long'.",
    "isFinal": false,
    "name": "LOCALE_MONTHS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'short'",
    "deprecated": false,
    "description": "The setting that determines which length of weekday labels should be used. Possible values are '1char', 'short', 'medium', and 'long'.",
    "isFinal": false,
    "name": "LOCALE_WEEKDAYS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the day in a month/day/year date string",
    "isFinal": false,
    "name": "MDY_DAY_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in a month/day/year date string",
    "isFinal": false,
    "name": "MDY_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "3",
    "deprecated": false,
    "description": "The position of the year in a month/day/year date string",
    "isFinal": false,
    "name": "MDY_YEAR_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the day in a month/year date string",
    "isFinal": false,
    "name": "MD_DAY_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in a month/day date string",
    "isFinal": false,
    "name": "MD_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "['January',",
    "deprecated": false,
    "description": "The long month labels for the current locale.",
    "isFinal": false,
    "name": "MONTHS_LONG",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Jan',",
    "deprecated": false,
    "description": "The short month labels for the current locale.",
    "isFinal": false,
    "name": "MONTHS_SHORT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should allow multiple selections. False by default.",
    "isFinal": false,
    "name": "MULTI_SELECT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in the month year label string used as the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "'",
    "deprecated": false,
    "description": "The suffix used after the month when rendering the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_MONTH_SUFFIX",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the year in the month year label string used as the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_YEAR_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "The suffix used after the year when rendering the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_YEAR_SUFFIX",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in a month/year date string",
    "isFinal": false,
    "name": "MY_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the year in a month/year date string",
    "isFinal": false,
    "name": "MY_YEAR_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "True if the LCalendar should show weekday labels. True by default.",
    "isFinal": false,
    "name": "SHOW_WEEKDAYS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should show week row footers. False by default.",
    "isFinal": false,
    "name": "SHOW_WEEK_FOOTER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should show week row headers. False by default.",
    "isFinal": false,
    "name": "SHOW_WEEK_HEADER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "The weekday the week begins on. Default is 0 (Sunday = 0, Monday = 1 ... Saturday = 6).",
    "isFinal": false,
    "name": "START_WEEKDAY",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "number",
    "visibility": "public"
   },
   {
    "defaultValue": "['S',",
    "deprecated": false,
    "description": "The 1-character weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_1CHAR",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Sunday',",
    "deprecated": false,
    "description": "The long weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_LONG",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Sun',",
    "deprecated": false,
    "description": "The medium weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_MEDIUM",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Su',",
    "deprecated": false,
    "description": "The short weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_SHORT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Whether or not a close button should be displayed for this LCalendar",
    "isFinal": false,
    "name": "close",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Whether or not an iframe shim should be placed under the LCalendar to prevent select boxes from bleeding through in Internet Explorer 6 and below.\n This property is enabled by default for IE6 and below. It is disabled by default for other browsers for performance reasons, but can be\n enabled if required.",
    "isFinal": false,
    "name": "iframe",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The maximum selectable date in the current LCalendar (mm/dd/yyyy)",
    "isFinal": false,
    "name": "maxdate",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The minimum selectable date in the current LCalendar (mm/dd/yyyy)",
    "isFinal": false,
    "name": "mindate",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "LConfiguration for the Month/Year LCalendarNavigator UI which allows the user to jump directly to a\n specific Month/Year without having to scroll sequentially through months.\n &amp;lt;p&amp;gt;\n Setting this property to null (default value) or false, will disable the LCalendarNavigator UI.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n Setting this property to true will enable the CalendarNavigatior UI with the default LCalendarNavigator configuration values.\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n This property can also be set to an object literal containing configuration properties for the LCalendarNavigator UI.\n The configuration object expects the the following case-sensitive properties, with the 'strings' property being a nested object.\n Any properties which are not provided will use the default values (defined in the LCalendarNavigator class).\n &amp;lt;/p&amp;gt;\n &amp;lt;dl&amp;gt;\n &amp;lt;dt&amp;gt;strings&amp;lt;/dt&amp;gt;\n &amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;Object&amp;lt;/em&amp;gt; :  An object with the properties shown below, defining the string labels to use in the Navigator's UI\n     &amp;lt;dl&amp;gt;\n         &amp;lt;dt&amp;gt;month&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the month label. Defaults to 'Month'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;year&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the year label. Defaults to 'Year'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;submit&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the submit button label. Defaults to 'Okay'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;cancel&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the cancel button label. Defaults to 'Cancel'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;invalidYear&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for invalid year values. Defaults to 'Year needs to be a number'.&amp;lt;/dd&amp;gt;\n     &amp;lt;/dl&amp;gt;\n &amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;monthFormat&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The month format to use. Either Rui.ui.calendar.LCalendar.LONG, or Rui.ui.calendar.LCalendar.SHORT. Defaults to Rui.ui.calendar.LCalendar.LONG&amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;initialFocus&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : Either 'year' or 'month' specifying which input control should get initial focus. Defaults to 'year'&amp;lt;/dd&amp;gt;\n &amp;lt;/dl&amp;gt;\n &amp;lt;p&amp;gt;E.g.&amp;lt;/p&amp;gt;\n &amp;lt;pre&amp;gt;\n var navConfig = {\n     strings: {\n         month:'LCalendar Month',\n         year:'LCalendar Year',\n         submit: 'Submit',\n         cancel: 'Cancel',\n         invalidYear: 'Please enter a valid year'\n     },\n     monthFormat: Rui.ui.calendar.LCalendar.SHORT,\n     initialFocus: 'month'\n }\n &amp;lt;/pre&amp;gt;",
    "isFinal": false,
    "name": "navigator",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object|Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "today's",
    "deprecated": false,
    "description": "The month/year representing the current visible LCalendar date (mm/yyyy)",
    "isFinal": false,
    "name": "pagedate",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "[]",
    "deprecated": false,
    "description": "The date or range of dates representing the current LCalendar selection",
    "isFinal": false,
    "name": "selected",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "An",
    "deprecated": false,
    "description": "The map of UI strings which the LCalendar UI uses.",
    "isFinal": false,
    "name": "strings",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "The title to display above the LCalendar's month header",
    "isFinal": false,
    "name": "title",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "오늘 날짜를 셋팅한다. (선택된 날짜가 아닙니다.)",
    "isFinal": false,
    "name": "today",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Date",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "달력",
   "name": "Rui.ui.calendar.LCalendar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "[optional] 달력 아이디",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "달력 컨테이너 dom 객체 아이디",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String | HTMLElement"
    },
    {
     "deprecated": false,
     "description": "[optional] config 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "달력",
  "events": [
   {
    "deprecated": false,
    "description": "Fired when the LCalendar page is changed",
    "name": "beforeChangePage",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before a date or set of dates is deselected",
    "name": "beforeDeselect",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendar is to be destroyed",
    "name": "beforeDestroy",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendar is to be hidden",
    "name": "beforeHide",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarNavigator is to be hidden",
    "name": "beforeHideNav",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before the LCalendar is rendered",
    "name": "beforeRender",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarNavigator is to be rendered",
    "name": "beforeRenderNav",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before a date selection is made",
    "name": "beforeSelect",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendar is to be shown",
    "name": "beforeShow",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarNavigator is to be shown",
    "name": "beforeShowNav",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar page is changed",
    "name": "changePage",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is cleared",
    "name": "clear",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is rendered",
    "name": "cursorInEvent",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is rendered",
    "name": "cursorOut",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Fired when a date or set of dates is deselected",
    "name": "deselect",
    "parameters": [{
     "deprecated": false,
     "description": "of Date field arrays in the format [YYYY, MM, LDD].",
     "isFinal": false,
     "name": "array",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendar is destroyed. This event should be used\n for notification only. When this event is fired, important LCalendar instance\n properties, dom references and event listeners have already been\n removed/dereferenced, and hence the LCalendar instance is not in a usable\n state.",
    "name": "destroy",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendar is hidden",
    "name": "hide",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is hidden",
    "name": "hideNav",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is rendered",
    "name": "render",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is rendered",
    "name": "renderCell",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is rendered",
    "name": "renderNav",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is reset",
    "name": "reset",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when a date selection is made",
    "name": "select",
    "parameters": [{
     "deprecated": false,
     "description": "of Date field arrays in the format [YYYY, MM, LDD].",
     "isFinal": false,
     "name": "array",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendar is shown",
    "name": "show",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is shown",
    "name": "showNav",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "생성자 파라미터 파서",
    "name": "_parseArgs",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "'arguments' array",
     "isFinal": false,
     "name": "Function",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnDescription": "Object with id, container, config properties containing",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Adds a month to the render stack. The function reference passed to this method will be executed\n when a date cell matches the month passed to this method.",
    "name": "addMonthRenderer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The month (1-12) to associate with this renderer",
      "isFinal": false,
      "name": "month",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "The function executed to render cells that match the render rules for this renderer.",
      "isFinal": false,
      "name": "fnRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds the designated number of months to the current calendar month, and sets the current\n calendar page date to the new month.",
    "name": "addMonths",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of months to add to the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds a renderer to the render stack. The function reference passed to this method will be executed\n when a date cell matches the conditions specified in the date string for this renderer.",
    "name": "addRenderer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "A date string to associate with the specified renderer. Valid formats",
      "isFinal": false,
      "name": "sDates",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The function executed to render cells that match the render rules for this renderer.",
      "isFinal": false,
      "name": "fnRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds a weekday to the render stack. The function reference passed to this method will be executed\n when a date cell matches the weekday passed to this method.",
    "name": "addWeekdayRenderer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The weekday (Sunday = 1, Monday = 2 ... Saturday = 7) to associate with this renderer",
      "isFinal": false,
      "name": "weekday",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "The function executed to render cells that match the render rules for this renderer.",
      "isFinal": false,
      "name": "fnRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds the designated number of years to the current calendar, and sets the current\n calendar page date to the new month.",
    "name": "addYears",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of years to add to the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Builds the date digit that will be displayed in calendar cells",
    "name": "buildDayLabel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The current working date",
     "isFinal": false,
     "name": "workingDate",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "{String}    The formatted day label",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Builds the date label that will be displayed in the calendar header or\n footer, depending on configuration.",
    "name": "buildMonthLabel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "{String}    The formatted calendar month label",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Clears the selected dates in the current calendar widget and sets the calendar\n to the current month and year.",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes all styles from all body cells in the current calendar table.",
    "name": "clearAllBodyCellStyles",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The CSS class name to remove from all calendar body cells",
     "isFinal": false,
     "name": "style",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "style"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Clears the inner HTML, CSS class and style information from the specified cell.",
    "name": "clearElement",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The cell to clear",
     "isFinal": false,
     "name": "cell",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLTableCellElement"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "locale 파라미터 사용시 수행하는 메소드",
    "name": "configLocale",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "locale 길이에 따라 수행하는 메소드",
    "name": "configLocaleValues",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "maxdate 파라미터 사용시 수행하는 메소드",
    "name": "configMaxDate",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mindate 파라미터 사용시 수행하는 메소드",
    "name": "configMinDate",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "navigator 파라미터 사용시 수행하는 메소드",
    "name": "configNavigator",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "options 파라미터 사용시 수행하는 메소드",
    "name": "configOptions",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "pagedate 파라미터 사용시 수행하는 메소드",
    "name": "configPageDate",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "selected 파라미터 사용시 수행하는 메소드",
    "name": "configSelected",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "strings 파라미터 사용시 수행하는 메소드",
    "name": "configStrings",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Creates the close button HTML element and adds it to LCalendar container DIV",
    "name": "createCloseButton",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Creates the title bar element and adds it to LCalendar container DIV",
    "name": "createTitleBar",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The title to display in the title bar",
     "isFinal": false,
     "name": "strTitle",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Deselects a date or a collection of dates on the current calendar. This method, by default,\n does not call the render method explicitly. Once deselection has completed, render must be\n called for the changes to be reflected visually.\n\n The method will not attempt to deselect any dates which are OOB (out of bounds, and hence not selectable)\n and the array of deselected dates passed to the deselectEvent will not contain any OOB dates.\n\n If all dates are OOB, beforeDeselect and deselect events will not be fired.",
    "name": "deselect",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The date string of dates to deselect in the current calendar. Valid formats are",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String/Date/Date[]"
    }],
    "returnDescription": "{Date[]}            Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Deselects all dates on the current calendar.",
    "name": "deselectAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Deselects a date on the current calendar by referencing the index of the cell that should be deselected.\n This method is used to easily deselect a single cell (usually with a mouse click) without having to do\n a full render. The selected style is removed from the cell directly.\n\n If the cell is not marked with the CSS_CELL_SELECTABLE class (as is the case by default for out of month\n or out of bounds cells), the method will not attempt to deselect it and in such a case, beforeDeselect and\n deselect events will not be fired.",
    "name": "deselectCell",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The index of the cell to deselect in the current calendar.",
     "isFinal": false,
     "name": "cellIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "{Date[]}    Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Destroys the LCalendar instance. The method will remove references\n to HTML elements, remove any event listeners added by the LCalendar,\n and destroy the Config and LCalendarNavigator instances it has created.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell의 mouseout 메소드",
    "name": "doCellMouseOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar passed by the Event utility",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell의 mouseover 메소드",
    "name": "doCellMouseOver",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar passed by the Event utility",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "다음월로 이동하는 메소드",
    "name": "doNextMonthNav",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The DOM event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "다음년으로 이동하는 메소드",
    "name": "doNextYearNav",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The DOM event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "전월로 이동하는 메소드",
    "name": "doPreviousMonthNav",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The DOM event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "전년으로 이동하는 메소드",
    "name": "doPreviousYearNav",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The DOM event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "날짜 선택 메소드",
    "name": "doSelectCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The DOM event",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "DOMEvent"
     },
     {
      "deprecated": false,
      "description": "A reference to the calendar",
      "isFinal": false,
      "name": "cal",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.calendar.LCalendar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Find the LCalendar's cell index for a given date.\n If the date is not found, the method returns -1.\n &amp;lt;p&amp;gt;\n The returned index can be used to lookup the cell HTMLElement\n using the LCalendar's cells array or passed to selectCell to select\n cells by index.\n &amp;lt;/p&amp;gt;\n\n See &amp;lt;a href=\"#cells\"&amp;gt;cells&amp;lt;/a&amp;gt;, &amp;lt;a href=\"#selectCell\"&amp;gt;selectCell&amp;lt;/a&amp;gt;.",
    "name": "getCellIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "JavaScript Date object, for which to find a cell index.",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "The index of the date in Calendars cellDates/cells arrays, or -1 if the date",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Retrieves the Date object for the specified LCalendar cell",
    "name": "getDateByCellId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The id of the cell",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "The Date object for the specified LCalendar cell",
    "returnType": "Date",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Retrieves the Date object for the specified LCalendar cell",
    "name": "getDateFieldsByCellId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The id of the cell",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "The array of Date fields for the specified LCalendar cell",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "사용자가 직접 .cfg.setProperty 를 호출하지 않도록 사용성을 위해 wrapping",
    "name": "getProperty",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Gets the list of currently selected dates from the calendar.",
    "name": "getSelectedDates",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "An array of currently selected JavaScript Date objects.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Hides the LCalendar's outer container from view.",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "styles을 초기화하는 메소드",
    "name": "initStyles",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Navigates to the next month page in the calendar widget.",
    "name": "nextMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the next year in the currently selected month in the calendar widget.",
    "name": "nextYear",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the previous month page in the calendar widget.",
    "name": "previousMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the previous year in the currently selected month in the calendar widget.",
    "name": "previousYear",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes the close button HTML element from the DOM",
    "name": "removeCloseButton",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes all custom renderers added to the LCalendar through the addRenderer, addMonthRenderer and\n addWeekdayRenderer methods. LCalendar's render method needs to be called after removing renderers\n to re-render the LCalendar without custom renderers applied.",
    "name": "removeRenderers",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes the title bar element from the DOM",
    "name": "removeTitleBar",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the calendar after it has been configured. The render() method has a specific call chain that will execute\n when the method is called: renderHeader, renderBody, renderFooter.\n Refer to the documentation for those methods for information on\n individual render tasks.",
    "name": "render",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Resets the calendar widget to the originally selected month and year, and\n sets the calendar to the initial selection(s).",
    "name": "reset",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Resets the render stack of the current calendar to its original pre-render value.",
    "name": "resetRenderers",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Selects a date or a collection of dates on the current calendar. This method, by default,\n does not call the render method explicitly. Once selection has completed, render must be\n called for the changes to be reflected visually.\n\n Any dates which are OOB (out of bounds, not selectable) will not be selected and the array of\n selected dates passed to the selectEvent will not contain OOB dates.\n\n If all dates are OOB, the no state change will occur; beforeSelect and select events will not be fired.",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The date string of dates to select in the current calendar. Valid formats are",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String/Date/Date[]"
     },
     {
      "deprecated": false,
      "description": "event를 발생시킬지 여부, 기본값 true, 단순히 값만 변경할 경우 false 설정.",
      "isFinal": false,
      "name": "fireEvent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "bool"
     }
    ],
    "returnDescription": "{Date[]}            Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Selects a date on the current calendar by referencing the index of the cell that should be selected.\n This method is used to easily select a single cell (usually with a mouse click) without having to do\n a full render. The selected style is applied to the cell directly.\n\n If the cell is not marked with the CSS_CELL_SELECTABLE class (as is the case by default for out of month\n or out of bounds cells), it will not be selected and in such a case beforeSelect and select events will not be fired.",
    "name": "selectCell",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The index of the cell to select in the current calendar.",
     "isFinal": false,
     "name": "cellIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "{Date[]}    Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the calendar's month explicitly",
    "name": "setMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The numeric month, from 0 (January) to 11 (December)",
     "isFinal": false,
     "name": "month",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "사용자가 직접 .cfg.setProperty 를 호출하지 않도록 사용성을 위해 wrapping",
    "name": "setProperty",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the calendar's year explicitly.",
    "name": "setYear",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The numeric 4-digit year",
     "isFinal": false,
     "name": "year",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Shows the LCalendar's outer container.",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Subtracts the designated number of months from the current calendar month, and sets the current\n calendar page date to the new month.",
    "name": "subtractMonths",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of months to subtract from the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Subtcats the designated number of years from the current calendar, and sets the current\n calendar page date to the new month.",
    "name": "subtractYears",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of years to subtract from the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Converts a date field array [yyyy,mm,dd] to a JavaScript Date object. The date field array\n is the format in which dates are as provided as arguments to selectEvent and deselectEvent listeners.",
    "name": "toDate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The date field array to convert to a JavaScript Date.",
     "isFinal": false,
     "name": "dateFieldArray",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number[]"
    }],
    "returnDescription": "{Date}  JavaScript Date object representing the date field array.",
    "returnType": "Date",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representation of the object.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "A string representation of the LCalendar object.",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Validates the calendar widget. This method has no default implementation\n and must be extended by subclassing the widget.",
    "name": "validate",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_calendar",
  "propertys": [
   {
    "deprecated": false,
    "description": "Type constant used for renderers to represent an individual date (M/D/Y)",
    "isFinal": true,
    "name": "DATE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Constant that represents the total number of date cells that are displayed in a given month",
    "isFinal": true,
    "name": "DISPLAY_DAYS",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "The path to be used for images loaded for the LCalendar",
    "isFinal": false,
    "name": "IMG_ROOT",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Constant used to represent long date field string formats (e.g. Monday or February)",
    "isFinal": true,
    "name": "LONG",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The local object which contains the LCalendar's locale settings",
    "isFinal": false,
    "name": "Locale",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Constant used to represent medium date field string formats (e.g. Mon)",
    "isFinal": true,
    "name": "MEDIUM",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Type constant used for renderers to represent a month across any year",
    "isFinal": true,
    "name": "MONTH",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Type constant used for renderers to represent an individual date across any year (M/D)",
    "isFinal": true,
    "name": "MONTH_DAY",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Constant used to represent single character date field string formats (e.g. M, T, W)",
    "isFinal": true,
    "name": "ONE_CHAR",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The local object which contains the LCalendar's options",
    "isFinal": false,
    "name": "Options",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Type constant used for renderers to represent a range of individual dates (M/D/Y-M/D/Y)",
    "isFinal": true,
    "name": "RANGE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Constant used to represent short date field string formats (e.g. Tu or Feb)",
    "isFinal": true,
    "name": "SHORT",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Constant used for halting the execution of the remainder of the render stack",
    "isFinal": true,
    "name": "STOP_RENDER",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Type constant used for renderers to represent a weekday",
    "isFinal": true,
    "name": "WEEKDAY",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": true,
    "description": "Returns a string representing the current browser.\n @deprecated As of 2.3.0, environment information is available in Rui.browser\n @see Rui.browser",
    "isFinal": false,
    "name": "browser",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The Config object used to hold the configuration variables for the LCalendar",
    "isFinal": false,
    "name": "cfg",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.LConfig",
    "visibility": "protected"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.calendar.LCalendar",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "','",
    "deprecated": false,
    "description": "The value used to delimit individual dates in a date string passed to various LCalendar functions.",
    "isFinal": false,
    "name": "DATE_DELIMITER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'/'",
    "deprecated": false,
    "description": "The value used to delimit date fields in a date string passed to various LCalendar functions.",
    "isFinal": false,
    "name": "DATE_FIELD_DELIMITER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'-'",
    "deprecated": false,
    "description": "The value used to delimit date ranges in a date string passed to various LCalendar functions.",
    "isFinal": false,
    "name": "DATE_RANGE_DELIMITER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should suppress weeks that are not a part of the current month. False by default.",
    "isFinal": false,
    "name": "HIDE_BLANK_WEEKS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'long'",
    "deprecated": false,
    "description": "The setting that determines which length of month labels should be used. Possible values are 'short' and 'long'.",
    "isFinal": false,
    "name": "LOCALE_MONTHS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'short'",
    "deprecated": false,
    "description": "The setting that determines which length of weekday labels should be used. Possible values are '1char', 'short', 'medium', and 'long'.",
    "isFinal": false,
    "name": "LOCALE_WEEKDAYS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the day in a month/day/year date string",
    "isFinal": false,
    "name": "MDY_DAY_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in a month/day/year date string",
    "isFinal": false,
    "name": "MDY_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "3",
    "deprecated": false,
    "description": "The position of the year in a month/day/year date string",
    "isFinal": false,
    "name": "MDY_YEAR_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the day in a month/year date string",
    "isFinal": false,
    "name": "MD_DAY_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in a month/day date string",
    "isFinal": false,
    "name": "MD_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "['January',",
    "deprecated": false,
    "description": "The long month labels for the current locale.",
    "isFinal": false,
    "name": "MONTHS_LONG",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Jan',",
    "deprecated": false,
    "description": "The short month labels for the current locale.",
    "isFinal": false,
    "name": "MONTHS_SHORT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should allow multiple selections. False by default.",
    "isFinal": false,
    "name": "MULTI_SELECT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in the month year label string used as the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "'",
    "deprecated": false,
    "description": "The suffix used after the month when rendering the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_MONTH_SUFFIX",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the year in the month year label string used as the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_YEAR_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "The suffix used after the year when rendering the LCalendar header",
    "isFinal": false,
    "name": "MY_LABEL_YEAR_SUFFIX",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "The position of the month in a month/year date string",
    "isFinal": false,
    "name": "MY_MONTH_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The position of the year in a month/year date string",
    "isFinal": false,
    "name": "MY_YEAR_POSITION",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "LConfiguration for the Month Year Navigation UI. By default it is disabled",
    "isFinal": false,
    "name": "NAV",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": true,
    "description": "The image that should be used for the left navigation arrow.",
    "isFinal": false,
    "name": "NAV_ARROW_LEFT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": true,
    "description": "The image that should be used for the right navigation arrow.",
    "isFinal": false,
    "name": "NAV_ARROW_RIGHT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "True if the LCalendar should show weekday labels. True by default.",
    "isFinal": false,
    "name": "SHOW_WEEKDAYS",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should show week row footers. False by default.",
    "isFinal": false,
    "name": "SHOW_WEEK_FOOTER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "True if the LCalendar should show week row headers. False by default.",
    "isFinal": false,
    "name": "SHOW_WEEK_HEADER",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "The weekday the week begins on. Default is 0 (Sunday).",
    "isFinal": false,
    "name": "START_WEEKDAY",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "number",
    "visibility": "public"
   },
   {
    "defaultValue": "['S',",
    "deprecated": false,
    "description": "The 1-character weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_1CHAR",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Sunday',",
    "deprecated": false,
    "description": "The long weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_LONG",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Sun',",
    "deprecated": false,
    "description": "The medium weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_MEDIUM",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "['Su',",
    "deprecated": false,
    "description": "The short weekday labels for the current locale.",
    "isFinal": false,
    "name": "WEEKDAYS_SHORT",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String[]",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Whether or not a close button should be displayed for this LCalendarGroup",
    "isFinal": false,
    "name": "close",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Whether or not an iframe shim should be placed under the LCalendar to prevent select boxes from bleeding through in Internet Explorer 6 and below.\n This property is enabled by default for IE6 and below. It is disabled by default for other browsers for performance reasons, but can be\n enabled if required.",
    "isFinal": false,
    "name": "iframe",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The maximum selectable date in the current LCalendar (mm/dd/yyyy)",
    "isFinal": false,
    "name": "maxdate",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The minimum selectable date in the current LCalendar (mm/dd/yyyy)",
    "isFinal": false,
    "name": "mindate",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "today's",
    "deprecated": false,
    "description": "The month/year representing the current visible LCalendar date (mm/yyyy)",
    "isFinal": false,
    "name": "pagedate",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "The number of pages to include in the LCalendarGroup. This value can only be set once, in the LCalendarGroup's constructor arguments.",
    "isFinal": false,
    "name": "pages",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "[]",
    "deprecated": false,
    "description": "The date or range of dates representing the current LCalendar selection",
    "isFinal": false,
    "name": "selected",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "An",
    "deprecated": false,
    "description": "The map of UI strings which the LCalendarGroup UI uses.",
    "isFinal": false,
    "name": "strings",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "The title to display above the LCalendarGroup's month header",
    "isFinal": false,
    "name": "title",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "new",
    "deprecated": false,
    "description": "페이지의 연월과 무관하게 오늘 날짜를 가리키는 값",
    "isFinal": false,
    "name": "today",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Date",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "Rui.ui.calendar.LCalendarGroup is a special container class for Rui.ui.calendar.LCalendar. This class facilitates\n the ability to have multi-page calendar views that share a single dataset and are\n dependent on each other.\n\n The calendar group instance will refer to each of its elements using a 0-based index.\n For example, to construct the placeholder for a calendar group widget with id 'cal1' and\n containerId of 'cal1Container', the markup would be as follows:\n    &amp;lt;xmp&amp;gt;\n        &amp;lt;div id='cal1Container_0'&amp;gt;&amp;lt;/div&amp;gt;\n        &amp;lt;div id='cal1Container_1'&amp;gt;&amp;lt;/div&amp;gt;\n    &amp;lt;/xmp&amp;gt;\n The tables for the calendars ('cal1_0' and 'cal1_1') will be inserted into those containers.\n\n &amp;lt;p&amp;gt;\n &amp;lt;strong&amp;gt;NOTE: As of 2.4.0, the constructor's ID argument is optional.&amp;lt;/strong&amp;gt;\n The LCalendarGroup can be constructed by simply providing a container ID string,\n or a reference to a container DIV HTMLElement (the element needs to exist\n in the document).\n\n E.g.:\n    &amp;lt;xmp&amp;gt;\n        var c = new Rui.ui.calendar.LCalendarGroup('calContainer', configOptions);\n    &amp;lt;/xmp&amp;gt;\n or:\n   &amp;lt;xmp&amp;gt;\n       var containerDiv = Rui.util.LDom.get('calContainer');\n        var c = new Rui.ui.calendar.LCalendarGroup(containerDiv, configOptions);\n    &amp;lt;/xmp&amp;gt;\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n If not provided, the ID will be generated from the container DIV ID by adding an '_t' suffix.\n For example if an ID is not provided, and the container's ID is 'calContainer', the LCalendarGroup's ID will be set to 'calContainer_t'.\n &amp;lt;/p&amp;gt;",
   "name": "Rui.ui.calendar.LCalendarGroup",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "optional The id of the table element that will represent the LCalendarGroup widget. As of 2.4.0, this argument is optional.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "The id of the container div element that will wrap the LCalendarGroup table, or a reference to a DIV element which exists in the document.",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String | HTMLElement"
    },
    {
     "deprecated": false,
     "description": "optional The configuration object containing the initial configuration values for the LCalendarGroup.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Rui.ui.calendar.LCalendarGroup is a special container class for Rui.ui.calendar.LCalendar. This class facilitates\n the ability to have multi-page calendar views that share a single dataset and are\n dependent on each other.\n\n The calendar group instance will refer to each of its elements using a 0-based index.\n For example, to construct the placeholder for a calendar group widget with id 'cal1' and\n containerId of 'cal1Container', the markup would be as follows:\n    &amp;lt;xmp&amp;gt;\n        &amp;lt;div id='cal1Container_0'&amp;gt;&amp;lt;/div&amp;gt;\n        &amp;lt;div id='cal1Container_1'&amp;gt;&amp;lt;/div&amp;gt;\n    &amp;lt;/xmp&amp;gt;\n The tables for the calendars ('cal1_0' and 'cal1_1') will be inserted into those containers.\n\n &amp;lt;p&amp;gt;\n &amp;lt;strong&amp;gt;NOTE: As of 2.4.0, the constructor's ID argument is optional.&amp;lt;/strong&amp;gt;\n The LCalendarGroup can be constructed by simply providing a container ID string,\n or a reference to a container DIV HTMLElement (the element needs to exist\n in the document).\n\n E.g.:\n    &amp;lt;xmp&amp;gt;\n        var c = new Rui.ui.calendar.LCalendarGroup('calContainer', configOptions);\n    &amp;lt;/xmp&amp;gt;\n or:\n   &amp;lt;xmp&amp;gt;\n       var containerDiv = Rui.util.LDom.get('calContainer');\n        var c = new Rui.ui.calendar.LCalendarGroup(containerDiv, configOptions);\n    &amp;lt;/xmp&amp;gt;\n &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;\n If not provided, the ID will be generated from the container DIV ID by adding an '_t' suffix.\n For example if an ID is not provided, and the container's ID is 'calContainer', the LCalendarGroup's ID will be set to 'calContainer_t'.\n &amp;lt;/p&amp;gt;",
  "events": [
   {
    "deprecated": false,
    "description": "Fired when the LCalendar page is changed",
    "name": "beforeChangePage",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before a date or set of dates is deselected",
    "name": "beforeDeselectEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarGroup is to be destroyed",
    "name": "beforeDestroyEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarGroup is to be hidden",
    "name": "beforeHideEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarNavigator is to be hidden",
    "name": "beforeHideNavEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before the LCalendar is rendered",
    "name": "beforeRenderEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarNavigator is to be rendered",
    "name": "beforeRenderNavEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before a date selection is made",
    "name": "beforeSelectEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarGroup is to be shown",
    "name": "beforeShowEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired just before the LCalendarNavigator is to be shown",
    "name": "beforeShowNavEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar page is changed",
    "name": "changePageEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is cleared",
    "name": "clearEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when a date or set of dates has been deselected",
    "name": "deselectEvent",
    "parameters": [{
     "deprecated": false,
     "description": "of Date field arrays in the format [YYYY, MM, LDD].",
     "isFinal": false,
     "name": "Array",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarGroup is destroyed. This event should be used\n for notification only. When this event is fired, important LCalendarGroup instance\n properties, dom references and event listeners have already been\n removed/dereferenced, and hence the LCalendarGroup instance is not in a usable\n state.",
    "name": "destroyEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarGroup is hidden",
    "name": "hideEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is hidden",
    "name": "hideNavEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is rendered",
    "name": "renderEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is rendered",
    "name": "renderNavEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the LCalendar is reset",
    "name": "resetEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when a date selection is made",
    "name": "selectEvent",
    "parameters": [{
     "deprecated": false,
     "description": "of Date field arrays in the format [YYYY, MM, LDD].",
     "isFinal": false,
     "name": "Array",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarGroup is shown",
    "name": "showEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the LCalendarNavigator is shown",
    "name": "showNavEvent",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "Adds a month to the render stack. The function reference passed to this method will be executed\n when a date cell matches the month passed to this method.",
    "name": "addMonthRenderer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The month (1-12) to associate with this renderer",
      "isFinal": false,
      "name": "month",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "The function executed to render cells that match the render rules for this renderer.",
      "isFinal": false,
      "name": "fnRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds the designated number of months to the current calendar month, and sets the current\n calendar page date to the new month.",
    "name": "addMonths",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of months to add to the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds a renderer to the render stack. The function reference passed to this method will be executed\n when a date cell matches the conditions specified in the date string for this renderer.",
    "name": "addRenderer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "A date string to associate with the specified renderer. Valid formats",
      "isFinal": false,
      "name": "sDates",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The function executed to render cells that match the render rules for this renderer.",
      "isFinal": false,
      "name": "fnRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds a weekday to the render stack. The function reference passed to this method will be executed\n when a date cell matches the weekday passed to this method.",
    "name": "addWeekdayRenderer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The weekday (1-7) to associate with this renderer. 1=Sunday, 2=Monday etc.",
      "isFinal": false,
      "name": "weekday",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "The function executed to render cells that match the render rules for this renderer.",
      "isFinal": false,
      "name": "fnRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds the designated number of years to the current calendar, and sets the current\n calendar page date to the new month.",
    "name": "addYears",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of years to add to the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Clears the selected dates in the current calendar widget and sets the calendar\n to the current month and year.",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Deselects a date or a collection of dates on the current calendar. This method, by default,\n does not call the render method explicitly. Once deselection has completed, render must be\n called for the changes to be reflected visually.",
    "name": "deselect",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The date string of dates to deselect in the current calendar. Valid formats are",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String/Date/Date[]"
    }],
    "returnDescription": "{Date[]}            Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Deselects all dates on the current calendar.",
    "name": "deselectAll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Deselects dates in the LCalendarGroup based on the cell index provided. This method is used to select cells without having to do a full render. The selected style is applied to the cells directly.\n deselectCell will deselect the cell at the specified index on each displayed LCalendar page.",
    "name": "deselectCell",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The index of the cell to deselect.",
     "isFinal": false,
     "name": "cellIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "{Date[]}    Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Destroys the LCalendarGroup instance. The method will remove references\n to HTML elements, remove any event listeners added by the LCalendarGroup.\n\n It will also destroy the Config and LCalendarNavigator instances created by the\n LCalendarGroup and the individual LCalendar instances created for each page.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the LCalendar page instance which has a pagedate (month/year) matching the given date.\n Returns null if no match is found.",
    "name": "getCalendarPage",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The JavaScript Date object for which a LCalendar page is to be found.",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date"
    }],
    "returnDescription": "The LCalendar page instance representing the month to which the date",
    "returnType": "LCalendar",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the next month page in the calendar widget.",
    "name": "nextMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the next year in the currently selected month in the calendar widget.",
    "name": "nextYear",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the previous month page in the calendar widget.",
    "name": "previousMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Navigates to the previous year in the currently selected month in the calendar widget.",
    "name": "previousYear",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Calls the render function of all child calendars within the group.",
    "name": "render",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Renders a footer for the 2-up calendar container. By default, this method is\n unimplemented.",
    "name": "renderFooter",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the header for the LCalendarGroup.",
    "name": "renderHeader",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Resets the calendar widget to the originally selected month and year, and\n sets the calendar to the initial selection(s).",
    "name": "reset",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Selects a date or a collection of dates on the current calendar. This method, by default,\n does not call the render method explicitly. Once selection has completed, render must be\n called for the changes to be reflected visually.",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The date string of dates to select in the current calendar. Valid formats are",
     "isFinal": false,
     "name": "date",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String/Date/Date[]"
    }],
    "returnDescription": "{Date[]}            Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Selects dates in the LCalendarGroup based on the cell index provided. This method is used to select cells without having to do a full render. The selected style is applied to the cells directly.\n The value of the MULTI_SELECT LConfiguration attribute will determine the set of dates which get selected.\n &amp;lt;ul&amp;gt;\n    &amp;lt;li&amp;gt;If MULTI_SELECT is false, selectCell will select the cell at the specified index for only the last displayed LCalendar page.&amp;lt;/li&amp;gt;\n    &amp;lt;li&amp;gt;If MULTI_SELECT is true, selectCell will select the cell at the specified index, on each displayed LCalendar page.&amp;lt;/li&amp;gt;\n &amp;lt;/ul&amp;gt;",
    "name": "selectCell",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The index of the cell to be selected.",
     "isFinal": false,
     "name": "cellIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "{Date[]}    Array of JavaScript Date objects representing all individual dates that are currently selected.",
    "returnType": "Date[]",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds a function to all child Calendars within this LCalendarGroup.",
    "name": "setChildFunction",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The name of the function",
      "isFinal": false,
      "name": "fnName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "The function to apply to each LCalendar page object",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the calendar group's month explicitly. This month will be set into the first\n page of the multi-page calendar, and all other months will be iterated appropriately.",
    "name": "setMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The numeric month, from 0 (January) to 11 (December)",
     "isFinal": false,
     "name": "month",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "사용자가 직접 .cfg.setProperty 를 호출하지 않도록 사용성을 위해 wrapping",
    "name": "setProperty",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the calendar group's year explicitly. This year will be set into the first\n page of the multi-page calendar, and all other months will be iterated appropriately.",
    "name": "setYear",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The numeric 4-digit year",
     "isFinal": false,
     "name": "year",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Subtracts the designated number of months from the current calendar month, and sets the current\n calendar page date to the new month.",
    "name": "subtractMonths",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of months to subtract from the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Subtcats the designated number of years from the current calendar, and sets the current\n calendar page date to the new month.",
    "name": "subtractYears",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The number of years to subtract from the current calendar",
     "isFinal": false,
     "name": "count",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representation of the object.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "A string representation of the LCalendarGroup object.",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_calendar",
  "propertys": [
   {
    "deprecated": true,
    "description": "CSS class representing the close icon for the 2-up calendar",
    "isFinal": true,
    "name": "CSS_2UPCLOSE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS class representing the title for the 2-up calendar",
    "isFinal": true,
    "name": "CSS_2UPTITLE",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS class representing the container for the calendar",
    "isFinal": true,
    "name": "CSS_CONTAINER",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CSS class representing the container for the calendar",
    "isFinal": true,
    "name": "CSS_MULTI_UP",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The local object which contains the LCalendarGroup's locale settings",
    "isFinal": false,
    "name": "Locale",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The local object which contains the LCalendarGroup's options",
    "isFinal": false,
    "name": "Options",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The Config object used to hold the configuration variables for the LCalendarGroup",
    "isFinal": false,
    "name": "cfg",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.LConfig",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The unique id associated with the LCalendarGroup container",
    "isFinal": false,
    "name": "containerId",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The unique id associated with the LCalendarGroup",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The collection of LCalendar pages contained within the LCalendarGroup",
    "isFinal": false,
    "name": "pages",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.calendar.LCalendar[]",
    "visibility": "protected"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.calendar.LCalendarGroup",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "The LCalendarNavigator is used along with a LCalendar/LCalendarGroup to\n provide a Month/Year popup navigation control, allowing the user to navigate\n to a specific month/year in the LCalendar/LCalendarGroup without having to\n scroll through months sequentially",
   "name": "Rui.ui.calendar.LCalendarNavigator",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The instance of the LCalendar or LCalendarGroup to which this LCalendarNavigator should be attached.",
    "isFinal": false,
    "name": "cal",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "LCalendar|LCalendarGroup"
   }],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "The LCalendarNavigator is used along with a LCalendar/LCalendarGroup to\n provide a Month/Year popup navigation control, allowing the user to navigate\n to a specific month/year in the LCalendar/LCalendarGroup without having to\n scroll through months sequentially",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Returns the month value (index), from the month UI element",
    "name": "_getMonthFromUI",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The month index, or 0 if a UI element for the month",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Returns the year value, from the Navitator's year UI element",
    "name": "_getYearFromUI",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The year value set in the UI, if valid. null is returned if",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Default Keyboard event handler to capture up/down/pgup/pgdown\n on the Navigator's year control (yearEl).",
    "name": "_handleDirectionKeys",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The DOM event being handled",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Default Keyboard event handler to capture Enter\n on the Navigator's year control (yearEl)",
    "name": "_handleEnterKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The DOM event being handled",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Default Keyboard event handler to capture Shift-Tab\n on the first control (firstCtrl) in the Navigator.",
    "name": "_handleShiftTabKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The DOM event being handled",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Default Keyboard event handler to capture Tab\n on the last control (lastCtrl) in the Navigator.",
    "name": "_handleTabKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The DOM event being handled",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets up references to the first and last focusable element in the Navigator's UI\n in terms of tab order (Naviagator's firstEl and lastEl properties). The references\n are used to control modality by looping around from the first to the last control\n and visa versa for tab/shift-tab navigation.\n &amp;lt;p&amp;gt;\n See &amp;lt;a href=\"#applyKeyListeners\"&amp;gt;applyKeyListeners&amp;lt;/a&amp;gt;\n &amp;lt;/p&amp;gt;",
    "name": "_setFirstLastElements",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Protected implementation to handle how UI elements are\n hidden/shown.",
    "name": "_show",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Used to set the width/height of the mask in pixels to match the LCalendar Container.\n Currently only used for IE6 or IE in quirks mode. The other A-Grade browser are handled using CSS (width/height 100%).\n &amp;lt;p&amp;gt;\n The method is also registered as an HTMLElement resize listener on the Calendars container element.\n &amp;lt;/p&amp;gt;",
    "name": "_syncMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Updates the LCalendar rendered state, based on the state of the LCalendarNavigator",
    "name": "_update",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Updates the Navigator's month UI, based on the month value set on the Navigator object",
    "name": "_updateMonthUI",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Updates the Navigator's year UI, based on the year value set on the Navigator object",
    "name": "_updateYearUI",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Attaches DOM listeners for keyboard support.\n Tab/Shift-Tab looping, Enter Key Submit on Year element,\n Up/Down/PgUp/PgDown year increment on Year element\n &amp;lt;p&amp;gt;\n NOTE: MacOSX Safari 2.x doesn't let you tab to buttons and\n MacOSX Gecko does not let you tab to buttons or select controls,\n so for these browsers, Tab/Shift-Tab looping is limited to the\n elements which can be reached using the tab key.\n &amp;lt;/p&amp;gt;",
    "name": "applyKeyListeners",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Attaches DOM event listeners to the rendered elements\n &amp;lt;p&amp;gt;\n The method will call applyKeyListeners, to setup keyboard specific\n listeners\n &amp;lt;/p&amp;gt;",
    "name": "applyListeners",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Hides the navigator and mask, without updating the LCalendar/LCalendarGroup's state",
    "name": "cancel",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Clears the navigator's error message and hides the error panel",
    "name": "clearError",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Clears all validation and error messages in the UI",
    "name": "clearErrors",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes the validation error UI for the year control",
    "name": "clearYearError",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Creates the Mask HTMLElement and appends it to the LCalendar/CalendarGroups\n container.",
    "name": "createMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Creates the navigator's containing HTMLElement, it's contents, and appends\n the containg element to the LCalendar/LCalendarGroup's container.",
    "name": "createNav",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Destroys the Navigator object and any HTML references",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes all renderered HTML elements for the Navigator from\n the DOM, purges event listeners and clears (nulls) any property\n references to HTML references",
    "name": "erase",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the current month set on the navigator\n Note: This may not be the month set in the UI, if\n the UI contains an invalid value.",
    "name": "getMonth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The Navigator's current month index",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Returns the current year set on the navigator\n\n Note: This may not be the year set in the UI, if\n the UI contains an invalid value.",
    "name": "getYear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The Navigator's current year value",
    "returnType": "Number",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Hides the navigator and mask\n The show method will fire the LCalendar/LCalendarGroup's beforeHideNav event and hideNav events",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Hides the navigator's mask element",
    "name": "hideMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Init lifecycle method called as part of construction",
    "name": "init",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The instance of the LCalendar or LCalendarGroup to which this LCalendarNavigator should be attached",
     "isFinal": false,
     "name": "cal",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "LCalendar"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes/purges DOM listeners for keyboard support",
    "name": "purgeKeyListeners",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes/purges DOM event listeners from the rendered elements",
    "name": "purgeListeners",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the HTML for the navigator, adding it to the\n document and attaches event listeners if it has not\n already been rendered.",
    "name": "render",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Renders the submit/cancel buttons for the navigator",
    "name": "renderButton",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The HTML created for the LButton UI",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the month label and control for the navigator",
    "name": "renderMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The HTML buffer to append the HTML to.",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnDescription": "A reference to the buffer passed in.",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the contents of the navigator",
    "name": "renderNavContents",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The HTML buffer to append the HTML to.",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnDescription": "A reference to the buffer passed in.",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Renders the year label and control for the navigator",
    "name": "renderYear",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The HTML buffer to append the HTML to.",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnDescription": "A reference to the buffer passed in.",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Displays an error message in the Navigator's error panel",
    "name": "setError",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The error message to display",
     "isFinal": false,
     "name": "msg",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the initial focus, based on the configured value",
    "name": "setInitialFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the current month on the Navigator, and updates the UI",
    "name": "setMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The month index, from 0 (Jan) through 11 (Dec).",
     "isFinal": false,
     "name": "nMonth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Sets the current year on the Navigator, and updates the UI. If the\n provided year is invalid, it will not be set.",
    "name": "setYear",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The full year value to set the Navigator to.",
     "isFinal": false,
     "name": "nYear",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Displays the validation error UI for the year control",
    "name": "setYearError",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Displays the navigator and mask, updating the input controls to reflect the\n currently set month and year. The show method will invoke the render method\n if the navigator has not been renderered already, allowing for lazy rendering\n of the control.\n\n The show method will fire the LCalendar/LCalendarGroup's beforeShowNav and showNav events",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Displays the navigator's mask element",
    "name": "showMask",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Updates the LCalendar/LCalendarGroup's pagedate with the currently set month and year if valid.\n &amp;lt;p&amp;gt;\n If the currently set month/year is invalid, a validation error will be displayed and the\n LCalendar/LCalendarGroup's pagedate will not be updated.\n &amp;lt;/p&amp;gt;",
    "name": "submit",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Validates the current state of the UI controls",
    "name": "validate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "true, if the current UI state contains valid values, false if not",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_calendar",
  "propertys": [
   {
    "deprecated": false,
    "description": "The suffix added to the Navigator's ID, to generate\n a unique ID for the 'Cancel' button.",
    "isFinal": true,
    "name": "CANCEL_SUFFIX",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The suffix added to the Navigator's ID, to generate\n a unique ID for the error bounding box.",
    "isFinal": true,
    "name": "ERROR_SUFFIX",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The suffix added to the LCalendar/LCalendarGroup's ID, to generate\n a unique ID for the Navigator and it's bounding box.",
    "isFinal": true,
    "name": "ID_SUFFIX",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The suffix added to the Navigator's ID, to generate\n a unique ID for the month control.",
    "isFinal": true,
    "name": "MONTH_SUFFIX",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The suffix added to the Navigator's ID, to generate\n a unique ID for the 'Submit' button.",
    "isFinal": true,
    "name": "SUBMIT_SUFFIX",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Regular expression used to trim strings",
    "isFinal": false,
    "name": "TRIM",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "RegExp",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Artificial delay (in ms) between the time the Navigator is hidden\n and the LCalendar/LCalendarGroup state is updated. Allows the user\n the see the LCalendar/LCalendarGroup page changing. If set to 0\n the LCalendar/LCalendarGroup page will be updated instantly",
    "isFinal": false,
    "name": "UPDATE_DELAY",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The suffix added to the Navigator's ID, to generate\n a unique ID for the year control.",
    "isFinal": true,
    "name": "YEAR_SUFFIX",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The amount by which to increment the current year value,\n when the page up/down key is pressed on the year control",
    "isFinal": false,
    "name": "YR_MAJOR_INC",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The number of digits to which the year input control is to be limited.",
    "isFinal": false,
    "name": "YR_MAX_DIGITS",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The amount by which to increment the current year value,\n when the arrow up/down key is pressed on the year control",
    "isFinal": false,
    "name": "YR_MINOR_INC",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Regular expression used to validate the year input",
    "isFinal": false,
    "name": "YR_PATTERN",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "RegExp",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object literal containing the default configuration values for the LCalendarNavigator\n The configuration object is expected to follow the format below, with the properties being\n case sensitive.\n &amp;lt;dl&amp;gt;\n &amp;lt;dt&amp;gt;strings&amp;lt;/dt&amp;gt;\n &amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;Object&amp;lt;/em&amp;gt; :  An object with the properties shown below, defining the string labels to use in the Navigator's UI\n     &amp;lt;dl&amp;gt;\n         &amp;lt;dt&amp;gt;month&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the month label. Defaults to 'Month'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;year&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the year label. Defaults to 'Year'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;submit&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the submit button label. Defaults to 'Okay'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;cancel&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for the cancel button label. Defaults to 'Cancel'.&amp;lt;/dd&amp;gt;\n         &amp;lt;dt&amp;gt;invalidYear&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The string to use for invalid year values. Defaults to 'Year needs to be a number'.&amp;lt;/dd&amp;gt;\n     &amp;lt;/dl&amp;gt;\n &amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;monthFormat&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : The month format to use. Either Rui.ui.calendar.LCalendar.LONG, or Rui.ui.calendar.LCalendar.SHORT. Defaults to Rui.ui.calendar.LCalendar.LONG&amp;lt;/dd&amp;gt;\n &amp;lt;dt&amp;gt;initialFocus&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;&amp;lt;em&amp;gt;String&amp;lt;/em&amp;gt; : Either 'year' or 'month' specifying which input control should get initial focus. Defaults to 'year'&amp;lt;/dd&amp;gt;\n &amp;lt;/dl&amp;gt;",
    "isFinal": false,
    "name": "_DEFAULT_CFG",
    "parameterType": "PROPERTIES",
    "scope": "static",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The document containing the LCalendar/LCalendar group instance\n @protected",
    "isFinal": false,
    "name": "_doc",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLDocument",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Internal state property for the current month index displayed in the navigator\n @protected",
    "isFinal": false,
    "name": "_month",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Number",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Internal state property for the current year displayed in the navigator\n @protected",
    "isFinal": false,
    "name": "_year",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Number",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "The LCalendar/LCalendarGroup instance to which the navigator belongs",
    "isFinal": false,
    "name": "cal",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "LCalendar|LCalendarGroup",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to hide the navigator without updating the\n LCalendar/LCalendar group",
    "isFinal": false,
    "name": "cancelEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to display validation errors",
    "isFinal": false,
    "name": "errorEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the first focusable control in the navigator (by default monthEl)",
    "isFinal": false,
    "name": "firstCtrl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The unique ID for this LCalendarNavigator instance",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the last focusable control in the navigator (by default cancelEl)",
    "isFinal": false,
    "name": "lastCtrl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to render the navigator's mask",
    "isFinal": false,
    "name": "maskEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to input the month",
    "isFinal": false,
    "name": "monthEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to render the navigator's bounding box",
    "isFinal": false,
    "name": "navEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to update the LCalendar/LCalendar group\n with the month/year values",
    "isFinal": false,
    "name": "submitEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Reference to the HTMLElement used to input the year",
    "isFinal": false,
    "name": "yearEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.ui.calendar.LCalendarNavigator",
  "visibility": "private"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Form 내부에서 사용하는 DataSetManager의 config",
    "isFinal": false,
    "name": "dataSetManagerOptions",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Rui.validate.LValidatorManager 객체\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/simpleFormSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "validatorManager",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.validate.LValidatorManager",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LForm",
   "name": "Rui.ui.form.LForm",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LForm.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LForm",
  "events": [
   {
    "deprecated": false,
    "description": "sumbit 실행전 호출되는 이벤트, 이벤트 리턴값이 false면 submit이 호출되지 않는다.",
    "name": "beforesubmit",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "sumbit이 실패하면 발생하는 이벤트",
    "name": "failure",
    "parameters": [{
     "deprecated": false,
     "description": "ajax response 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "XMLHttpRequest"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "invalid가 발생하는 발생하는 이벤트",
    "name": "invalid",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "invalid 객체 List",
      "isFinal": false,
      "name": "invalidList",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Array"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "reset시 발생하는 이벤트",
    "name": "reset",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.ui.form.LForm"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "sumbit이 성공하면 발생하는 이벤트",
    "name": "success",
    "parameters": [{
     "deprecated": false,
     "description": "ajax response 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "XMLHttpRequest"
    }],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "form 객체의 invalid된 모든 객체를 초기화 하는 메소드",
    "name": "clearInvalid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체 destroy",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "배열 객체에 해당되는 모든 객체를 비활성화 한다.",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "enable할 배열 객체, 인수를 안 넘기면 모든 form객체 안의 child 모든 객체 자동 선택",
     "isFinal": false,
     "name": "children",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "배열 객체에 해당되는 모든 객체를 활성화 한다.",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "enable할 배열 객체, 인수를 안 넘기면 모든 form객체 안의 child 모든 객체 자동 선택",
     "isFinal": false,
     "name": "children",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체에 안에 있는 child객체중에 ID에 해당되는 객체를 찾아서 리턴한다.",
    "name": "findField",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "검색할 ID 값",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "검색된 결과 객체",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체에 안에 있는 child객체 배열",
    "name": "getValues",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체의 아이디나 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|Object"
     },
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "배열 객체에 해당되는 모든 객체중 비활성화가 하나라도 있으면 false를 리턴한다.",
    "name": "isDisable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "enable할 배열 객체, 인수를 안 넘기면 모든 form객체 안의 child 모든 객체 자동 선택",
     "isFinal": false,
     "name": "children",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체에 안에 있는 child객체중에 invalid객체가 존재하면 false를 리턴한다.",
    "name": "isValid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "valid 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체의 child 정보를 Record객체에 반영한다.",
    "name": "loadRecord",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "form객체의 정보를 반영할 Record객체",
     "isFinal": false,
     "name": "record",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LRecord"
    }],
    "returnDescription": "반영된 Record객체",
    "returnType": "Rui.data.LRecord",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "reset 메소드",
    "name": "reset",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LValidatorManager 객체를 설정하는 메소드",
    "name": "setValidatorManager",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Rui.validate.LValidatorManager 객체",
     "isFinal": false,
     "name": "validatorManager",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.validate.LValidatorManager"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "form 객체에 안에 있는 child객체에 모든 값 대입",
    "name": "setValues",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "values에 해당되는 모든 객체에 값 대입",
     "isFinal": false,
     "name": "values",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "submit 메소드",
    "name": "submit",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Record객체를 form 객체의 child객체에 반영한다.",
    "name": "updateRecord",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "form객체에 반영할 Record객체",
     "isFinal": false,
     "name": "record",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LRecord"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.form.LForm",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Rich UI에서 메뉴 인터페이스를 콤포넌트로 지원되게 하는 클래스(Beta)",
   "name": "Rui.ui.LActionMenuSupport",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LActionMenuSupport.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Rich UI에서 메뉴 인터페이스를 콤포넌트로 지원되게 하는 클래스(Beta)",
  "events": [],
  "methods": [],
  "module": "ui",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.LActionMenuSupport",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "마우스나 키보드를 적용하는 action 메뉴를 출력한다.",
   "name": "Rui.ui.LActionMenu",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LActionMenu.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "마우스나 키보드를 적용하는 action 메뉴를 출력한다.",
  "events": [],
  "methods": [],
  "module": "ui",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.LActionMenu",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "field 객체의 el에 CSS로 지정된 border size\n 기본값은 1이며 CSS에서 border width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "borderWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "field의 name으로 input, select태그들의 name 속성 값",
    "isFinal": false,
    "name": "name",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LField 객체는 form 입력 객체들을 추상 클래스",
   "name": "Rui.ui.form.LField",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The html element that represents the Element.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "The intial Field.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LField 객체는 form 입력 객체들을 추상 클래스",
  "events": [
   {
    "deprecated": false,
    "description": "changed 메소드가 호출되면 수행하는 이벤트",
    "name": "changed",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "invalid 메소드가 호출되면 수행하는 이벤트",
    "name": "invalid",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "specialkey 메소드가 호출되면 수행하는 이벤트",
    "name": "specialkey",
    "parameters": [{
     "deprecated": false,
     "description": "window event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "valid 메소드가 호출되면 수행하는 이벤트",
    "name": "valid",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "defaultValue 속성에 따른 실제 적용 메소드",
    "name": "_setDefaultValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 속성에 따른 실제 적용 메소드",
    "name": "_setEditable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Field 객체 컨테이너 el의 content height을 반환한다.",
    "name": "getContentHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Field 객체 컨테이너 el의 content width를 반환한다.",
    "name": "getContentWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "이름을 리턴하는 메소드",
    "name": "getName",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 value값을 리턴한다.",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "객체에 들어 있는 값",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 유효하지 않은 상태로 설정하는 메소드",
    "name": "invalid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "editable 값을 셋팅하는 메소드\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "setEditable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "editable 셋팅 값",
     "isFinal": false,
     "name": "isEditable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이름을 셋팅하는 메소드",
    "name": "setName",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이름",
     "isFinal": false,
     "name": "name",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 value값을 저장한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "저장할 결과값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 유효한 상태로 설정하는 메소드",
    "name": "valid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.form.LField",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "자동 완성 기능 사용 여부\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "autoComplete",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "자동 완성 기능을 정보를 가지는 dataSet",
    "isFinal": false,
    "name": "dataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "defaultValue": "'dataSet'",
    "deprecated": false,
    "description": "LTextBox에서 사용하는 DataSet ID",
    "isFinal": false,
    "name": "dataSetId",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "객체에 기본적으로 들어 있을 값을 설정한다.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "defaultValue",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "{",
    "deprecated": false,
    "description": "mask의 형식 정의",
    "isFinal": false,
    "name": "definitions",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'text'",
    "deprecated": false,
    "description": "자동완성기능 구현을 위해 실제의 값(value)과 화면에 출력되는 값(text)이 존재 하는데 그중 화면에 출력되는 값에 해댕하는 필드(Field)명",
    "isFinal": false,
    "name": "displayField",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "input박스에 키 입력이 가능한지 여부, 변경이 불가능한 읽기 전용 속성은 LUIComponent에 있는 disabled로 처리\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "editable",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "Choose",
    "deprecated": false,
    "description": "기본 '선택하세요.' 메시지 값을 설정한다.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "emptyText",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "값이 선택되어 있지 않을 경우 리턴시 값을 '' 공백 문자로 리턴할지 null로 리턴할지를 결정한다. 그리드의 데이터셋이 로딩후 연결된 콤보가 수정되지 않았는데도 수정된걸로 인식되면 null이나 undefined로 정의하여 맞춘다.",
    "isFinal": false,
    "name": "emptyValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "15",
    "deprecated": false,
    "description": "목록이 펼쳐질 경우 출력할 갯수",
    "isFinal": false,
    "name": "expandCount",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "filter시 function을 직접 지정해서 비교하여 처리하는 메소드",
    "isFinal": false,
    "name": "filterFn",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "function",
    "visibility": "public"
   },
   {
    "defaultValue": "'local'",
    "deprecated": false,
    "description": "자동완성기능을 처리할때 키 입력시 이미 로드된 메모리의 데이터로 처리할지 매번 서버에서 load할지를 결정\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "filterMode",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "remote filter시 url값\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "filterUrl",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "데이터 로딩되면 changed 이벤트가 발생할지 여부",
    "isFinal": false,
    "name": "firstChangedEvent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "세로 길이\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "height",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "auto",
    "deprecated": false,
    "description": "ime-mode값",
    "isFinal": false,
    "name": "imeMode",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "입력문자열 형식 지정\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "inputType",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.util.LString.PATTERN_TYPE_NUMBER || Rui.util.LString.PATTERN_TYPE_NUMSTRING || Rui.util.LString.PATTERN_TYPE_STRING || Rui.util.LString.PATTERN_TYPE_KOREAN ",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "invalid focus 여부",
    "isFinal": false,
    "name": "invalidBlur",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'auto'",
    "deprecated": false,
    "description": "list picker의 펼쳐짐 방향 (auto|up|down)",
    "isFinal": false,
    "name": "listPosition",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "List item을 추가로 출력할 수 있게 렌더링 하는 평션",
    "isFinal": false,
    "name": "listRenderer",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "목록창의 가로 길이 (-1일 경우 width의 규칙을 따른다.)\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "listWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "30",
    "deprecated": false,
    "description": "local filter시 delayTime값\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "localDelayTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "키 입력 mask 적용를 적용한다.",
    "isFinal": false,
    "name": "mask",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'_'",
    "deprecated": false,
    "description": "mask가 적용된 값 입력시에 나오는 문자",
    "isFinal": false,
    "name": "maskPlaceholder",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "getValue시 적용된 mask값으로 리턴할지 여부",
    "isFinal": false,
    "name": "maskValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "html5에 있는 placeholder 기능",
    "isFinal": false,
    "name": "placeholder",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "250",
    "deprecated": false,
    "description": "remote filter시 delayTime값\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "remoteDelayTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "데이터 로딩시 combo의 row 위치\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/comboSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "selectedIndex",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Unicode값을 문자로 반환하기 위해 내장함수  String.FromChatCode를 사용할지 결정",
    "isFinal": false,
    "name": "stringFromChatCode",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Unicode값을 문자로 반환하기 위해 내장함수  String.FromChatCode를 사용할지 결정",
    "isFinal": false,
    "name": "stringFromChatCode",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "input type의 종류를 설정한다. text, password, email, url 등.",
    "isFinal": false,
    "name": "type",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "dataSet 사용 여부\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "useDataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "기본 선택 항목 추가 여부\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "useEmptyText",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "100",
    "deprecated": false,
    "description": "가로 길이\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "일반적인 텍스트를 생성하는 LTextBox 편집기",
   "name": "Rui.ui.form.LTextBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTextBox.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "일반적인 텍스트를 생성하는 LTextBox 편집기",
  "events": [
   {
    "deprecated": false,
    "description": "setValue 메소드가 호출되면 수행하는 이벤트",
    "name": "changed",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "code값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "displayValue값",
      "isFinal": false,
      "name": "displayValue",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "collapse 기능이 호출되면 수행하는 이벤트",
    "name": "collapse",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "copy 기능이 호출되면 수행하는 이벤트",
    "name": "copy",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cut 기능이 호출되면 수행하는 이벤트",
    "name": "cut",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "expand 기능이 호출되면 수행하는 이벤트",
    "name": "expand",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "keydown 기능이 호출되면 수행하는 이벤트",
    "name": "keydown",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "keypress 기능이 호출되면 수행하는 이벤트",
    "name": "keypress",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "keyup 기능이 호출되면 수행하는 이벤트",
    "name": "keyup",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "paste 기능이 호출되면 수행하는 이벤트",
    "name": "paste",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "AddEmptyText 속성에 따른 실제 적용 메소드",
    "name": "_setAddEmptyText",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 속성에 따른 실제 적용 메소드",
    "name": "_setEditable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 속성에 따른 실제 적용 메소드",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "listWidth 속성에 따른 실제 적용 메소드",
    "name": "_setListWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값에 맞는 목록을 활성화하는 메소드",
    "name": "activeItem",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 o객체를 추가하는 메소드",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Record의 데이터 객체",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "Record의 생성시 option",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 배열로 o객체를 추가하는 메소드",
    "name": "addAll",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Record의 데이터 객체 배열",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Record의 생성시 option",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render 후 호출하는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tries to blur the element. Any exceptions are caught and ignored.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 blur상태 설정",
    "name": "checkBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 입력값의 유효성을 검사하여 실제 값에 대입하는 메소드",
    "name": "checkVal",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이동할 값",
     "isFinal": false,
     "name": "allow",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "buffer에 가지고 있는 정보를 지우는 메소드",
    "name": "clearBuffer",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작",
      "isFinal": false,
      "name": "start",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "끝",
      "isFinal": false,
      "name": "end",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 적용된 filter를 지운다.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "clearFilter",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "목록을 줄이는 메소드",
    "name": "collapse",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "target과 비교하여 목록을 줄이는 메소드",
    "name": "collapseIf",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "option div 객체 생성",
    "name": "createOptionDiv",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "객체의 아이디나 객체",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnDescription": "Element 객체",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "changed 이벤트를 수행한다.",
    "name": "doChanged",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.data.DataSet",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록을 펼치는 메소드",
    "name": "doExpand",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus 이벤트 발생시 호출되는 메소드, design 관련",
    "name": "doFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 sync 적용 메소드",
    "name": "doSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 unsync 적용 메소드",
    "name": "doUnSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "list를 출력하는 메소드",
    "name": "expand",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "값에 따라 filter 하는 메소드",
    "name": "filter",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "filter시 비교하는 값",
      "isFinal": false,
      "name": "val",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "비교 필터",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "record id에 해당되는 LElement을 리턴한다.",
    "name": "findRowElById",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "찾을 row id",
     "isFinal": false,
     "name": "rowId",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom에서 row index return",
    "name": "findRowIndex",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageY",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "목록중에 첫번째를 활성화하는 메소드",
    "name": "firstActive",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tries to focus the element. Any exceptions are caught and ignored.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "FilterKey 메소드",
    "name": "fromCharCode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Input Value",
     "isFinal": false,
     "name": "Key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Number"
    }],
    "returnDescription": "문자반",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 활성화되어 있는 객체를 리턴",
    "name": "getActive",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 활성화되어 있는 객체의 index를 리턴",
    "name": "getActiveIndex",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "useEmptyText 값을 리턴하는 메소드",
    "name": "getAddEmptyText",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "value에 대한 buffer값의 배열을 리턴한다.",
    "name": "getBuffer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "결과값",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "select 범위 정보를 가지는 객체 리턴",
    "name": "getCaret",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋의 레코드 건수를 리턴한다.",
    "name": "getCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "데이터셋의 레코드 건수",
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록중에 h와 같은 html을 찾아 객체의 index를 리턴",
    "name": "getDataIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "비교할 html 내용",
     "isFinal": false,
     "name": "h",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "자동완성 기능을 사용할때 dataset을 리턴한다.",
    "name": "getDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.data.DataSet",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "화면 출력되는 객체 리턴",
    "name": "getDisplayEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Element 객체",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "getDisplayValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "빈값일 경우 emptyValue에 해당되는 값을 리턴한다.",
    "name": "getEmptyValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "결과값",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 값을 리턴하는 메소드\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "getHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "height 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "목록중에 h와 같은 html을 찾아 객체의 index를 리턴",
    "name": "getItemByRecordId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "비교할 display 내용",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "listWidth 값을 리턴하는 메소드",
    "name": "getListWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "width 값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "option div에 해당되는 객체를 리턴한다.",
    "name": "getOptionDiv",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask가 입력된 값을 mask를 제외한 값으로 리턴한다.",
    "name": "getUnmaskValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataset을 초기화한다.",
    "name": "initDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "container안의 content의 focus/blur 연결 설정",
    "name": "initFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 초기화",
    "name": "initMask",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "type에 따른 기능 초기화",
    "name": "initType",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록이 펼쳐저 있는지 여부",
    "name": "isExpand",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 유효여부를 확인하는 메소드\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "isValid",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "listWidth 값을 셋팅하는 메소드",
    "name": "listWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "width 값",
     "isFinal": false,
     "name": "w",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "다음 목록을 활성화하는 메소드",
    "name": "nextActive",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "FilterKey 메소드",
    "name": "onFilterKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "키 입력시 호출되는 메소드",
    "name": "onFireKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus 이벤트 발생시 호출되는 메소드",
    "name": "onFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 keydown 이벤트",
    "name": "onKeyDownMask",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 keypress 이벤트",
    "name": "onKeyPressMask",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "options div를 mousedown할 경우 호출되는 메소드",
    "name": "onOptionMouseDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록을 줄이는 메소드",
    "name": "onScroll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록을 세로크기를 재계산하는 메소드",
    "name": "optionAutoHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "위치를 다음 페이지로 이동한다.",
    "name": "pageDown",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "위치를 이전 페이지로 이동한다.",
    "name": "pageUp",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "이전 목록을 활성화하는 메소드",
    "name": "prevActive",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록의 모든 item을 삭제한다.",
    "name": "removeAllItem",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Record객체 배력을 추가한다.",
    "name": "removeAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "지우고자 하는 위치값",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록이 스크롤다운이 되게 하는 메소드",
    "name": "scrollDown",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록이 스크롤업이 되게 하는 메소드",
    "name": "scrollUp",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 buffer값중 현재 위치가 찾기",
    "name": "seekNext",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "mask의 현재 위치값",
     "isFinal": false,
     "name": "pos",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "useEmptyText 값을 변경하는 메소드",
    "name": "setAddEmptyText",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "변경하고자 하는 값",
     "isFinal": false,
     "name": "useEmptyText",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력 input 객체에 select 지정",
    "name": "setCaret",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "처음",
      "isFinal": false,
      "name": "begin",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 마지막",
      "isFinal": false,
      "name": "end",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet에 row 위치의 있는 o객체를 반영하는 메소드",
    "name": "setData",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row의 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "Record의 데이터 객체",
      "isFinal": false,
      "name": "o",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataset을 변경한다.",
    "name": "setDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "신규 DataSet",
     "isFinal": false,
     "name": "newDataSet",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LDataSet"
    }],
    "returnType": "Rui.data.DataSet",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet이 load후 기본으로 셋팅될 값을 변경한다.",
    "name": "setDefaultValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "기본 코드 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "출력객체에 내용을 변경한다.",
    "name": "setDisplayValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력객체에 내용을 변경할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 값을 셋팅하는 메소드",
    "name": "setEditable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "editable 셋팅 값",
     "isFinal": false,
     "name": "isEditable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "height 값을 셋팅하는 메소드\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "setHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "height 값",
     "isFinal": false,
     "name": "w",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "config로 제공된 placeholder를 지정하고 필요할 때 placeholder를 표시한다.\n &amp;lt;p&amp;gt;display field가 focus, blur되거나 값이 변경된 경우 이 메소드가 실행되어야 하며\n 이때 display field가 placeholder를 표시해야 할지 말지를 스스로 결정하여 출력한다.  &amp;lt;/p&amp;gt;\n &amp;lt;p&amp;gt;IE10과 그 이상의 버전과 Chrome, Safari, Firefox등의 HTML5 지원 브라우저의 경우 HTML5 placeholder를 사용한다.&amp;lt;br&amp;gt;\n IE6~9의 경우 구현된 placeholder를 사용한다.&amp;lt;br&amp;gt;\n &amp;lt;p&amp;gt;따라서 두 분류의 브라우저에 따라 동작이 서로 다르게 동작될 수 있다.&amp;lt;/p&amp;gt;",
    "name": "setPlaceholder",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet이 load후 기본으로 셋팅될 row값을 변경한다.",
    "name": "setSelectedIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "기본 index값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "textbox의 값의 selectionRange를 설정한다.",
    "name": "setSelectionRange",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "시작위치",
      "isFinal": false,
      "name": "start",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "종료위치",
      "isFinal": false,
      "name": "end",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 buffer를 지정하는 위치를 왼쪽으로 이동",
    "name": "shiftL",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이동할 값",
     "isFinal": false,
     "name": "pos",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mask 적용시 buffer를 지정하는 위치를 오른쪽으로 이동",
    "name": "shiftR",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이동할 값",
     "isFinal": false,
     "name": "pos",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "입력된 값의 유효성 체크",
    "name": "validateValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력된 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "buffer에 가지고 있는 정보를 출력하는 객체에 적용하는 메소드",
    "name": "writeBuffer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_form",
  "propertys": [{
   "deprecated": false,
   "description": "입력문자열 형식 지정",
   "isFinal": false,
   "name": "inputType",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Rui.util.LString.PATTERN_TYPE_NUMBER || Rui.util.LString.PATTERN_TYPE_NUMSTRING || Rui.util.LString.PATTERN_TYPE_STRING || Rui.util.LString.PATTERN_TYPE_KOREAN ",
   "visibility": "protected"
  }],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LField",
  "type": "Rui.ui.form.LTextBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "콤보의 보이는 값(displayField)을 그리드와 맵팽해주는 속성",
    "isFinal": false,
    "name": "autoMapping",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'dataSet'",
    "deprecated": false,
    "description": "LCombo에서 사용하는 DataSet ID",
    "isFinal": false,
    "name": "dataSetId",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'text'",
    "deprecated": false,
    "description": "Combo의 목록 구현을 위해 실제의 값(value)과 화면에 출력되는 값(text)이 존재 하는데 그중 화면에 출력되는 값에 해댕하는 필드(Field)명",
    "isFinal": false,
    "name": "displayField",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "edit 가능 여부",
    "isFinal": false,
    "name": "editable",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "값이 비였을때 출력할 text값",
    "isFinal": false,
    "name": "emptyText",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'$.base.msg108'",
    "deprecated": false,
    "description": "기본 emptyText 메시지의 다국어 코드값",
    "isFinal": false,
    "name": "emptyTextMessageCode",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "데이터를 반드시 선택해야 하는 필수 여부",
    "isFinal": false,
    "name": "forceSelection",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "input과 Picker Icon간의 간격",
    "isFinal": false,
    "name": "iconMarginLeft",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "20",
    "deprecated": false,
    "description": "Picker Icon의 width\n 기본값은 20이며 CSS에서 icon width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "iconWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "LCombo에서 초기 생성시 기본 데이터를 로드할 데이터 (예: items: [ { code: 'Y' }, { code: 'N' } ]\n items는 code와 value로 valueField와 displayField와 맵핑할 수 있다.",
    "isFinal": false,
    "name": "items",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "bind시에 현재 combo의 displayField와 맵핑된 dataSet에 반영할 출력 필드",
    "isFinal": false,
    "name": "rendererField",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "데이터 로딩시 combo의 row 위치\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/comboSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "selectedIndex",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "dataSet 사용 여부\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "useDataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "'선택하세요.' 항목 추가 여부\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "useEmptyText",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'value'",
    "deprecated": false,
    "description": "Combo의 목록 구현을 위해 실제의 값(value)과 화면에 출력되는 값(text)이 존재 하는데 그중 실제의 값에 해댕하는 필드(Field)명\n 주의! 이 값을 잘못 지정할 경우 선택된 item의 값을 getValue 등의 메소드를 이용하여 가져올 수 없다.",
    "isFinal": false,
    "name": "valueField",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "데이터셋과 맵핑되어 있는 Combo 편집기",
   "name": "Rui.ui.form.LCombo",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The html element that represents the Element.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "The intial LCombo.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "데이터셋과 맵핑되어 있는 Combo 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render 후 호출하는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "캐쉬한 데이터를 초기화한다.",
    "name": "clearCacheData",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "renderer를 수행하는 메소드",
    "name": "comboRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "display renderer",
    "name": "displayRenderer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "콤보 객체",
     "isFinal": false,
     "name": "combo",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.form.LCombo"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "로드한 데이터를 캐쉬한다.",
    "name": "doCacheData",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록에서 선택되면 출력객체에 값을 반영하는 메소드",
    "name": "doChangedItem",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Dom 객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "icon click 이벤트가 발생하면 호출되는 메소드",
    "name": "doIconClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋이 RowPosChanged 메소드가 호출되면 수행하는 메소드",
    "name": "doRowPosChangedDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 sync 적용 메소드",
    "name": "doSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 unsync 적용 메소드",
    "name": "doUnSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dislayField에 해당되는 값으로 validField에 해당하는 값을 찾는다.",
    "name": "findValueByDisplayValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "찾고자하는 display값",
     "isFinal": false,
     "name": "displayValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Sring"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 DataSet의 fieldName에 해당되는 값을 리턴",
    "name": "getBindValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 필드이름",
     "isFinal": false,
     "name": "fieldName",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "출력값",
    "returnType": "Object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "출력 객체의 값을 리턴",
    "name": "getDisplayValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "출력값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "autoMapping이 true일 경우 데이터셋에 이벤트를 탑재한다.",
    "name": "initAutoMapDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체의 아이디나 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|Object"
     },
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataset을 초기화한다.",
    "name": "initDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataMap을 초기화한다.",
    "name": "onClearDataMap",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋이 RowPosChanged 메소드가 호출되면 수행하는 메소드",
    "name": "onRowPosChangedDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋이 update 메소드가 호출되면 수행하는 이벤트 메소드",
    "name": "onUpdateData",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mouseWheel 이벤트 발생시 펼쳐진 것을 닫음.",
    "name": "onWheel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet의 내용으로 목록을 재생성하는 메소드",
    "name": "repaint",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataset을 변경한다.",
    "name": "setDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "신규 DataSet",
     "isFinal": false,
     "name": "newDataSet",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LDataSet"
    }],
    "returnType": "Rui.data.DataSet",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "출력객체에 내용을 변경한다.",
    "name": "setDisplayValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력객체에 내용을 변경할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Index 위치를 변경한다.",
    "name": "setSelectedIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치를 변경할 값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LCombo",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "checkbox 선택시 dataset에 bind할 값을 리턴하는 function",
    "isFinal": false,
    "name": "bindFn",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "value checkbox 선택시 dataset에 bind할 값\n bindValues를 사용시에는 반드시 value값을 bindValues의 0번째 값으로 지정하여야 정상 동작합니다.",
    "isFinal": false,
    "name": "bindValues",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "체크 상태 여부",
    "isFinal": false,
    "name": "checked",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드에 고정된 형태로의 출력 여부",
    "isFinal": false,
    "name": "gridFixed",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "label로 출력할 값",
    "isFinal": false,
    "name": "label",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "input태그의 value값",
    "isFinal": false,
    "name": "value",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "input태그의 type이 checkbox로 정의된 LCheckBox 객체 편집기",
   "name": "Rui.ui.form.LCheckBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LCheckBox.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "input태그의 type이 checkbox로 정의된 LCheckBox 객체 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setChecked",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 blur한다.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 호출 지연 메소드",
    "name": "deferOnBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus 메소드가 호출되면 수행되는 메소드",
    "name": "doFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "appendToNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 focus한다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "화면 출력되는 객체 리턴",
    "name": "getDisplayEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Element 객체",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "화면 출력객체의 실제 value값을 값을 리턴",
    "name": "getRawValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body html을 생성하여 리턴하는 메소드",
    "name": "getRenderBody",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴한다",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "boolean || String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "gridFixed 속성일 경우 그리드 랜더링시에 이벤트를 연결한다.",
    "name": "gridBindEvent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드에 fixed 처리된 checkBoxColumn을 renderer하는 메소드\n renderer html : &amp;lt;div style=\"width:21px\" class=\"L-grid-col-checkBox L-ignore-event\"/&amp;gt;",
    "name": "gridFixedRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridFixed 속성일 경우 그리드 랜더링시에 이벤트를 분리한다.",
    "name": "gridUnBindEvent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 선택됬는지 여부를 반환한다.",
    "name": "isChecked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "boolean || String",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "CheckBox edit 전에 호출되는 메소드",
    "name": "onBeforeEdit",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "container에 포함된 객체를 선택했는지 판단하는 메소드",
    "name": "onBlurContains",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드 셀이 클릭되었을때 CheckBox와 DataSet을 처리하는 메소드",
    "name": "onCellClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드 셀에서 키를 입력하였을 경우 CheckBox와 DataSet을 처리하는 메소드",
    "name": "onCellKeypress",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "item객체가 focus되면 호출되는 메소드",
    "name": "onCheckFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "checkbox 클릭 처리 메소드",
    "name": "onClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus 이벤트 발생시 호출되는 메소드",
    "name": "onFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 상태 여부를 설정한다.",
    "name": "setChecked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "체크 여부",
     "isFinal": false,
     "name": "isChecked",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "val",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|boolean"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LField",
  "type": "Rui.ui.form.LCheckBox",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LCheckBox의 그룹으로 묶어서 생성하는 LCheckBoxGroup 편집기",
   "name": "Rui.ui.form.LCheckBoxGroup",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LCheckBoxGroup.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LCheckBox의 그룹으로 묶어서 생성하는 LCheckBoxGroup 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 호출 지연 메소드",
    "name": "deferOnBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus 메소드가 호출되면 수행되는 메소드",
    "name": "doFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 focus한다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "index에 해당되는 LCheckBox객체를 리턴하는 메소드",
    "name": "getItem",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "index 값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "Rui.ui.form.LCheckBox",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 item의 값을 리턴하는 메소드",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체의 아이디나 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|Object"
     },
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LCheckBox에서 구현한 메소드를 호출해주는 기능",
    "name": "invoke",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "function 객체",
      "isFinal": false,
      "name": "fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "인수 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnType": "Rui.ui.form.LCheckBoxGroup",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "container에 포함된 객체를 선택했는지 판단하는 메소드",
    "name": "onBlurContains",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "값이 변경되면 호출되는 메소드",
    "name": "onChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 메소드가 호출되면 수행되는 메소드",
    "name": "onItemBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "item객체가 focus되면 호출되는 메소드",
    "name": "onItemFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "item중에 value 맞는 항목을 선택하는 메소드",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "item의 value 값",
     "isFinal": false,
     "name": "val",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LField",
  "type": "Rui.ui.form.LCheckBoxGroup",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "radio를 생성하는 LRadio 편집기",
   "name": "Rui.ui.form.LRadio",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LRadio.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "radio를 생성하는 LRadio 편집기",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "render후 호출되는 메소드",
   "name": "afterRender",
   "parameterType": "METHOD",
   "parameters": [{
    "deprecated": false,
    "description": "부모 객체",
    "isFinal": false,
    "name": "container",
    "parameterType": "PARAMETER",
    "scope": "required",
    "type": "HTMLElement"
   }],
   "returnType": "void",
   "scope": "instance",
   "visibility": "protected"
  }],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LCheckBox",
  "type": "Rui.ui.form.LRadio",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "",
   "deprecated": false,
   "description": "//     *  그리드에 고정된 형태로의 출력 여부\n//     *",
   "isFinal": false,
   "name": "",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "boolean",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "LRadio를 그룹으로 묶어서 생성하는 LRadioGroup 편집기",
   "name": "Rui.ui.form.LRadioGroup",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LRadioGroup.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LRadio를 그룹으로 묶어서 생성하는 LRadioGroup 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "키 입력시 처리하는 메소드",
    "name": "_onSpecialkey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이벤트 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "이전 radio 객체를 선택한다.",
    "name": "before",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Check를 모두 취소하는 메소드",
    "name": "clearAllChecked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 발생하는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "appendToNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "선택된 index를 리턴한다.",
    "name": "getCheckedIndex",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "check된 radio 객체를 리턴하는 메소드",
    "name": "getCheckedItem",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.form.LRadio",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값에 해당되는 radio를 리턴하는 메소드",
    "name": "getRadioElByVal",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.form.LRadio",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 raio의 값을 리턴하는 메소드",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드에 fixed 처리된 checkBoxColumn을 renderer하는 메소드",
    "name": "gridFixedRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "다음 radio 객체를 선택한다.",
    "name": "next",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "idx 선택할 index를 지정한다.",
    "name": "setCheckedIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "선택할 index",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "val 해당되는 radio를 선택하는 메소드",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "radio의 value값에 해당되는 값",
     "isFinal": false,
     "name": "val",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LCheckBoxGroup",
  "type": "Rui.ui.form.LRadioGroup",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "180",
   "deprecated": false,
   "description": "목록창의 가로 길이",
   "isFinal": false,
   "name": "width",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "textarea를 생성하는 LTextArea 편집기",
   "name": "Rui.ui.form.LTextArea",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The html element that represents the Element.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "The intial LTextArea.",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "textarea를 생성하는 LTextArea 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "키 입력시 처리하는 메소드",
    "name": "_onSpecialkey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이벤트 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 속성에 따른 실제 적용 메소드",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "template객체 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "화면 출력되는 객체 리턴",
    "name": "getDisplayEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Element 객체",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body html을 리턴하는 메소드",
    "name": "getRenderBody",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "키 입력시 호출되는 메소드",
    "name": "onFireKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LTextArea",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "소수점 허용 자리수\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/numberboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "decimalPrecision",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "'.'",
    "deprecated": false,
    "description": "수숫점 구분자 출력 여부",
    "isFinal": false,
    "name": "decimalSeparator",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "값이 선택되어 있지 않을 경우 리턴시 값을 '' 공백 문자로 리턴할지 null로 리턴할지를 결정한다. 그리드의 데이터셋이 로딩후 연결된 콤보가 수정되지 않았는데도 수정된걸로 인식되면 null이나 undefined로 정의하여 맞춘다.",
    "isFinal": false,
    "name": "emptyValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "FilterKey 적용여부",
    "isFinal": false,
    "name": "filterKey",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "입력 가능 최대값 정의",
    "isFinal": false,
    "name": "maxValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "입력 가능 최소값 정의",
    "isFinal": false,
    "name": "minValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "','",
    "deprecated": false,
    "description": "천단위 구분자 출력 여부",
    "isFinal": false,
    "name": "thousandsSeparator",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "숫자만 입력 가능하게 하고 숫자에 대한 입력 제어를 지원하는 객체 편집기(dataSet와 연동시 fields의 값의 type은 반드시 'number' 타입으로 선언되어야 한다.)",
   "name": "Rui.ui.form.LNumberBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The html element that represents the Element.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "The intial LNumberBox.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "숫자만 입력 가능하게 하고 숫자에 대한 입력 제어를 지원하는 객체 편집기(dataSet와 연동시 fields의 값의 type은 반드시 'number' 타입으로 선언되어야 한다.)",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render 후 호출하는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "객체의 아이디나 객체",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnDescription": "Element 객체",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "decimal값을 리턴하는 메소드",
    "name": "getDecimalValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값을 리턴하는 메소드",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Int|Float",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체의 아이디나 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|Object"
     },
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "숫자 유효성을 검증하는 메소드",
    "name": "isNumberValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "키 입력시 filter되는 메소드",
    "name": "onFilterKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "val",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "maxValue의 유효성을 검증하는 메소드",
    "name": "validateMaxValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "minValue의 유효성을 검증하는 메소드",
    "name": "validateMinValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "유효성을 검증하는 메소드",
    "name": "validateValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LNumberBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "calendar의 생성자 options을 추가한다.",
    "isFinal": false,
    "name": "calendarConfig",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "'date'",
    "deprecated": false,
    "description": "입출력 값을 Date형으로 할것인지 String형으로 할 것인지 결정한다.\n 기본 값은 Date형 이며, String형으로 사용 할 경우 입출력 값의 포맷은 valueFormat 속성값에 따른다.",
    "isFinal": false,
    "name": "dateType",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "값이 선택되어 있지 않을 경우 리턴시 값을 '' 공백 문자로 리턴할지 null로 리턴할지를 결정한다. 그리드의 데이터셋이 로딩후 연결된 콤보가 수정되지 않았는데도 수정된걸로 인식되면 null이나 undefined로 정의하여 맞춘다.",
    "isFinal": false,
    "name": "emptyValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "input과 Picker Icon간의 간격",
    "isFinal": false,
    "name": "iconMarginLeft",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "icon의 tabIndex를 지정한다. -1이면 지정안한다.",
    "isFinal": false,
    "name": "iconTabIndex",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "20",
    "deprecated": false,
    "description": "Picker Icon의 width\n 기본값은 20이며 CSS에서 icon width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "iconWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "'auto'",
    "deprecated": false,
    "description": "calendar picker의 펼쳐짐 방향 (auto|up|down)",
    "isFinal": false,
    "name": "listPosition",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "다국어 mask 적용 여부 / 다국어 마스크가 적용되면 mask 속성은 무시된다.",
    "isFinal": false,
    "name": "localeMask",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "달력아이콘 표시 여부",
    "isFinal": false,
    "name": "picker",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'%Y-%m-%d'",
    "deprecated": false,
    "description": "mask를 제외한 실제 값의 format을 지정하는 속성, form submit시 적용되는 format",
    "isFinal": false,
    "name": "valueFormat",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "90",
    "deprecated": false,
    "description": "width",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "날짜를 입력하는 LDateBox 편집기",
   "name": "Rui.ui.form.LDateBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LDateBox.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "날짜를 입력하는 LDateBox 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 defer를 연결하는 메소드",
    "name": "deferOnBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "doRenderCalendar",
    "name": "doRenderCalendar",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 설정되어 있는 localeMask의 format을 리턴한다.",
    "name": "getLocaleFormat",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 날짜 가져오기",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "달력 숨기기",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "localeMask 초기화 메소드",
    "name": "initLocaleMask",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Calendar Picker를 동작하지 않도록 한다.",
    "name": "pickerOff",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Calendar Picker를 동작하도록 한다.",
    "name": "pickerOn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "입력된 날짜 선택하기",
    "name": "selectCalendarDate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "날짜값을 반영한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LDateBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "input과 Picker Icon간의 간격",
    "isFinal": false,
    "name": "iconMarginLeft",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "icon의 tabIndex를 지정한다. -1이면 지정안한다.",
    "isFinal": false,
    "name": "iconTabIndex",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "9",
    "deprecated": false,
    "description": "Picker Icon의 width\n 기본값은 9이며 CSS에서 icon width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "iconWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "spin button을 사용할 지 여부",
    "isFinal": false,
    "name": "spinner",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "가로 길이",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "시간을 출력하는 LTimeBox 편집기",
   "name": "Rui.ui.form.LTimeBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The html element that represents the Element.",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "The intial LTimeBox.",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "시간을 출력하는 LTimeBox 편집기",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "renderer를 수행하는 메소드",
    "name": "beforeRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "1분 내림",
    "name": "spinDown",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "1분 올림",
    "name": "spinUp",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Spiner를 동작하지 않도록 한다.",
    "name": "spinnerOff",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Spiner를 동작하도록 한다.",
    "name": "spinnerOn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "유효성을 검증하는 메소드",
    "name": "validateValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "object"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_form",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LTimeBox",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Grid관련 Table cell처리 유틸",
   "name": "Rui.ui.grid.LCellMerge",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "Grid관련 Table cell처리 유틸",
  "events": [],
  "methods": [],
  "module": "ui_grid",
  "propertys": [],
  "scope": "static",
  "type": "Rui.ui.grid.LCellMerge",
  "visibility": "private"
 },
 {
  "configs": [
   {
    "defaultValue": "''",
    "deprecated": false,
    "description": "내용의 Column 가로 정렬 속성. 값종류: left, center, right",
    "isFinal": false,
    "name": "align",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Column 자동 width",
    "isFinal": false,
    "name": "autoWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "copy시 clipboard에 넣을지 여부를 결정한다.",
    "isFinal": false,
    "name": "clipboard",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "copy시 clipboard에 넣을때 처리할 renderer를 지정한다.",
    "isFinal": false,
    "name": "clipboardRenderer",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "copy시 clipboard에 넣을때 renderer 값으로 처리할지 DataSet의 원값으로 처리할지 여부를 결정한다.",
    "isFinal": false,
    "name": "clipboardVirtual",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column draggable 속성. 그리드 헤더를 drag를 통해 컬럼 순서를 변경할 수 있는지를 설정한다.",
    "isFinal": false,
    "name": "draggable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Column 편집 가능 여부 속성",
    "isFinal": false,
    "name": "editable",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column의 편집기 설정",
    "isFinal": false,
    "name": "editor",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "field가 없는 Column이 소계가 들어갈 경우 각 row별 공식을 적용하는 function",
    "isFinal": false,
    "name": "expression",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "expression 속성 적용시 소계의 각 row의 합계 처리 방식을 어떤걸로 처리 할 지 결정 (sum/avg/max/min/count)",
    "isFinal": false,
    "name": "expressionType",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String|function",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "dataSet과 연결할 field 명",
    "isFinal": false,
    "name": "field",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Column의 width를 조정할 수 있는 여부를 설정한다.",
    "isFinal": false,
    "name": "fixed",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드의 틀고정 Column을 지정한다.",
    "isFinal": false,
    "name": "freeze",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드에서 Column을 horizontal merge 한다.",
    "isFinal": false,
    "name": "hMerge",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "headerTool을 출력할지 여부를 결정한다. (Plugin중에 LHeaderContextMenu를 사용할 경우 작동된다.)",
    "isFinal": false,
    "name": "headerTool",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Column hidden 속성 (hidden 이벤트 참조)",
    "isFinal": false,
    "name": "hidden",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "columnModel에서 구분할 수 있는 column객체의 id",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "enter key 입력이나 cell click 시 컬럼을 이동할지 여부를 결정한다.\n 컬럼에 a태그 링크로 팝업이 뜨는 경우에 팝업창이 뒤에서 떴다가 앞으로 올 경우 적용한다.",
    "isFinal": false,
    "name": "ignoreViewFocus",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "그리드의 헤더 이름을 출력하는 속성",
    "isFinal": false,
    "name": "label",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "1000",
    "deprecated": false,
    "description": "Column 자동 max width",
    "isFinal": false,
    "name": "maxAutoWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "'%Y-%m-%d'",
    "deprecated": false,
    "description": "그리드에서 Date형 Column을 merge 할때 포멧을 정의한다. 포멧은 LDate api 참조",
    "isFinal": false,
    "name": "mergeDateFormat",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "25",
    "deprecated": false,
    "description": "Column의 최소 width",
    "isFinal": false,
    "name": "minWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "출력할 컬럼인지 여부를 결정한다. false로 설졍되면 공백값으로 출력된다.",
    "isFinal": false,
    "name": "renderExcel",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column 의 row의 값이 바뀌면 무조건 render를 할지 여부",
    "isFinal": false,
    "name": "renderRow",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column 의 디자인이나 값을 변경할 수 있는 function",
    "isFinal": false,
    "name": "renderer",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Column resizable 속성",
    "isFinal": false,
    "name": "resizable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Column selected 속성",
    "isFinal": false,
    "name": "selected",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column 정렬 속성. sortable 이벤트 참조",
    "isFinal": false,
    "name": "sortable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "소계의 기준이 되는 필드 정보 배열",
    "isFinal": false,
    "name": "sumIds",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "소계의 앞에 출력될 문장 속성",
    "isFinal": false,
    "name": "sumText",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "소계를 할때 sum/avg/max/min/count 종류를 지정하는 속성",
    "isFinal": false,
    "name": "sumType",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "소계 정보를 가지는 객체 예) summary: { ids: ['col1', 'col2' ], type: 'sum', label: '소계', labelId: 'col2' }\n type 종류 : sum/avg/max/min/count",
    "isFinal": false,
    "name": "summary",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Tablet 출력시 옵션\n 예)\n { width: '20%', align: 'center' }\n Tablet은 width가 %로도 적용이 가능하고 문자여야 한다.",
    "isFinal": false,
    "name": "tablet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드에서 Column을 vertical merge 한다.",
    "isFinal": false,
    "name": "vMerge",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column width",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "그리드의 LColumn 객체",
   "name": "Rui.ui.grid.LColumn",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "생성자 Config 객체",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드의 LColumn 객체",
  "events": [
   {
    "deprecated": false,
    "description": "LGridPanel의 컬럼의 width길이를 변경하면 호출되는 columnResize 이벤트",
    "name": "columnResize",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "pixel",
      "isFinal": false,
      "name": "oldWidth",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "pixel",
      "isFinal": false,
      "name": "newWidth",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "editor가 바뀌면 호출되는 editorChanged 이벤트",
    "name": "editorChanged",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "hidden 기능이 호출되면 수행하는 이벤트",
    "name": "hidden",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "hidden값",
      "isFinal": false,
      "name": "hidden",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "label일 변경되면 호출되면 수행하는 이벤트",
    "name": "label",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "sortable값",
      "isFinal": false,
      "name": "label",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "sortable 기능이 호출되면 수행하는 이벤트",
    "name": "sortable",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "sortable값",
      "isFinal": false,
      "name": "sortable",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "그리드 header에 css 를 탑재한다.",
    "name": "addHeaderCss",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "탑재할 css",
     "isFinal": false,
     "name": "css",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LColumn을 복제한다. (일반 개발자는 사용하면 안됨)",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LColumn",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 column model값을 리턴하는 메소드",
    "name": "getColumnModel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LColumnModel",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "columnType 가져오기",
    "name": "getColumnType",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "string",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 editor값을 리턴하는 메소드",
    "name": "getEditor",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 field값을 리턴하는 메소드",
    "name": "getField",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 groupId값을 리턴하는 메소드",
    "name": "getGroupId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 Id값을 리턴하는 메소드",
    "name": "getId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 lable값을 셋팅하는 메소드",
    "name": "getLabel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 width값을 셋팅하는 메소드",
    "name": "getMaxAutoWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 minWidth값을 셋팅하는 메소드",
    "name": "getMinWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 width값을 리턴하는 메소드",
    "name": "getWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드 header에 css 탑재 여부를 리턴한다.",
    "name": "hasHeaderCss",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 css",
     "isFinal": false,
     "name": "css",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "columnType이 data인지 여부",
    "name": "isDataColumn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 draggable값을 리턴하는 메소드",
    "name": "isDraggable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 editable값을 리턴하는 메소드",
    "name": "isEditable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 fixed값을 리턴하는 메소드",
    "name": "isFixed",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 hidden값을 리턴하는 메소드",
    "name": "isHidden",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 resizable값을 리턴하는 메소드",
    "name": "isResizable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 selected값을 리턴하는 메소드",
    "name": "isSelected",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 sortable값을 리턴하는 메소드",
    "name": "isSortable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드 header에 css 를 제거한다.",
    "name": "removeHeaderCss",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 css",
     "isFinal": false,
     "name": "css",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "string"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 column draggable 값을 셋팅하는 메소드",
    "name": "setDraggable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "draggable 값",
     "isFinal": false,
     "name": "draggable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column editable 값을 셋팅하는 메소드(사용안함)",
    "name": "setEditable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "editable 값",
     "isFinal": false,
     "name": "editable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column editor 값을 셋팅하는 메소드",
    "name": "setEditor",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "editor 값",
     "isFinal": false,
     "name": "editor",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column fixed 값을 셋팅하는 메소드",
    "name": "setFixed",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "fixed 값",
     "isFinal": false,
     "name": "fixed",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column hidden 값을 셋팅하는 메소드. hidden 이벤트가 발생한다.",
    "name": "setHidden",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "hidden값",
     "isFinal": false,
     "name": "hidden",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column label값을 셋팅하는 메소드. label 이벤트가 발생한다.",
    "name": "setLabel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "column lable값",
     "isFinal": false,
     "name": "label",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column maxAutoWidth값을 셋팅하는 메소드",
    "name": "setMaxAutoWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "maxAutoWidth값",
     "isFinal": false,
     "name": "maxAutoWidth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column minWidth값을 셋팅하는 메소드",
    "name": "setMinWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "minWidth값",
     "isFinal": false,
     "name": "minWidth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column resizable 값을 셋팅하는 메소드",
    "name": "setResizable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "resizable 값",
     "isFinal": false,
     "name": "resizable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column selected 값을 셋팅하는 메소드",
    "name": "setSelected",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "selected 값",
     "isFinal": false,
     "name": "selected",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column sortable 값을 셋팅하는 메소드. sortable 이벤트가 발생한다.",
    "name": "setSortable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "sortable 값",
     "isFinal": false,
     "name": "sortable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "summary 정보를 변경한다. 예: { sumIds: ['company', 'date'], sumType: 'sum', sumText: '소계' }",
    "name": "setSummary",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "summary 변경 객체 정보",
     "isFinal": false,
     "name": "summary",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 column width값을 셋팅하는 메소드. columnResize 이벤트가 발생한다.",
    "name": "setWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "width 값",
     "isFinal": false,
     "name": "width",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.grid.LColumn",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "editor 속성",
    "isFinal": false,
    "name": "editor",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "selected 속성",
    "isFinal": false,
    "name": "selected",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "sortable 속성",
    "isFinal": false,
    "name": "sortable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LTriggerColumn",
   "name": "Rui.ui.grid.LTriggerColumn",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LTriggerColumn",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "renderer를 수행하는 메소드",
    "name": "doRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.grid.LColumn",
  "type": "Rui.ui.grid.LTriggerColumn",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'right'",
    "deprecated": false,
    "description": "Column의 align 속성",
    "isFinal": false,
    "name": "align",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'num'",
    "deprecated": false,
    "description": "Column id 속성",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'Num'",
    "deprecated": false,
    "description": "Column의 label 속성",
    "isFinal": false,
    "name": "label",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Column과 mapping field 속성",
    "isFinal": false,
    "name": "mappingField",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "resizable 속성",
    "isFinal": false,
    "name": "resizable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "35",
    "deprecated": false,
    "description": "Column의 width 속성",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LNumberColumn",
   "name": "Rui.ui.grid.LNumberColumn",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LNumberColumn",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet number를 update하는 메소드",
    "name": "doNumberRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "reder시 출력해야하는 데이터를 리턴하는 메소드",
    "name": "doRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.grid.LTriggerColumn",
  "type": "Rui.ui.grid.LNumberColumn",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'center'",
    "deprecated": false,
    "description": "Column의 align 속성",
    "isFinal": false,
    "name": "align",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "copy시 clipboard에 넣을지 여부를 결정한다.",
    "isFinal": false,
    "name": "clipboard",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'state'",
    "deprecated": false,
    "description": "Column id 속성",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'S'",
    "deprecated": false,
    "description": "Column의 label 속성",
    "isFinal": false,
    "name": "label",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "15",
    "deprecated": false,
    "description": "Column의 width 속성",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LStateColumn",
   "name": "Rui.ui.grid.LStateColumn",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "config 객체",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LStateColumn",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "데이터셋의 이벤트를 탑재한다.",
    "name": "addDataSetEvent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "renderer를 수행하는 메소드",
    "name": "doRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "state값을 리턴하는 메소드",
    "name": "getState",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋의 이벤트를 삭제한다.",
    "name": "removeDataSetEvent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.grid.LTriggerColumn",
  "type": "Rui.ui.grid.LStateColumn",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'center'",
    "deprecated": false,
    "description": "Column의 align 속성",
    "isFinal": false,
    "name": "align",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "copy시 clipboard에 넣을지 여부를 결정한다.",
    "isFinal": false,
    "name": "clipboard",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "Rui.id()",
    "deprecated": false,
    "description": "Column id 속성",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'<div",
    "deprecated": false,
    "description": "Column의 label 속성",
    "isFinal": false,
    "name": "label",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'checkBox'",
    "deprecated": false,
    "description": "checkbox형식으로 출력할지 radio형식으로 출력할지 결정하는 속성",
    "isFinal": false,
    "name": "selectionType",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "selectionType이 radio일 경우 dataSet의 row 위치에 자동으로 선택되하게 하는 기능",
    "isFinal": false,
    "name": "syncRow",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "28",
    "deprecated": false,
    "description": "Column의 width 속성",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "그리드의 row를 선택할 수 있게 하는 LColumn. 체크가 되면 LDataSet의 marked 이벤트가 발생한다. marked 이벤트 참조",
   "name": "Rui.ui.grid.LSelectionColumn",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드의 row를 선택할 수 있게 하는 LColumn. 체크가 되면 LDataSet의 marked 이벤트가 발생한다. marked 이벤트 참조",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "renderer를 수행하는 메소드",
    "name": "doRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 allMarked 이벤트가 발생하면 호출되는 메소드",
    "name": "onAllMarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 rowPosChanged 이벤트가 발생하면 호출되는 메소드",
    "name": "onRowPosChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "gridview의 event를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.grid.LTriggerColumn",
  "type": "Rui.ui.grid.LSelectionColumn",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "autoWidth를 적용할 경우 그리드의 사이즈와 상관없이 무조건 autoWidth를 적용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "adjustAutoWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "LTriggerColumn을 제외한 모든 컬럼에 autoWidth를 적용한다. autoWidth가 적용되면 세로 스크롤러는 무조건 출력됩니다.\n autoWidth를 적용하였을때는 기본적으로 그리드의 width보다 적을경우에만 반영한다.\n 무조건 autoWidth로 계산을 처리해서 반영하려고 한다면 adjustAutoWidth 속성을 true로 적용한다.",
    "isFinal": false,
    "name": "autoWidth",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "autoWidth를 적용시 우측 마진값으로 값에 따라서 스크롤이 생기지 않게 한다.",
    "isFinal": false,
    "name": "autoWidthMargin",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "컬럼 정보를 받는 배열",
    "isFinal": false,
    "name": "columns",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "LColumn의 draggable 속성을 모두 default로 설정한다.",
    "isFinal": false,
    "name": "defaultDraggable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "LColumn default editable 속성",
    "isFinal": false,
    "name": "defaultEditable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "LColumn default sortable 속성",
    "isFinal": false,
    "name": "defaultSortable",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "100",
    "deprecated": false,
    "description": "LColumn default width 속성",
    "isFinal": false,
    "name": "defaultWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "틀고정을 할 LColumn의 id",
    "isFinal": false,
    "name": "freezeColumnId",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "LColumn의 merge시 앞의 기준으로 merge가 되게 묶는 기능",
    "isFinal": false,
    "name": "groupMerge",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "엑셀 columnModel을 생성할 때 static column도 생성할지 여부",
    "isFinal": false,
    "name": "showStaticColumn",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "엑셀 다운로드나 클립보드 복사시 태그를 제외하게 하는 속성을 설정한다. (성능이 높여야 하는 경우 이 속성을 false로 적용하고 각 컬럼별로 renderer에서 구현한다.",
    "isFinal": false,
    "name": "skipTags",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "그리드에 출력할 LColumn들의 집합을 관리하는 객체로 LColumn의 전체 제어에 해당되는 기능을 가지고 있다.",
   "name": "Rui.ui.grid.LColumnModel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "생성자 config 객체",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드에 출력할 LColumn들의 집합을 관리하는 객체로 LColumn의 전체 제어에 해당되는 기능을 가지고 있다.",
  "events": [
   {
    "deprecated": false,
    "description": "getRenderCell 메소드가 호출되면 수행하는 이벤트",
    "name": "cellConfigChanged",
    "parameters": [
     {
      "deprecated": false,
      "description": "css객체",
      "isFinal": false,
      "name": "css",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row id",
      "isFinal": false,
      "name": "rowId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "config key",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "config value",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "컬럼의 순서가 바뀌면 호출되면 이벤트",
    "name": "columnMove",
    "parameters": [{
     "deprecated": false,
     "description": "this",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "컬럼 정보가 바뀌면 호출되는 이벤트",
    "name": "columnsChanged",
    "parameters": [{
     "deprecated": false,
     "description": "this",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "LColumn의 이벤트를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell config 정보를 초기화한다.",
    "name": "clearCellConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드를 엑셀 저장하기 위한 columnModel을 리턴한다.",
    "name": "createExcelColumnModel",
    "parameterType": "METHOD",
    "parameters": [],
    "plugin": "/plugins/ui/grid/LGridPanelExt.js",
    "returnType": "Rui.ui.grid.LColumnModel",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Excel용 template 생성",
    "name": "createTemplateForExcel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell config 정보를 리턴한다.",
    "name": "getCellConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int|String"
     },
     {
      "deprecated": false,
      "description": "config 키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "idx 위치에 해당되는 LColumn을 리턴하는 메소드",
    "name": "getColumnAt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "위치값",
      "isFinal": false,
      "name": "idx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 보이는 컬럼만 선택 여부",
      "isFinal": false,
      "name": "isVisibleOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "Rui.ui.grid.LColumn",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "field에 해당되는 LColumn을 리턴하는 메소드",
    "name": "getColumnByField",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "field명",
     "isFinal": false,
     "name": "field",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.ui.grid.LColumn",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "id에 해당되는 LColumn을 리턴하는 메소드",
    "name": "getColumnById",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "column의 id값",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.ui.grid.LColumn",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "전체 LColumn의 갯수를 리턴하는 메소드",
    "name": "getColumnCount",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "column 배열의 모든 width의 합을 리턴하는 메소드",
    "name": "getColumnsWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "LColumn객체 컬럼 배열",
     "isFinal": false,
     "name": "columns",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Array"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": true,
    "description": "freeze컬럼 기준으로 앞의 LColumn의 갯수를 리턴하는 메소드",
    "name": "getFirstColumnCount",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "freeze 컬럼의 이전 컬럼들을 리턴하는 메소드",
    "name": "getFirstColumns",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "freeze 컬럼의 이전 컬럼들의 width의 합을 리턴하는 메소드",
    "name": "getFirstColumnsWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LColumn의 index를 리턴하는 메소드",
    "name": "getIndex",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "column 객체",
      "isFinal": false,
      "name": "column",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.grid.LColumn"
     },
     {
      "deprecated": false,
      "description": "[optional] 보이는 컬럼 기준 index",
      "isFinal": false,
      "name": "isVisibleOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "id에 해당되는 LColumn의 index를 리턴하는 메소드",
    "name": "getIndexById",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "id명",
      "isFinal": false,
      "name": "id",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 보이는 컬럼",
      "isFinal": false,
      "name": "isVisibleOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "초기 컬럼모델 옵션정보를 리턴한다.",
    "name": "getInitOptions",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "freeze컬럼 기준으로 뒤의 LColumn의 갯수를 리턴하는 메소드",
    "name": "getLastColumnCount",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "freeze 컬럼의 이후 컬럼들을 리턴하는 메소드",
    "name": "getLastColumns",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "freeze 컬럼의 이후 컬럼들의 width의 합을 리턴하는 메소드",
    "name": "getLastColumnsWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "FreezColumn정보를 포함한  multiheaderInfos가져오기\n {colInfos: colInfos,rowCount: rowCount,colCount: colCount,dataColumns: dataColumns}",
    "name": "getMultiheaderAllColumns",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "multiheaderInfos가져오기\n {colInfos: colInfos,rowCount: rowCount,colCount: colCount,dataColumns: dataColumns}",
    "name": "getMultiheaderInfos",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "틀고정 multiheader정보의 index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "전체 column의 width를 리턴하는 메소드",
    "name": "getTotalWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 보이는 컬럼만 선택 여부",
     "isFinal": false,
     "name": "isVisibleOnly",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "보이는 영역에 그려져야할 행의 수를 계산하여 반환",
    "name": "getVisibleRowCount",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] 보이는 영역 끝에 걸친 row는 제외하고 계산함.",
      "isFinal": false,
      "name": "excludeOver",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] 계산할 때 사용할 행의 높이",
      "isFinal": false,
      "name": "rowHeight",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "freeze column 여부를 리턴한다.",
    "name": "hasFreezeColumn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "autoWidth가 적용된 LColumn이 있으면 true를 리턴한다.",
    "name": "isAutoWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "idx에 해당되는 LColumn이 hidden인지를 리턴하는 메소드",
    "name": "isHidden",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치값",
     "isFinal": false,
     "name": "col",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "merge 되었는지 여부",
    "name": "isMerged",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "multiheader여부",
    "name": "isMultiheader",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "summary 컬럼이 존재하는지 여부를 리턴한다.",
    "name": "isSummary",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "oldIndex의 LColumn을 newIndex위치로 이동하는 메소드",
    "name": "moveColumn",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동할 LColumn의 위치",
      "isFinal": false,
      "name": "oldIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이동될 LColumn의 위치",
      "isFinal": false,
      "name": "newIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell config 정보를 설정한다.",
    "name": "setCellConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int|String"
     },
     {
      "deprecated": false,
      "description": "config 키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "config 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "컬럼들 모두 재정의 한다. (그리드의 전체 랜더링이 발생하므로 성능 저하 발생)",
    "name": "setColumns",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "변경할 컬럼 config 정보",
     "isFinal": false,
     "name": "columns",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "틀고정 컬럼을 변경한다.",
    "name": "setFreezeColumnId",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "LColumn의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LColumn의 이벤트를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "autoWidth가 적용된 컬럼을 maxWidth에 맞춰서 자동으로 width를 변경한다.",
    "name": "updateColumnsAutoWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "전체 컬럼에 적용할 width",
     "isFinal": false,
     "name": "maxWidth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_grid",
  "propertys": [{
   "deprecated": false,
   "description": "autoWidth를 적용할 경우 그리드의 사이즈와 상관없이 무조건 autoWidth를 적용할지 여부를 결정한다.\n autoWidth를 적용하여도 width의 기본값은 반드시 적용한다.",
   "isFinal": false,
   "name": "adjustAutoWidth",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "boolean",
   "visibility": "protected"
  }],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.ui.grid.LColumnModel",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "row renderer시 수행되는 메소드",
   "isFinal": false,
   "name": "renderer",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "Function",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "그리드에 출력할 row들의 집합을 관리하는 객체.\n row에 대한 랜더링 및 이벤트 제어용.",
   "name": "Rui.ui.grid.LRowModel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "생성자 config 객체",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드에 출력할 row들의 집합을 관리하는 객체.\n row에 대한 랜더링 및 이벤트 제어용.",
  "events": [{
   "deprecated": false,
   "description": "getRenderRow 메소드가 호출되면 수행하는 이벤트",
   "name": "rowConfigChanged",
   "parameters": [
    {
     "deprecated": false,
     "description": "row값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    },
    {
     "deprecated": false,
     "description": "rowId값",
     "isFinal": false,
     "name": "rowId",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "key값",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "value값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "record 객체",
     "isFinal": false,
     "name": "record",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.data.LRecord"
    }
   ],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "LColumn의 이벤트를 연결하는 메소드",
    "name": "bindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row config 정보를 리턴한다.",
    "name": "getRowConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "config 키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row config 정보를 설정한다.",
    "name": "setRowConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "config 키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "config 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LColumn의 이벤트를 연결하는 메소드",
    "name": "unbindEvent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "gridPanel 객체",
     "isFinal": false,
     "name": "gridPanel",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.grid.LGridPanel"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.ui.grid.LRowModel",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LColumnResizer",
   "name": "Rui.ui.grid.LColumnResizer",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LColumnResizer",
  "events": [],
  "methods": [],
  "module": "ui_grid",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDDProxy",
  "type": "Rui.ui.grid.LColumnResizer",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LColumnDD column을 drag drop으로 이동을 위한 class",
   "name": "Rui.ui.grid.LColumnDD",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "column dd를 적용할 gridview",
    "isFinal": false,
    "name": "grid",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Rui.ui.grid.LGridView"
   }],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LColumnDD column을 drag drop으로 이동을 위한 class",
  "events": [],
  "methods": [],
  "module": "ui_grid",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDDProxy",
  "type": "Rui.ui.grid.LColumnDD",
  "visibility": "private"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "LColumn의 editor에 해당되는 객체가 autoMapping을 지원하는 rendererField가 있을 경우 rendererField 기준으로 정렬이 가능하게 한다.",
    "isFinal": false,
    "name": "autoMappingSortable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "boder의 width 값\n 나머지 모두는 cell div에 border를 할당했지만, right border는 td에 할당 =&amp;gt; 내부 div에 할당시 padding에 의해 우측 border가 td범위 넘어서서 출력되지 않음",
    "isFinal": false,
    "name": "borderWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "LColumnModel 객체",
    "isFinal": false,
    "name": "columnModel",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnModel",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "콤포넌트 내부적으로 소팅을 하는게 아닌 개발자가 이벤트로 직접 DataSet의 sort를 처리할 수 있게 한다.",
    "isFinal": false,
    "name": "customSortable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "DataSet 객체",
    "isFinal": false,
    "name": "dataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "defaultValue": "'$.base.msg115'",
    "deprecated": false,
    "description": "empty data message의 메시지코드",
    "isFinal": false,
    "name": "emptyDataMessageCode",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "모바일에서 스크롤 첫번째 행이나 마지막핼일때 출력하는 메시지를 출력할지 여부를 결정한다.",
    "isFinal": false,
    "name": "gridScrollMessage",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "불규칙적인 row height을 감안한 스크롤러를 사용할때 불규칙적인 row의 원인 field를 지정하여 정확도를 높인다.\n BR 태그등이 사용되는 필드id를 지정한다.",
    "isFinal": false,
    "name": "irregularField",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "불규칙적인 row height을 감안한 스크롤러를 사용할지 여부.\n 이 값을 true로 해야 br, 소계등 기능 사용시 전체 row를 바르게 스크롤할 수 있다.\n 또한 이 값을 true로 지정할 경우 성능 저하가 발생될 수 있으므로 반드시 필요한 경우에만 사용하여야 한다.\n 기본 그리드뷰어인 LBufferGridView에서 irregularScroll 기능을 사용하지 않고, 몇가지 조건에 맞다면 LGridView 사용하는것이 좋다.\n 이는 irregularScroll의 경우 스크롤 제어를 위한 스크립트 처리 비용이 높아 성능 저하가 발생하며, 부자연스러운 스크롤 동작이 발생할수 있는데 반해\n LGridView의 경우 브라우저가 생성해내는 스크롤을 직접 사용하므로 빠르고 매끄럽기 때문이다.\n 다만 LGridView의 경우 대량건의 데이터 처리에 적합하지 않고, 소계, 합계 등 일부 기능을 지원 하지 않는다.",
    "isFinal": false,
    "name": "irregularScroll",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'Loading...'",
    "deprecated": false,
    "description": "load message",
    "isFinal": false,
    "name": "loadingMessage",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "10",
    "deprecated": false,
    "description": "minimum column width",
    "isFinal": false,
    "name": "minColumnWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "그리드의 데이터를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderDataTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "그리드를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "5",
    "deprecated": false,
    "description": "resize handle width",
    "isFinal": false,
    "name": "resizeHandleWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "grid body영역의 row에 mouseover됬을 경우 L-grid-row-over class를 추가 할 지 여부",
    "isFinal": false,
    "name": "rowHoverStyle",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "10",
    "deprecated": false,
    "description": "행단위 렌더링 맥스값, 한번 스크롤에 limit이상 scroll되면 page단위 렌더링이 일어나며,\n scrollTimetout값에 따라서 page rendering이 skip될 수 있다.",
    "isFinal": false,
    "name": "rowRenderingLimit",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "20",
    "deprecated": false,
    "description": "page rendering이 지정한 시간내에 두번 이상 발생하면 skip된다.",
    "isFinal": false,
    "name": "scrollTimeout",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "scroller 설정값 { scrollbar: 'y' }",
    "isFinal": false,
    "name": "scrollerConfig",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "그리드가 render시 row와 cell 관련 render event들를 실행할지 여부\n (row, cell관련 render이벤트를 사용시 성능 저하가 발생하므로 대량건 처리시는 반드시 true로 설정하여 이 기능을 skip해야함)",
    "isFinal": false,
    "name": "skipRowCellEvent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "DataSet과 sync 여부 객체",
    "isFinal": false,
    "name": "syncDataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LBufferGridView 성능을 위해 보이는 부분만 rendering하는 grid",
   "name": "Rui.ui.grid.LBufferGridView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LBufferGridView.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LBufferGridView 성능을 위해 보이는 부분만 rendering하는 grid",
  "events": [
   {
    "deprecated": false,
    "description": "그리드의 데이터가 랜더링되기 전 경우 호출되는 이벤트 (상황에 따라 반복 호출됨)",
    "name": "beforeRender",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "panel이 bodyScroll 되면 호출되는 이벤트",
    "name": "bodyScroll",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "getRenderCell 메소드가 호출되면 수행하는 이벤트",
    "name": "cellRendered",
    "parameters": [
     {
      "deprecated": false,
      "description": "css객체",
      "isFinal": false,
      "name": "css",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "버퍼 그리드의 전체가 랜더링 될 경우 호출되는 이벤트 (상황에 따라 반복 호출됨)",
    "name": "redoRender",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 데이터부분이 다시 렌더링되면 호출되는 이벤트",
    "name": "renderBody",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드의 데이터가 출력될 경우 호출되는 이벤트 (상황에 따라 반복 호출됨)",
    "name": "renderData",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 데이터가 랜더링된 후 경우 호출되는 이벤트 (상황에 따라 반복 호출됨)",
    "name": "rendered",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "getRenderRow 메소드가 호출되면 수행하는 이벤트",
    "name": "rowRendered",
    "parameters": [
     {
      "deprecated": false,
      "description": "css객체",
      "isFinal": false,
      "name": "css",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.data.LRecord"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드의 가로 스크롤이 되면 발생되는 이벤트\n 속성 : beforeScrollLeft: 이전 위치, scrollLeft: 현재 위치",
    "name": "scrollX",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 세로 스크롤이 되면 발생되는 이벤트\n 속성 : beforeScrollTop: 이전 위치, scrollTop: 현재 위치, isFirst: 처음 여부, isEnd: 마지막 여부, isUp: 위로 올라갈 경우",
    "name": "scrollY",
    "parameters": [],
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 sortField 메소드가 호출되거나 그리드에서 정렬버튼을 클릭할 경우 수행하는 이벤트",
    "name": "sortField",
    "parameters": [
     {
      "deprecated": false,
      "description": "this 객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "sortField값",
      "isFinal": false,
      "name": "sortField",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "sortDir값",
      "isFinal": false,
      "name": "sortDir",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "setSyncDataSet 메소드가 호출되면 수행하는 이벤트",
    "name": "syncDataSet",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "sync 여부",
      "isFinal": false,
      "name": "isSync",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "syncDataSet 속성에 따른 실제 적용 메소드",
    "name": "_setSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid의 width 재설정하기",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell에 Alt값을 할당",
    "name": "addCellAlt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell index",
      "isFinal": false,
      "name": "cell",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell Alt",
      "isFinal": false,
      "name": "title",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell에 css class 할당",
    "name": "addCellClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell index",
      "isFinal": false,
      "name": "cell",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell css class name",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 css class 할당",
    "name": "addRowClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row css class name",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "column의 width를 계산하여 리턴하는 메소드",
    "name": "adjustColumnWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "columns들에 이벤트를 탑재한다.",
    "name": "bindColumns",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 blur한다.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus delayTask를 취소한다.",
    "name": "cancelViewFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드 header에 sort정보들 삭제",
    "name": "clearFieldSortClass",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 defer를 연결하는 메소드",
    "name": "deferOnBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "행이 없을 경우에 출력 되는 메시지 처리",
    "name": "doEmptyDataMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body content rendering",
    "name": "doRenderData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event Object",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "sorting하기",
    "name": "doSortField",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "column index",
     "isFinal": false,
     "name": "colIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 sync 적용 메소드",
    "name": "doSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 unsync 적용 메소드",
    "name": "doUnSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom에서 cell index return",
    "name": "findCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageX",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "css class name",
      "isFinal": false,
      "name": "requiredCls",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom에서 cell return",
    "name": "findCellDom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom에서 field name return",
    "name": "findFieldName",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "string",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom에서 cell index return",
    "name": "findHeaderCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageX",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom에서 header cell return",
    "name": "findHeaderCellDom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dom",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "제공된 dom을 가지는 row를 찾아 그 index를 반환한다.",
    "name": "findRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageY",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "merge값 적용 여부에 대한 row 여부 (default true)",
      "isFinal": false,
      "name": "isMerge",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom에서 row return",
    "name": "findRowDom",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dompublic",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageY",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 focus한다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row에 focus주기",
    "name": "focusRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row를 생성한 후 추가할 row 정보를 계산한다.",
    "name": "getAfterRenderRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재행 번호",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row 출력 총 카운트",
      "isFinal": false,
      "name": "rowCount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "틀고정 전/후 여부",
      "isFinal": false,
      "name": "firstColumns",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "셀 머지 여부",
      "isFinal": false,
      "name": "spansm",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "소계 정보",
      "isFinal": false,
      "name": "sumRowsInfo",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row를 생성한 후 추가할 row 정보를 계산한다.",
    "name": "getAfterRowInfo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재행 번호",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row 출력 총 카운트",
      "isFinal": false,
      "name": "rowCount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "틀고정 전/후 여부",
      "isFinal": false,
      "name": "firstColumns",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row Dom에 추가할 aria 속성을 리턴한다.",
    "name": "getAriaAttr",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "colId의 소계를 계산할 row 건수의 이전 colId의 소계를 시작할 row 위치를 리턴한다.",
    "name": "getBeforeColSumCount",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "소계 정보 배열",
      "isFinal": false,
      "name": "sums",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "현재 row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "colId 값",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "현재 위치의 소계를 계산할 row 건수",
      "isFinal": false,
      "name": "dataRowCnt",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Int"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid body LElement return",
    "name": "getBodyEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid border width return",
    "name": "getBorderWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell dom에서 cell index return",
    "name": "getCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "cell dom",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageX",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell에 할당된 Alt값을 리턴한다.",
    "name": "getCellAlt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell index",
      "isFinal": false,
      "name": "cell",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "지정한 cell return",
    "name": "getCellDom",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll 관련, 신규 또는 변경된 행으로 scroll 이동하기 위한 좌표 return",
    "name": "getCellXY",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이동될 셀의 DOM",
     "isFinal": false,
     "name": "cellDom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": ".x .y",
    "returnType": "object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid column model return",
    "name": "getColumnModel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LColumnModel",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 그리드에서 데이터에 대한 총 건수를 리턴한다.",
    "name": "getDataCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataset return",
    "name": "getDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.data.LDataSet",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Body ul의 첫번째 li 객체를 리턴한다.",
    "name": "getFirstLiEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "지정한 column index의 header cell return",
    "name": "getHeaderCellEl",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "column index",
     "isFinal": false,
     "name": "colIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Header cell element list",
    "name": "getHeaderCellEls",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElementList",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header LElement return",
    "name": "getHeaderEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "불규칙적인 행의 높이 반환. irregularScroll 사용시의 행높이 반환.",
    "name": "getIrregularRowHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 불규칙 row의 max height을 반환할지 여부, false인 경우 min값 반환",
     "isFinal": false,
     "name": "max",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Body ul의 마지막 li 객체를 리턴한다.",
    "name": "getLastLiEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "마지막 sort 정보",
    "name": "getLastSortInfo",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "object.field object.dir",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Body ul의 첫번째 li 객체를 리턴한다.",
    "name": "getLi",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid의 최소 column width return",
    "name": "getMinColumnWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "column index",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "multiheader html을 생성하여 리턴하는 메소드, 틀고정에 따라",
    "name": "getMultiheaderHtml",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header html을 생성하여 리턴하는 메소드",
    "name": "getRenderBasicHeader",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell dom에 전에 탑재할 디자인용 html을 포함한다.",
    "name": "getRenderBeforeCell",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "override getRenderBody",
    "name": "getRenderBody",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] row의 height 검사용으로 일부만 랜더링 할지 여부",
      "isFinal": false,
      "name": "checkRowHeight",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] 이미 생성된 renderRange를 사용하여 랜더링할지 여부",
      "isFinal": false,
      "name": "redoRender",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": " @param (boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] 랜더링 할 때 사용할 renderRange",
      "isFinal": false,
      "name": "renderRange",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 cell html을 생성하여 리턴하는 메소드",
    "name": "getRenderCell",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header cell의 html을 생성하여 리턴하는 메소드",
    "name": "getRenderCellBasicHeader",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell dom에 기본 css를 탑재한다.",
    "name": "getRenderCellClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "css 배열",
      "isFinal": false,
      "name": "css",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "row 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col 값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "현재 행의 record 객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LRecord"
     },
     {
      "deprecated": false,
      "description": "현재 위치의 LColumn 객체",
      "isFinal": false,
      "name": "column",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.grid.LColumn"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell의 params 정보를 리턴한다.",
    "name": "getRenderCellParams",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col index값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "보여지는 컬럼의 총 건수",
      "isFinal": false,
      "name": "columnCount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column객체",
      "isFinal": false,
      "name": "column",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.grid.LColumn"
     },
     {
      "deprecated": false,
      "description": "record객체",
      "isFinal": false,
      "name": "record",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LRecord"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 cell의 value를 생성하여 리턴하는 메소드",
    "name": "getRenderCellValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 cell html을 생성하여 리턴하는 메소드",
    "name": "getRenderDummyCell",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header html을 생성하여 리턴하는 메소드",
    "name": "getRenderHeader",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "hidden여부의 column id",
      "isFinal": false,
      "name": "columnId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "hidden 여부",
      "isFinal": false,
      "name": "hidden",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "multiheader html을 생성하여 리턴하는 메소드",
    "name": "getRenderMultiheader",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering해야할 행 시작 index, 종료 index 계산후 return",
    "name": "getRenderRange",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "start, end",
    "returnType": "object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 row html을 생성하여 리턴하는 메소드",
    "name": "getRenderRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재행 번호",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row 출력 총 카운트",
      "isFinal": false,
      "name": "rowCount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "틀고정 전/후 여부",
      "isFinal": false,
      "name": "firstColumns",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "rowHeight을 검사하기위해 단일 컬럼만 랜더링 할때의 대상 fieldIndex",
      "isFinal": false,
      "name": "checkFieldIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 대한 class name 만들기",
    "name": "getRenderRowClassName",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "현재행 번호",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell등의 row의 내용 rendering후 결과 문자열 return",
    "name": "getRenderRowContent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "현재행 번호",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell등의 row의 내용 rendering후 결과 문자열 return",
    "name": "getRenderRowContent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "현재행 번호",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "실제 dom으로 출력된 행인지 점검하고 출력된 행이면 실제 dom상의 index return",
    "name": "getRenderedRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row위치의 내용을 update하는 메소드",
    "name": "getRendererValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "지정한 row의 cell return",
    "name": "getRowCellDom",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row element",
      "isFinal": false,
      "name": "rowDom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "override getRow",
    "name": "getRowDom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dataSet 기준 실제 row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "규칙적인 행의 높이 반환 (보통 행 랜더링시 사용함)",
    "name": "getRowHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 그리드에서 row에 대한 레코드 객체를 리턴한다.",
    "name": "getRowRecord",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.data.LRecord",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Row의 Dom Array return",
    "name": "getRows",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroller 객체를 리턴한다.",
    "name": "getScroller",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.LScroller",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "override getScrollerEl =&amp;gt; Editor에 의해 마지막 가린줄 클릭할 경우 scroller.el이 scroll되는것을 방지.",
    "name": "getScrollerEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row를 생성한 후 추가할 row 정보를 계산한다.",
    "name": "getSummaryInfos",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 와 col의 위치값의 html 내용을 리턴한다.",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 대한 현재 보이는 실제 row값을 리턴한다.",
    "name": "getVisibleRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "보이는 영역에 그려져야할 행의 수를 계산하여 반환",
    "name": "getVisibleRowCount",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] 보이는 영역 끝에 걸친 row는 제외하고 계산함.",
      "isFinal": false,
      "name": "excludeOver",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "[optional] 계산할 때 사용할 행의 높이",
      "isFinal": false,
      "name": "rowHeight",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Row가 존재하는지 여부 리턴",
    "name": "hasRows",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "행이 없을 경우에 출력 되는 메시지 해제",
    "name": "hideEmptyDataMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 changed 이벤트 발생시 호출되는 메소드",
    "name": "hideLoadingMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "column들을 초기화하는 메소드",
    "name": "initColumn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataset의 변경에 따른 body content rendering되었는지 여부",
    "name": "isSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "스크롤러를 생성한다. 스크롤은 행수에 따른 고정 넓이를 할당하고 한화면에 보여줄 수 있는 행수를 계산하여 처리",
    "name": "makeScroll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "가로 스크롤을 제공된 cell 기준으로 이동한다.",
    "name": "moveXScroll",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동될 셀의 DOM",
      "isFinal": false,
      "name": "cellDom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": ".x .y",
    "returnType": "object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "세로 스크롤을 제공된 row 기준으로 이동한다.",
    "name": "moveYScroll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 호출되는 메소드",
    "name": "onBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus 여부를 확인하는 메소드",
    "name": "onCheckFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "invalid시 호출되는 이벤트 메소드",
    "name": "onInvalid",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "valid시 호출되는 이벤트 메소드",
    "name": "onValid",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "auto width의 경우 panel width가 조정될 경우 재계산",
    "name": "onWidthResize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "상태를 유지한체 전체를 새롭게 그리기",
    "name": "redoRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "create,delete에 따라서 전체행 다시 그리기.",
    "name": "redoRenderData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "options 정보",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell에 Alt값을 삭제",
    "name": "removeCellAlt",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell index",
      "isFinal": false,
      "name": "cell",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell에 css class 삭제",
    "name": "removeCellClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell index",
      "isFinal": false,
      "name": "cell",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "cell css class name",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 css class 제거",
    "name": "removeRowClass",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row css class name",
      "isFinal": false,
      "name": "className",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body content rendering",
    "name": "renderBody",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "body rendering한 html",
      "isFinal": false,
      "name": "bodyHtml",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 환경정보 객체",
      "isFinal": false,
      "name": "option",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "구조 rendering",
    "name": "renderMaster",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "header rendering한 html",
     "isFinal": false,
     "name": "headerHtml",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "column resize의 경우 multiheader의 경우 다시 그려야만 width가 정상 적용된다.",
    "name": "renderMultiHeader",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "header rendering한 html",
     "isFinal": false,
     "name": "headerHtml",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "스크롤러를 재설정 한다.",
    "name": "resetScroller",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "panel에서 필요한 정보 가져오기",
    "name": "setPanel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 위치값의 html 내용을 바꾼다.",
    "name": "setRowValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "변경할 html 값",
      "isFinal": false,
      "name": "html",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataset의 변경에 따른 body content rendering",
    "name": "setSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 와 col의 위치값의 html 내용을 바꾼다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "변경할 html 값",
      "isFinal": false,
      "name": "html",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "행이 없을 경우 메시지 출력",
    "name": "showEmptyDataMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "loading시 message 출력",
    "name": "showLoadingMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus된 row에 focusEl 이동하기",
    "name": "syncFocusRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header의 scroll위치를 변경한다.",
    "name": "syncHeaderScroll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "틀고정시 li first의 top값을 일치시킨다.",
    "name": "syncLiFirst",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "column의 width를 보이는 가장 긴 데이터를 기준으로 width를 변경한다.",
    "name": "updateColumnFit",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "column idex",
     "isFinal": false,
     "name": "colIdx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "column의 width를 그리드의 width 맞게 변경한다.",
    "name": "updateColumnsAutoWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 늘리고자 하는 최대값",
     "isFinal": false,
     "name": "maxWidth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body의 empty 의 width 길이를 재 계산하여 적용한다.",
    "name": "updateEmptyWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 empty 의 width 길이를 재 계산하여 적용한다.",
    "name": "updateEmptyWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll 생성 여부에 따라 header의 width를 변경한다.",
    "name": "updateHeaderSize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row위치의 내용을 update하는 메소드",
    "name": "updateRenderRows",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid의 내부의 width, height 설정\n 그리드 및 상위가 display:none 으로 인해 안보이는 상태에서는 height할당되어있어도 getHeight는 0이다.",
    "name": "updateSizes",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "resize인지 여부",
     "isFinal": false,
     "name": "resize",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "행 넓이 설정",
    "name": "updateTotalWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드를 모두 다시 그린다.",
    "name": "updateView",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [
   {
    "deprecated": false,
    "description": "mouse over시 활성화된 header cell저장",
    "isFinal": false,
    "name": "activeHeaderEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LColumn의 editor에 해당되는 객체가 autoMapping을 지원하는 rendererField가 있을 경우 rendererField 기준으로 정렬이 가능하게 한다.",
    "isFinal": false,
    "name": "autoMappingSortable",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header offset LElement object",
    "isFinal": false,
    "name": "bodyEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "boder의 width 값\n 나머지 모두는 cell div에 border를 할당했지만, right border는 td에 할당 =&amp;gt; 내부 div에 할당시 padding에 의해 우측 border가 td범위 넘어서서 출력되지 않음",
    "isFinal": false,
    "name": "borderWidth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "regular expression for finding cell",
    "isFinal": false,
    "name": "cellRe",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell selector class name",
    "isFinal": false,
    "name": "cellSelector",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell selector search depth",
    "isFinal": false,
    "name": "cellSelectorDepth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LColumnModel 객체",
    "isFinal": false,
    "name": "columnModel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnModel",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "colum resizer object",
    "isFinal": false,
    "name": "columnResizer",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnResizer",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet 객체",
    "isFinal": false,
    "name": "dataSet",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "성능을 위해 데이터셋의 이벤트를 하나로 처리하게 구현",
    "isFinal": false,
    "name": "dataSetEvents",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "drag and drop proxy element object",
    "isFinal": false,
    "name": "ddProxyEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "drag and drop target element object",
    "isFinal": false,
    "name": "ddTargetEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "empty data message의 메시지코드",
    "isFinal": false,
    "name": "emptyDataMessageCode",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus LElement object",
    "isFinal": false,
    "name": "focusEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid panel object",
    "isFinal": false,
    "name": "gridPanel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LGridPanel",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "if header is disabled",
    "isFinal": false,
    "name": "headerDisabled",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header LElement object",
    "isFinal": false,
    "name": "headerEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header offset LElement object",
    "isFinal": false,
    "name": "headerOffsetEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header tool 사용 여부",
    "isFinal": false,
    "name": "headerTools",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "불규칙적인 row height을 감안한 스크롤러를 사용할때 불규칙적인 row의 원인 field를 지정하여 정확도를 높인다.\n BR 태그등이 사용되는 필드id를 지정한다.",
    "isFinal": false,
    "name": "irregularField",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "불규칙적인 row height을 감안한 스크롤러를 사용할지 여부.\n 이 값을 true로 해야 br, 소계등 기능 사용시 전체 row를 바르게 스크롤할 수 있다.\n 또한 이 값을 true로 지정할 경우 성능 저하가 발생될 수 있으므로 반드시 필요한 경우에만 사용하여야 한다.",
    "isFinal": false,
    "name": "irregularScroll",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "remote sort 여부",
    "isFinal": false,
    "name": "isRemoteSort",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "load message",
    "isFinal": false,
    "name": "loadingMessage",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "minimum column width",
    "isFinal": false,
    "name": "minColumnWidth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터 값이 변환 최종 시간을 저장한다.",
    "isFinal": false,
    "name": "modifiedDate",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "object type",
    "isFinal": false,
    "name": "otype",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "plugin등이 추가되어 scroller의 scroll height이 고정으로 줄어들어야 할 경우 이 값을 설정한다.\n 예를 들어 Total Summary Plugin이 추가되면 이 값이 고정된 값으로 설정되어 scroller의 height이 줄어든다.",
    "isFinal": false,
    "name": "pluginSpaceHeight",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 데이터를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderDataTime",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "보여지는 범위 계산용 내부 변수",
    "isFinal": false,
    "name": "renderRange",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderTime",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "resize handle width",
    "isFinal": false,
    "name": "resizeHandleWidth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "resize proxy LElement object",
    "isFinal": false,
    "name": "resizeProxyEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid body영역의 row에 mouseover됬을 경우 L-grid-row-over class를 추가 할 지 여부",
    "isFinal": false,
    "name": "rowHoverStyle",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "regular expression for finding row",
    "isFinal": false,
    "name": "rowRe",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "행단위 렌더링 맥스값, 한번 스크롤에 limit이상 scroll되면 page단위 렌더링이 일어나며,\n scrollTimetout값에 따라서 page rendering이 skip될 수 있다.",
    "isFinal": false,
    "name": "rowRenderingLimit",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row selector class name",
    "isFinal": false,
    "name": "rowSelector",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row selector search depth",
    "isFinal": false,
    "name": "rowSelectorDepth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "page rendering이 지정한 시간내에 두번 이상 발생하면 skip된다.",
    "isFinal": false,
    "name": "scrollTimeout",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Rui.ui.grid.LScroller",
    "isFinal": false,
    "name": "scroller",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LScroller",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroller 설정값 { scrollbar: 'y' }",
    "isFinal": false,
    "name": "scrollerConfig",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroller LElement object",
    "isFinal": false,
    "name": "scrollerEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LElement",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드가 render시 row와 cell 관련 render event들를 실행할지 여부\n (row, cell관련 render이벤트를 사용시 성능 저하가 발생하므로 대량건 처리시는 반드시 true로 설정하여 이 기능을 skip해야함)",
    "isFinal": false,
    "name": "skipRowCellEvent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "sort direction asc, desc",
    "isFinal": false,
    "name": "sortDirection",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "sort field name",
    "isFinal": false,
    "name": "sortFieldName",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet과 sync 여부 객체",
    "isFinal": false,
    "name": "syncDataSet",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "template 객체",
    "isFinal": false,
    "name": "templates",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.LTemplate",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "can drag and drop column",
    "isFinal": false,
    "name": "useColumnDD",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "can resize column",
    "isFinal": false,
    "name": "useColumnResize",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.grid.LBufferGridView",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "editor상태에서 enter를 치면 다음 editor cell로 이동할지 여부 속성",
    "isFinal": false,
    "name": "enterToMove",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "locked 속성",
    "isFinal": false,
    "name": "locked",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "row 선택시 자동 mark 를 처리할지 여부",
    "isFinal": false,
    "name": "marked",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "10",
    "deprecated": false,
    "description": "page up/down시 row 이동 값 속성",
    "isFinal": false,
    "name": "pageUpDownRow",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Tab키 입력시 이동여부",
    "isFinal": false,
    "name": "tabToMove",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "그리드에서 cell을 선택시 흐름 제어를 하는 객체",
   "name": "Rui.ui.grid.LSelectionModel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드에서 cell을 선택시 흐름 제어를 하는 객체",
  "events": [
   {
    "deprecated": false,
    "description": "그리드에서 cell 선택 취소시 발생하는 이벤트",
    "name": "deselectCell",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드에서 row 선택 취소시 발생하는 이벤트",
    "name": "deselectRow",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드에서 cell 선택시 발생하는 이벤트 (이 이벤트는 멀티 선택이 가능하다)",
    "name": "selectCell",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row 값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드에서 row 선택시 발생하는 이벤트",
    "name": "selectRow",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "selection된 값들을 모두 clear 한다.",
    "name": "clearSelection",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "grid view의 row를 선택을 취소하는 메소드",
    "name": "deDemarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 위치를 select를 취소하는 메소드",
    "name": "deSelectRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell를 선택 취소하는 메소드",
    "name": "doDeSelectCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이동 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 위치로 focus하는 메소드",
    "name": "doFocusRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid view의 row를 선택하는 메소드",
    "name": "doMarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 위치로 이동시키는 메소드",
    "name": "doMoveSelectRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "전 row 위치",
      "isFinal": false,
      "name": "oldRow",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "후 row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row의 전체 cell을 선택한다.",
    "name": "doRowSelectionCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "선택 취소 여부",
      "isFinal": false,
      "name": "isDeSelection",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet의 syncDataSet 이벤트 발생시 수행되는 메소드",
    "name": "doSetSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "sync 여부",
     "isFinal": false,
     "name": "isSync",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "선택한 cell Index를 리턴합니다.",
    "name": "getCol",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 선택한 col의 id를 리턴합니다.",
    "name": "getColId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터의 총건수를 리턴한다.",
    "name": "getDataCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에서 moveIdx만큼 이동할 row를 계산하여 리턴한다.",
    "name": "getMoveRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row의 위치를 리턴한다.",
    "name": "getRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택한 cell 정보를 리턴합니다.",
    "name": "getSelection",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell이 선택되었는지 여부를 리턴하는 메소드",
    "name": "hasSelectedCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이동 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 초기화하는 메소드",
    "name": "init",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 모든 row나 cell이 선택이 가능한지 여부를 리턴하는 메소드",
    "name": "isLocked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드의 row나 cell의 선택을 안되게 막는 메소드",
    "name": "lock",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet의 add 이벤트 발생시 호출되는 메소드",
    "name": "onAdd",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body mousedown 이벤트 발생시 호출되는 메소드",
    "name": "onBodyMouseDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell click 이벤트가 발생하면 호출되는 메소드",
    "name": "onCellClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header mousedown 이벤트 발생시 호출되는 메소드",
    "name": "onHdMouseDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "keydown 이벤트 발생시 호출되는 메소드",
    "name": "onKeydown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet의 marked 이벤트 발생시 호출되는 메소드",
    "name": "onMarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "page down 이벤트 발생시 호출되는 메소드",
    "name": "onPageDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "page up 이벤트 발생시 호출되는 메소드",
    "name": "onPageUp",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row click 이벤트 발생시 호출되는 메소드",
    "name": "onRowClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet의 rowPosChanged 이벤트 발생시 호출되는 메소드",
    "name": "onRowPosChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "tab키 이동 이벤트시 호출되는 메소드",
    "name": "onTabMoveCell",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell 위치로 이동시키는 메소드",
    "name": "selectCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이동 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row 위치를 select하는 메소드",
    "name": "selectRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 row나 cell의 선택을 안되게 막혀 있던 기능을 다시 선택되게 하는 메소드",
    "name": "unlock",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.ui.grid.LSelectionModel",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드의 height를 자동으로 부모 사이즈에 맞춰주는 기능. height를 맞추기 위해서는 그리드 부모 dom이 100%가 적용되어야 한다. 부모가 늘어나지 않으면 적용되지 않음.\n autoHeight를 적용하여도 height의 기본값은 반드시 적용한다.",
    "isFinal": false,
    "name": "autoHeight",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "autoHeight 적용시 기준이 될 부모 HTML 의 id를 적용한다. parent dom이 반드시 보여야 한다. 보아지 않을 경우 height는 0이 될 수 있다.",
    "isFinal": false,
    "name": "autoHeightParentId",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "cell focus시 자동 edit상태로 전환할지 여부 속성\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/grid/gridpanelEditSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "autoToEdit",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드의 width를 자동으로 부모 사이즈에 맞춰주는 기능.\n autoWidth를 적용하여도 width의 기본값은 반드시 적용한다.",
    "isFinal": false,
    "name": "autoWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "LGridPanel의 border width값",
    "isFinal": false,
    "name": "borderWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "click시 edit상태로 전환할지 여부 속성",
    "isFinal": false,
    "name": "clickToEdit",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "columnModel 객체",
    "isFinal": false,
    "name": "columnModel",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnModel",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "편집기가 수행할 수 있는지 여부를 정하는 속성",
    "isFinal": false,
    "name": "editable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'$.base.msg115'",
    "deprecated": false,
    "description": "LBufferGridView의 empty data message의 메시지코드",
    "isFinal": false,
    "name": "emptyDataMessageCode",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "그리드에서 Ctrl Key를 이용하여 쉘을 선택할지 여부를 결정한다.",
    "isFinal": false,
    "name": "enableCtrlKey",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "그리드에서 Shift Key를 이용하여 쉘을 선택할지 여부를 결정한다.",
    "isFinal": false,
    "name": "enableShiftKey",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "enter시 edit상태로 전환할지 여부 속성",
    "isFinal": false,
    "name": "enterToEdit",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'Loading...'",
    "deprecated": false,
    "description": "LBufferGridView의 load message",
    "isFinal": false,
    "name": "loadingMessage",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "그리드의 mouse관련 이벤트를 활성화 할지 여부를 결정",
    "isFinal": false,
    "name": "mouseEvent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "multiLine이 들어가 있는 컬럼의 editor는 height를 30을 더 높게 출력한다.",
    "isFinal": false,
    "name": "multiLineEditor",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "LBufferGridView의 그리드의 데이터를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderDataTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "LBufferGridView의 그리드를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "rowModel 객체",
    "isFinal": false,
    "name": "rowModel",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.grid.LRowModel",
    "visibility": "public"
   },
   {
    "defaultValue": "10",
    "deprecated": false,
    "description": "LBufferGridView의 행단위 렌더링 맥스값, 한번 스크롤에 limit이상 scroll되면 page단위 렌더링이 일어나며,\n scrollTimetout값에 따라서 page rendering이 skip될 수 있다.",
    "isFinal": false,
    "name": "rowRenderingLimit",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "20",
    "deprecated": false,
    "description": "LBufferGridView의 page rendering이 지정한 시간내에 두번 이상 발생하면 skip된다.",
    "isFinal": false,
    "name": "scrollTimeout",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "LBufferGridView의 scroller 설정값 { scrollbar: 'y' }",
    "isFinal": false,
    "name": "scrollerConfig",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "그리드의 row나 cell 선택시 기능을 처리하는 객체",
    "isFinal": false,
    "name": "selectionModel",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Rui.ui.grid.LSelectionModel",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "엑셀 다이얼로그를 출력할지 말지 여부를 설정한다.",
    "isFinal": false,
    "name": "showExcelDialog",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "LBufferGridView의 그리드가 render시 row와 cell render event를 skip할지 여부(성능과 연관되므로 대량건 처리시는 false로 처리)",
    "isFinal": false,
    "name": "skipRowCellEvent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "그리드의 이벤트를 bubble 처리를 할지 여부를 결정한다.",
    "isFinal": false,
    "name": "stopEventBubble",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "LBufferGridView의 DataSet과 sync 여부 객체",
    "isFinal": false,
    "name": "syncDataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Tablet 모드를 적용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "tabletMode",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Tablet 모드를 출력할 tabletViewer의 url를 지정한다.",
    "isFinal": false,
    "name": "tabletViewerUrl",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "그리드에 툴팁을 표시하기 위해 사용할 툴팁 객체",
    "isFinal": false,
    "name": "tooltip",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.grid.LTooltip",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "multi cell을 선택한 후 delete key로 데이터를 삭제할 수 있는지 여부를 결정한다.",
    "isFinal": false,
    "name": "useMultiCellDeletable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "paste 기능을 활성화 할지 여부를 결정한다.",
    "isFinal": false,
    "name": "usePaste",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "paste 이벤트에서 cell단위 paste 이벤트를 발생할 지 여부를 결정한다.(true 로 하면 이벤트가 발생하나 성능이 떨어진다.)",
    "isFinal": false,
    "name": "usePasteCellEvent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "오른쪽 마우스를 클릭할때 action menu가 활성화될지 여부",
    "isFinal": false,
    "name": "useRightActionMenu",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "복사/붙여넣기시 그리드의 가상 랜더링 기준으로 복사할지 여부를 결정한다. (false면 DataSet기준, true면 가상 랜더링 기준)",
    "isFinal": false,
    "name": "virtualClipboard",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "그리드의 편집기능을 탑재하는 Panel, 이 외에",
   "name": "Rui.ui.grid.LGridPanel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LGridPanel.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드의 편집기능을 탑재하는 Panel, 이 외에",
  "events": [
   {
    "deprecated": false,
    "description": "edit가 되기전에 호출되는 이벤트",
    "name": "beforeEdit",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "colId값",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 cellClick 되면 호출되는 이벤트",
    "name": "cellClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 cellDblClick 되면 호출되는 이벤트",
    "name": "cellDblClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col의 id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 cellMouseDown 되면 호출되는 이벤트",
    "name": "cellMouseDown",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 click 되면 호출되는 이벤트",
    "name": "click",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "copy시 호출되는 이벤트",
    "name": "copy",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 dblClick 되면 호출되는 이벤트",
    "name": "dblclick",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 headerClick 되면 호출되는 이벤트",
    "name": "headerClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 headerDblClick 되면 호출되는 이벤트",
    "name": "headerDblClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 headerMouseDown 되면 호출되는 이벤트",
    "name": "headerMouseDown",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 keydown 되면 호출되는 이벤트",
    "name": "keydown",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 keypress 되면 호출되는 이벤트",
    "name": "keypress",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 mousedown 되면 호출되는 이벤트",
    "name": "mousedown",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 mouseout 되면 호출되는 이벤트 (mouseEvent 생성자 속성이 true일 경우에만 작동한다. 성능이 느려지므로 그리드 3개 이상이 포함된 화면에서 사용 불가)",
    "name": "mouseout",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 mouseover 되면 호출되는 이벤트 (mouseEvent 생성자 속성이 true일 경우에만 작동한다. 성능이 느려지므로 그리드 3개 이상이 포함된 화면에서 사용 불가)",
    "name": "mouseover",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 mouseup 되면 호출되는 이벤트 (mouseEvent 생성자 속성이 true일 경우에만 작동한다. 성능이 느려지므로 그리드 3개 이상이 포함된 화면에서 사용 불가)",
    "name": "mouseup",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "paste시 호출되는 이벤트",
    "name": "paste",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "paste시 해당 cell에 붙여넣기 시 발생하는 이벤트로 usePasteCellEvent 생성자 값이 true일 경우에반 발생한다.",
    "name": "pasteCell",
    "parameters": [
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "colId값",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "현재 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cellClick시 해당 cell에 'L-popup-button-icon' css가 탑재되면 호출되는 popup 이벤트",
    "name": "popup",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "colId값",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "클릭된 버튼",
      "isFinal": false,
      "name": "buttonEl",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.LElement"
     },
     {
      "deprecated": false,
      "description": "셀 에디터 가능 여부",
      "isFinal": false,
      "name": "editable",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Boolean"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 rowClick 되면 호출되는 이벤트",
    "name": "rowClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 rowDblClick 되면 호출되는 이벤트",
    "name": "rowDblClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "row값",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "e",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 rowMouseDown 되면 호출되는 이벤트",
    "name": "rowMouseDown",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel이 autoWidth === true일 경우 resizing이 발생했을 경우 발생하는 event",
    "name": "widthResize",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "config의 height값을 적용하는 메소드\n LPanel처럼 innerElement로 계산하면 sizing이 안된다.",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이벤트 종류 값",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "이벤트 인수",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "호출할 scope 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "config의 width값을 적용하는 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이벤트 종류 값",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "이벤트 인수",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object[]"
     },
     {
      "deprecated": false,
      "description": "호출할 scope 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor한 값을 반영하는 메소드",
    "name": "applyValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "종료시 dataSet에 반영 여부",
      "isFinal": false,
      "name": "isApply",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "Editor를 stop할지 여부",
      "isFinal": false,
      "name": "isStopEditor",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "부모의 dom 객체를 기준으로 height 100%으로 채운다.",
    "name": "availableHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional] 기준이 되는 부모 객체의 id나 dom",
      "isFinal": false,
      "name": "parentId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|HTMLElement"
     },
     {
      "deprecated": false,
      "description": "[optional] 추가 여유 공간을 확보하기 위해 마이너스할 높이",
      "isFinal": false,
      "name": "margin",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 blur한다.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "클립보드의 데이터를 적용한다.",
    "name": "clipboardToLoad",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Tablet뷰어를 닫습니다.",
    "name": "closeTabletViewer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터를 클립보드로 복사한다.",
    "name": "dataToClipboard",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Grid view에 redoRender가 발생하면 호출되는 메소드",
    "name": "doRedoRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell 강제 선택하는 메소드",
    "name": "doSelectCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int|String"
     },
     {
      "deprecated": false,
      "description": "edit 여부",
      "isFinal": false,
      "name": "edit",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 사용중인 editor들을 fragment로 백업한다.",
    "name": "editorToFragment",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Overlay fillHeight에서 container = this.element || this.innerElement, this.element가 우선이 되도록 순서 변경. panel을 height를 부모의 나머지 공간까지 채우는 메소드",
    "name": "fillHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The element which should be resized to fill out the height of the container element.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 focus한다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "grid에서 focus되어야 할 위치 지정 메소드",
    "name": "focusRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 사용중인 fragment에 있는 editor들을 editor로 복원한다.",
    "name": "fragmentToEditor",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid panel border width",
    "name": "getBorderWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "grid의 row edit view를 리턴하는 메소드",
    "name": "getEditView",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row model을 리턴하는 메소드",
    "name": "getRowModel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LRowModel",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "selection model을 리턴하는 메소드",
    "name": "getSelectionModel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LSelectionModel",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "gridview를 리턴하는 메소드",
    "name": "getView",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LGridView",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "this.body에 이벤트를 탑재한다.",
    "name": "initBodyEvent",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Column 객체들을 초기화 한다.",
    "name": "initColumns",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Initializes the custom events for Dialog which are fired\n automatically at appropriate times by the Dialog class.",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 editable값을 리턴하는 메소드",
    "name": "isEditable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "selected된 cell의 데이터를 삭제한다.",
    "name": "multiCellDeletable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "edit 상태로 종료하는 이벤트 메소드",
    "name": "onApplyStopEditor",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cellClick 이벤트 발생시 호출되는 메소드",
    "name": "onCellclick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "celldbclick 이벤트 발생시 호출되는 메소드",
    "name": "onCelldblclick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "click 이벤트 발생시 호출되는 메소드",
    "name": "onClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Column 객체들을 hidden시 백업한다.",
    "name": "onColumnHidden",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "columnMove 이벤트 발생시 호출되는 메소드",
    "name": "onColumnMove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "columnResize 이벤트 발생시 호출되는 메소드",
    "name": "onColumnResize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "columnsChanged 이벤트 발생시 호출되는 메소드",
    "name": "onColumnsChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "autoWidth === true시 gridView header, scroller width 재계산 용도",
    "name": "onContentResized",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "contextmenu 이벤트 발생시 호출되는 메소드",
    "name": "onContextMenu",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "copy paste를 판단하는 이벤트",
    "name": "onCopyPaste",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor 수행된후에 dataSet의 값이 변경되면 호출되는 메소드",
    "name": "onDataSetChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dblclick 이벤트 발생시 호출되는 메소드",
    "name": "onDblClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor에서 blur 이벤트 발생시 호출되는 메소드",
    "name": "onEditorBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor에서 changed 이벤트 발생시 호출되는 메소드",
    "name": "onEditorChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Editor시 키 이벤트 처리 메소드",
    "name": "onEditorKey",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Editor시 키다운 이벤트 처리 메소드",
    "name": "onEditorKeyDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "keydown 이벤트 발생시 호출되는 메소드",
    "name": "onKeyDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "keypress 이벤트 발생시 호출되는 메소드",
    "name": "onKeypress",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mousedown 이벤트 발생시 호출되는 메소드",
    "name": "onMouseDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mouseout 이벤트 발생시 호출되는 메소드",
    "name": "onMouseOut",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mouseover 이벤트 발생시 호출되는 메소드",
    "name": "onMouseOver",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "mouseup 이벤트 발생시 호출되는 메소드",
    "name": "onMouseUp",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "edit 상태로 종료하는 이벤트 메소드",
    "name": "onReStartEditor",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "buffer view에 redoRender 이벤트 발생시 호출되는 메소드",
    "name": "onRedoRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "view 에 blur 이벤트가 발생하면 호출되는 메소드",
    "name": "onViewBlur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor를 다시 실행한다.",
    "name": "restartEditor",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드를 엑셀 파일로 저장한다\n config.js에 [$.ext.grid.excelDownLoadUrl] 경로의 값이 있어야함.",
    "name": "saveExcel",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "저장할 파일명",
      "isFinal": false,
      "name": "fileName",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "[optional] 저장할 컬럼 정보를 가지는 컬럼모델 {ColumnModel: 엑셀 포멧을 정의할 새로운 컬럼 모델, url: 서버 주소, useXmlExcel: Xml 포멧, useJsonExcel, markedOnly: marked된 row만 다운로드(단, 셀병합제외 기능만 지원) }",
      "isFinal": false,
      "name": "config",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "plugin": "/plugins/ui/grid/LGridView.js,/plugins/ui/grid/LGridPanelExt.js",
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell 강제 선택하는 메소드",
    "name": "selectCell",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col 위치",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int|String"
     },
     {
      "deprecated": false,
      "description": "edit 여부",
      "isFinal": false,
      "name": "edit",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell config 정보를 설정한다.",
    "name": "setCellConfig",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row 위치",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "col id",
      "isFinal": false,
      "name": "colId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "config 키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "config 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "클립보드 데이터를 그리드에 반영",
    "name": "setClipData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "data",
     "isFinal": false,
     "name": "clipboard",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋을 변경하는 메소드",
    "name": "setDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 데이터셋",
     "isFinal": false,
     "name": "dataSet",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LDataSet"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 editable 값을 셋팅하는 메소드",
    "name": "setEditable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "editable값",
     "isFinal": false,
     "name": "editable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "footer를 변경한다.",
    "name": "setFooter",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 높이를 설정한다.",
    "name": "setHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 높이.",
     "isFinal": false,
     "name": "height",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet과 sync상태를 셋팅하는 메소드 (대량 변경건 처리시 사용)",
    "name": "setSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "isSync값",
     "isFinal": false,
     "name": "isSync",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "엘리먼트의 넓이를 설정한다.",
    "name": "setWidth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "새로운 넓이.",
     "isFinal": false,
     "name": "width",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "검색 dialog를 출력한다.",
    "name": "showSearchDialog",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Tablet뷰어로 그리드를 출력합니다.",
    "name": "showTabletViewer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "edit 상태로 시작하는 메소드",
    "name": "startEditor",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "edit 상태로 종료하는 메소드",
    "name": "stopEditor",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "종료시 dataSet에 반영 여부",
     "isFinal": false,
     "name": "isApply",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "column의 width를 그리드의 width 맞게 변경한다.",
    "name": "updateColumnsAutoWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LGridPanel Size를 재계산",
    "name": "updateSizes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LGridView를 리턴하는 메소드",
    "name": "updateViewHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.grid.LGridView",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LGridPanel autoWidth === true일 경우 동작  IE의 size 안 줄어드는 버그 해결.",
    "name": "updateWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "width값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [
   {
    "deprecated": false,
    "description": "cell 의 css가 editable이 적용될시 사용하는 CSS값",
    "isFinal": false,
    "name": "CLASS_GRID_CELL_EDITABLE",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row 의 css가 editable이 적용될시 사용하는 CSS값",
    "isFinal": false,
    "name": "CLASS_GRID_ROW_EDITABLE",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 height를 자동으로 부모 사이즈에 맞춰주는 기능. height를 맞추기 위해서는 그리드 부모 dom이 100%가 적용되어야 한다. 부모가 늘어나지 않으면 적용되지 않음.\n autoHeight를 적용하여도 height의 기본값은 반드시 적용한다.",
    "isFinal": false,
    "name": "autoHeight",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "autoHeight 적용시 기준이 될 부모 HTML 의 id를 적용한다. parent dom이 반드시 보여야 한다. 보아지 않을 경우 height는 0이 될 수 있다.",
    "isFinal": false,
    "name": "autoHeightParentId",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "cell focus시 자동 edit상태로 전환할지 여부 속성",
    "isFinal": false,
    "name": "autoToEdit",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 width를 자동으로 부모 사이즈에 맞춰주는 기능\n autoWidth를 적용하여도 width의 기본값은 반드시 적용한다.",
    "isFinal": false,
    "name": "autoWidth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LGridPanel의 border width값",
    "isFinal": false,
    "name": "borderWidth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "click시 edit상태로 전환할지 여부 속성",
    "isFinal": false,
    "name": "clickToEdit",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "columnModel 객체",
    "isFinal": false,
    "name": "columnModel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnModel",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "edit가 가능한지 여부 속성",
    "isFinal": false,
    "name": "editable",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드에서 Ctrl Key를 이용하여 쉘을 선택할지 여부를 결정한다.",
    "isFinal": false,
    "name": "enableCtrlKey",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드에서 Shift Key를 이용하여 쉘을 선택할지 여부를 결정한다.",
    "isFinal": false,
    "name": "enableShiftKey",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "enter시 edit상태로 전환할지 여부 속성",
    "isFinal": false,
    "name": "enterToEdit",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor 상태인지를 여부 속성",
    "isFinal": false,
    "name": "isEdit",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 mouse관련 이벤트를 활성화 할지 여부를 결정",
    "isFinal": false,
    "name": "mouseEvent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "multiLine이 들어가 있는 컬럼의 editor는 height를 30을 더 높게 출력한다.",
    "isFinal": false,
    "name": "multiLineEditor",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "object type 속성",
    "isFinal": false,
    "name": "otype",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rowModel 객체",
    "isFinal": false,
    "name": "rowModel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LRowModel",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "클립보드 copy &amp; Paste시 오른쪽 마지막 공백을 제거함",
    "isFinal": false,
    "name": "rtrimWhiteSpace",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 row나 cell 선택시 기능을 처리하는 객체",
    "isFinal": false,
    "name": "selectionModel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LSelectionModel",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "엑셀 다이얼로그를 출력할지 말지 여부를 설정한다.",
    "isFinal": false,
    "name": "showExcelDialog",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드가 render시 row와 cell render event를 skip할지 여부(성능과 연관되므로 대량건 처리시는 false로 처리)",
    "isFinal": false,
    "name": "skipRowCellEvent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 이벤트를 bubble 처리를 할지 여부를 결정한다.",
    "isFinal": false,
    "name": "stopEventBubble",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "편집의 값이 바뀔 경우 시스템 콤포넌트에 의해서 값이 바꿨는지 사용자가 바꿨는지 판단하는 값",
    "isFinal": false,
    "name": "systemSelect",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tablet 모드를 적용할지 여부를 결정한다.",
    "isFinal": false,
    "name": "tabletMode",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tablet 모드를 출력할 tabletViewer의 url를 지정한다.",
    "isFinal": false,
    "name": "tabletViewerUrl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드에 툴팁을 표시하기 위해 사용할 툴팁 객체",
    "isFinal": false,
    "name": "tooltip",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LTooltip",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "multi cell을 선택한 후 delete key로 데이터를 삭제할 수 있는지 여부를 결정한다.",
    "isFinal": false,
    "name": "useMultiCellDeletable",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "paste 기능을 활성화 할지 여부를 결정한다.",
    "isFinal": false,
    "name": "usePaste",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "usePasteCellEvent",
    "isFinal": false,
    "name": "usePasteCellEvent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "오른쪽 마우스를 클릭할때 action menu가 활성화될지 여부",
    "isFinal": false,
    "name": "useRightActionMenu",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "GridView",
    "isFinal": false,
    "name": "view",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LGridView",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "복사/붙여넣기시 그리드의 가상 랜더링 기준으로 복사할지 여부를 결정한다. (false면 DataSet기준, true면 가상 랜더링 기준)",
    "isFinal": false,
    "name": "virtualClipboard",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LPanel",
  "type": "Rui.ui.grid.LGridPanel",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "editor 속성",
    "isFinal": false,
    "name": "editor",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "column 속성",
    "isFinal": false,
    "name": "otype",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumn",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LEditorPanel",
   "name": "Rui.ui.grid.LEditorPanel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LEditorPanel.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LEditorPanel",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor의 region값을 셋팅하는 메소드",
    "name": "setRegion",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "region값",
     "isFinal": false,
     "name": "region",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.util.LRegion"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.grid.LEditorPanel",
  "visibility": "protected"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "y스크롤바의 상하 스크롤 버튼을 제어하여 한번에 한개의 row씩만 스크롤할 수 있도록 한다.",
    "isFinal": false,
    "name": "manageSteps",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "마우스 상하 스크롤 한 단위에 이동할 row수",
    "isFinal": false,
    "name": "scrollStep",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "2",
    "deprecated": false,
    "description": "마우스 상하 휠스크롤 한 단위에 이동할 row수",
    "isFinal": false,
    "name": "wheelStep",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LGridScroller",
   "name": "Rui.ui.grid.LGridScroller",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "LGridScroller의 초기 설정값",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LGridScroller",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "X scroller의 최대 스크롤값(scrollLeft)을 반환한다.",
    "name": "getMaxScrollLeft",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional]",
     "isFinal": false,
     "name": "margin",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Y scroller의 최대 스크롤값(scrollTop)을 반환한다.",
    "name": "getMaxScrollTop",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional]",
     "isFinal": false,
     "name": "margin",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll의 1단위 이전 scroll 값을 반환한다.",
    "name": "getPrevious",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회할 지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll x,y 가져오기",
    "name": "getScroll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "coord",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "L-scroll DOM의 region을 반환한다.",
    "name": "getScrollRegion",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll의 scrollTop 값을 반환",
    "name": "getScrollTop",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드에서 현재 보이는 영역 제일위에 위치 할 row의 index를 반환한다.",
    "name": "getStartRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll을 원하는 위치로 이동시킨다.\n go 함수의 경우 스크롤 위치를 기억한다. 이동되어야 할 위치가 없더라도 후에 재 랜더링 시에 이동되어야 할 위치가 확보되면 그때 이동한다.",
    "name": "go",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "위치 px (scrollTop 또는 scrollLeft)",
      "isFinal": false,
      "name": "이동할",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] x-scrollbar를 이동할지 여부",
      "isFinal": false,
      "name": "x",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scroll이 끝 위치에 있는지 여부 반환.",
    "name": "isEnd",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회하는지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "scroll이 처음 위치에 있는지 여부 반환.",
    "name": "isStart",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] x-scrollbar의 값을 조회하는지 여부",
     "isFinal": false,
     "name": "x",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "grid scroller의 값들을 설정 또는 재설정 한다.",
    "name": "setSizes",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "[optional]",
      "isFinal": false,
      "name": "scrollStep",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional]",
      "isFinal": false,
      "name": "wheelStep",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional]",
      "isFinal": false,
      "name": "touchScrollStep",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.grid.LGridScroller",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "마우스나 키보드를 적용하는 action 메뉴를 출력한다.",
   "name": "Rui.ui.grid.LActionMenuGrid",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LActionMenuGrid.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "마우스나 키보드를 적용하는 action 메뉴를 출력한다.",
  "events": [],
  "methods": [],
  "module": "ui",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.grid.LActionMenuGrid",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "RichUI의 base, core, ui, form, grid 라이브러리를 runtime 환경에 맞게 로딩 시켜주는 기능을 하는 bootstrap 유틸리티 이며\n 최적의 운영환경 제공과 동시에 원활한 디버깅을 제공하는것이 목적이다.\n 즉, 최적의 성능을 위해 min 버전의 라이브러리를 사용하여 운영중인 페이지를 dev 또는 debug용 라이브러리로 교체하여 디버깅 할 수 있다.\n&amp;lt;pre&amp;gt;\n1. 일반 옵션\ndebug, dev, min, nodebug 네 종류의 rui_runtime을 사용할 수 있다.\n단 localhost(127.0.0.1)의 경우 무조건 기본 debug로 동작하며, nodebug 옵션을 통해 압축된 min 버전을 테스트할 수 있다.\n값:\ndev, debug, min, nodebug\n사용예:\nhttp://www.myproject.com/myproject/page.html?rui_runtime=debug\nhttp://www.myproject.com/myproject/page.html?rui_runtime=dev\nhttp://www.myproject.com/myproject/page.html?rui_runtime=min\nhttp://localhost:8080/myproject/page.html?rui_runtime=nodebug\n\n2. 고정 옵션\nrui_runtime에 hold 옵션을 적용하여 값을 고정시켜놓고 이후엔 지정하지 않아도 스스로 적용되도록 할 수 있다.\n또한 rui_runtime이 iframe 내부까지 전달될 수 없으므로 hold옵션을 사용하여 iframe 내부와 무관하게 사용할수도 있다.\n값:\ndev-hold, debug-hold, min-hold\n사용예:\nhttp://www.myproject.com/myproject/page.html?rui_runtime=debug-hold\nhttp://www.myproject.com/myproject/page.html?rui_runtime=dev-hold\nhttp://www.myproject.com/myproject/page.html?rui_runtime=min-hold\n\n3. 기본값\nlocalhost, 127.0.0.1은 debug 라이브러리로 동작\nlocalhost, 127.0.0.1을 제외한 기타 Host의 경우 min 라이브러리로 동작\n\n4. 고정옵션인 hold 사용시 유지기간\nCookie를 사용하여 hold를 결정하며 브라우저 쿠키가 유효한 한 7일간 유지된다.\n\n5. 고정옵션 hold 해제방법\nnodebug 옵션으로 실행하면 이후 hold 옵션은 제거됨.\n\n사용예:\n1. 적용\nhttp://www.myproject.com/myproject/page.html?rui_runtime=debug-hold\n2. 해제\nhttp://www.myproject.com/myproject/page.html?rui_runtime=nodebug\n\n&amp;lt;/pre&amp;gt;",
   "name": "Rui.LBootstrap",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "RichUI의 base, core, ui, form, grid 라이브러리를 runtime 환경에 맞게 로딩 시켜주는 기능을 하는 bootstrap 유틸리티 이며\n 최적의 운영환경 제공과 동시에 원활한 디버깅을 제공하는것이 목적이다.\n 즉, 최적의 성능을 위해 min 버전의 라이브러리를 사용하여 운영중인 페이지를 dev 또는 debug용 라이브러리로 교체하여 디버깅 할 수 있다.\n&amp;lt;pre&amp;gt;\n1. 일반 옵션\ndebug, dev, min, nodebug 네 종류의 rui_runtime을 사용할 수 있다.\n단 localhost(127.0.0.1)의 경우 무조건 기본 debug로 동작하며, nodebug 옵션을 통해 압축된 min 버전을 테스트할 수 있다.\n값:\ndev, debug, min, nodebug\n사용예:\nhttp://www.myproject.com/myproject/page.html?rui_runtime=debug\nhttp://www.myproject.com/myproject/page.html?rui_runtime=dev\nhttp://www.myproject.com/myproject/page.html?rui_runtime=min\nhttp://localhost:8080/myproject/page.html?rui_runtime=nodebug\n\n2. 고정 옵션\nrui_runtime에 hold 옵션을 적용하여 값을 고정시켜놓고 이후엔 지정하지 않아도 스스로 적용되도록 할 수 있다.\n또한 rui_runtime이 iframe 내부까지 전달될 수 없으므로 hold옵션을 사용하여 iframe 내부와 무관하게 사용할수도 있다.\n값:\ndev-hold, debug-hold, min-hold\n사용예:\nhttp://www.myproject.com/myproject/page.html?rui_runtime=debug-hold\nhttp://www.myproject.com/myproject/page.html?rui_runtime=dev-hold\nhttp://www.myproject.com/myproject/page.html?rui_runtime=min-hold\n\n3. 기본값\nlocalhost, 127.0.0.1은 debug 라이브러리로 동작\nlocalhost, 127.0.0.1을 제외한 기타 Host의 경우 min 라이브러리로 동작\n\n4. 고정옵션인 hold 사용시 유지기간\nCookie를 사용하여 hold를 결정하며 브라우저 쿠키가 유효한 한 7일간 유지된다.\n\n5. 고정옵션 hold 해제방법\nnodebug 옵션으로 실행하면 이후 hold 옵션은 제거됨.\n\n사용예:\n1. 적용\nhttp://www.myproject.com/myproject/page.html?rui_runtime=debug-hold\n2. 해제\nhttp://www.myproject.com/myproject/page.html?rui_runtime=nodebug\n\n&amp;lt;/pre&amp;gt;",
  "events": [],
  "methods": [],
  "propertys": [],
  "scope": "instance",
  "type": "Rui.LBootstrap",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "color 전환을 위한 LAnim subclass.\n &amp;lt;p&amp;gt;Usage: &amp;lt;code&amp;gt;var myAnim = new Y.LColorAnim(el, { backgroundColor: { from: '#FF0000', to: '#FFFFFF' } }, 1, Y.LEasing.easeOut);&amp;lt;/code&amp;gt; 컬러값은 다음과 같이 지정될 수 있다. 112233, #112233,\n [255,255,255], or rgb(255,255,255)&amp;lt;/p&amp;gt;",
   "name": "Rui.fx.LColorAnim",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "animated 되어질 element에 대한 참조",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "HTMLElement | String"
    },
    {
     "deprecated": false,
     "description": "animated될 attribute\n 각각의 attribute는 최소한 \"to\"나 \"by\" member가 정의된 object이다.\n 추가적인 옵션 member들은 \"from\"(defaults to current value)과 \"unit\"(defaults to \"px\") 이다.\n 모든 attribute 이름은 camelCase 방식을 사용한다.",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "(optional, 기본값 1초) animation의 길이 (frames or seconds), defaults to time-based",
     "isFinal": false,
     "name": "duration",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Number"
    },
    {
     "deprecated": false,
     "description": "(optional, Rui.fx.LEasing.easeNone 기본값) 각 frame별 attribute에 적용되는 값을 계산 (일반적으로 Rui.fx.LEasing method)",
     "isFinal": false,
     "name": "method",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "color 전환을 위한 LAnim subclass.\n &amp;lt;p&amp;gt;Usage: &amp;lt;code&amp;gt;var myAnim = new Y.LColorAnim(el, { backgroundColor: { from: '#FF0000', to: '#FFFFFF' } }, 1, Y.LEasing.easeOut);&amp;lt;/code&amp;gt; 컬러값은 다음과 같이 지정될 수 있다. 112233, #112233,\n [255,255,255], or rgb(255,255,255)&amp;lt;/p&amp;gt;",
  "events": [],
  "methods": [],
  "module": "animation",
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.fx.LAnim",
  "type": "Rui.fx.LColorAnim",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LAnim subclass for scrolling elements to a position defined by the \"scroll\" member of \"attributes\".\n \"attribute\"의 \"scroll\" member에 의해 정의된 위치로 element들을 스크롤하기 위한 LAnim subclass.\n All \"scroll\" members are arrays with x, y scroll positions.\n 모든 \"scroll\" member는 x, y 스크롤 위치 배열이다.\n &amp;lt;p&amp;gt;Usage: &amp;lt;code&amp;gt;var myAnim = new Rui.fx.LScrollAnim(el, { scroll: { to: [0, 800] } }, 1, Rui.fx.LEasing.easeOut);&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;",
   "name": "Rui.fx.LScrollAnim",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "animated 되어질 element에 대한 참조",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String or HTMLElement"
    },
    {
     "deprecated": false,
     "description": "animated될 attribute\n 각각의 attribute는 최소한 \"to\"나 \"by\" member가 정의된 object이다.\n 추가적인 옵션 member들은 \"from\"(defaults to current value)과 \"unit\"(defaults to \"px\") 이다.\n 모든 attribute 이름은 camelCase 방식을 사용한다.",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "(optional, 기본값 1초) animation의 길이 (frames or seconds), defaults to time-based",
     "isFinal": false,
     "name": "duration",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Number"
    },
    {
     "deprecated": false,
     "description": "(optional, Rui.fx.LEasing.easeNone 기본값) 각 frame별 attribute에 적용되는 값을 계산 (일반적으로 Rui.fx.LEasing method)",
     "isFinal": false,
     "name": "method",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Function"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LAnim subclass for scrolling elements to a position defined by the \"scroll\" member of \"attributes\".\n \"attribute\"의 \"scroll\" member에 의해 정의된 위치로 element들을 스크롤하기 위한 LAnim subclass.\n All \"scroll\" members are arrays with x, y scroll positions.\n 모든 \"scroll\" member는 x, y 스크롤 위치 배열이다.\n &amp;lt;p&amp;gt;Usage: &amp;lt;code&amp;gt;var myAnim = new Rui.fx.LScrollAnim(el, { scroll: { to: [0, 800] } }, 1, Rui.fx.LEasing.easeOut);&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "attribute값 반환",
    "name": "getAttribute",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "attribute값 설정",
    "name": "setAttribute",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "animation",
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.fx.LScrollAnim",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "&amp;lt;p&amp;gt;\n Provides a fixed layout containing, top, bottom, left, right and center\n layout units. It can be applied to either the body or an element.\n &amp;lt;/p&amp;gt;",
   "name": "Rui.ui.layout.LLayoutManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The element to make contain a layout.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String/HTMLElement"
    },
    {
     "deprecated": false,
     "description": "Object liternal containing configuration parameters.",
     "isFinal": false,
     "name": "attrs",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "&amp;lt;p&amp;gt;\n Provides a fixed layout containing, top, bottom, left, right and center\n layout units. It can be applied to either the body or an element.\n &amp;lt;/p&amp;gt;",
  "events": [
   {
    "deprecated": false,
    "description": "Fires at the beginning of the resize method. If you return\n              false, the resize is cancelled.",
    "name": "beforeResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired after the render method completes.",
    "name": "render",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when this.resize is called",
    "name": "resize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the Resize Utility for a Unit fires it's\n              startResize Event.",
    "name": "startResize",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "Add a unit to this layout and if the\n              layout is rendered, resize the layout.",
    "name": "addUnit",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The config for the LLayout that\n            you want to add",
     "isFinal": false,
     "name": "cfg",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes this layout from the page and\n              destroys all units that it contains.\n              This will destroy all data inside the\n              layout and it's children.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Get's a layout object by the HTML id of the element\n              associated with the LLayoutManager object.",
    "name": "getLayoutById",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The LLayoutManager Object",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Get a reference to the internal LLayoutManager\n              Unit sizes object used to build the\n              layout wireframe",
    "name": "getSizes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "An object of the layout unit sizes",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Get the LLayout by it's position in\n              this layout",
    "name": "getUnitByPosition",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The position of the unit in this\n            layout",
     "isFinal": false,
     "name": "pos",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Remove the unit from this layout and\n              resize the layout.",
    "name": "removeUnit",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The LLayout that you want to\n            remove",
     "isFinal": false,
     "name": "unit",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "This method starts the render process,\n              applying classnames and creating\n              elements",
    "name": "render",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Starts the chain of resize routines that\n              will resize all the units.",
    "name": "resize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "If set to false, it will NOT set the\n            size, just perform the calculations (used\n            for collapsing units)",
     "isFinal": false,
     "name": "set",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the\n              LLayoutManager.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_layout",
  "plugin": "/ui/layout/rui_layout.js,/ui/layout/rui_layout.css",
  "propertys": [{
   "deprecated": false,
   "description": "A modified version of the Rui.browser\n              object*",
   "isFinal": false,
   "name": "browser",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Object",
   "visibility": "public"
  }],
  "scope": "instance",
  "superclass": "Rui.LElement",
  "type": "Rui.ui.layout.LLayoutManager",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "&amp;lt;p&amp;gt;Provides a fixed position unit containing a header, body and footer for use with a Rui.ui.layout.LLayoutManager instance.&amp;lt;/p&amp;gt;",
   "name": "Rui.ui.layout.LLayout",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "The element to make a unit.",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String/HTMLElement"
    },
    {
     "deprecated": false,
     "description": "Object liternal containing configuration parameters.",
     "isFinal": false,
     "name": "attrs",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "&amp;lt;p&amp;gt;Provides a fixed position unit containing a header, body and footer for use with a Rui.ui.layout.LLayoutManager instance.&amp;lt;/p&amp;gt;",
  "events": [
   {
    "deprecated": false,
    "description": "Fired before the unit is collapsed. If you return false, the collapse is cancelled.",
    "name": "beforeCollapse",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired before the unit is exanded. If you return false, the collapse is cancelled.",
    "name": "beforeExpand",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired at the beginning of the resize method. If you return false, the resize is cancelled.",
    "name": "beforeResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the unit is closed",
    "name": "close",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the unit is collapsed",
    "name": "collapse",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the content in the header, body or footer is changed via the API",
    "name": "contentChange",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the Resize Utility fires it's endResize Event.",
    "name": "endResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the unit is exanded",
    "name": "expand",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when data is loaded via the dataSrc config.",
    "name": "load",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when an error occurs loading data via the dataSrc config. Error message is passed as argument to this event.",
    "name": "loadError",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when this.resize is called",
    "name": "resize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fired when the Resize Utility fires it's startResize Event.",
    "name": "startResize",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "unit의 body에 대한 content html을 설정한다.",
    "name": "bodyHtml",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Close the unit, removing it from the parent LLayoutManager.",
    "name": "close",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "href=\"Rui.ui.layout.LLayoutManager.html\">Rui.ui.layout.LLayoutManager<\/a>} The parent LLayoutManager instance",
    "returnType": "Rui.ui.layout.LLayoutManager",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Collapse the Unit if it is not collapsed.",
    "name": "collapse",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "href=\"Rui.ui.layout.LLayout.html\">Rui.ui.layout.LLayout<\/a>} The LLayout instance",
    "returnType": "Rui.ui.layout.LLayout",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes this unit from the parent and cleans up after itself.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Don't report to the parent, because we are being called from the parent.",
     "isFinal": false,
     "name": "force",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "href=\"Rui.ui.layout.LLayoutManager.html\">Rui.ui.layout.LLayoutManager<\/a>} The parent LLayoutManager instance",
    "returnType": "Rui.ui.layout.LLayoutManager",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Expand the Unit if it is collapsed.",
    "name": "expand",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "href=\"Rui.ui.layout.LLayout.html\">Rui.ui.layout.LLayout<\/a>} The LLayout instance",
    "returnType": "Rui.ui.layout.LLayout",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Get's a layout unit object by the HTML id of the element associated with the LLayoutManager Unit object.",
    "name": "getLayoutUnitById",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The LLayoutManager Object",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Get a reference to the internal sizes object for this unit",
    "name": "getSizes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "An object of the sizes used for calculations",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Resize either the unit or it's clipped state, also updating the box inside",
    "name": "resize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "This will force full calculations even when the unit is collapsed",
     "isFinal": false,
     "name": "force",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "href=\"Rui.ui.layout.LLayout.html\">Rui.ui.layout.LLayout<\/a>} The LLayout instance",
    "returnType": "Rui.ui.layout.LLayout",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the LLayout.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Toggles the Unit, replacing it with a clipped version.",
    "name": "toggle",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "href=\"Rui.ui.layout.LLayout.html\">Rui.ui.layout.LLayout<\/a>} The LLayout instance",
    "returnType": "Rui.ui.layout.LLayout",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_layout",
  "plugin": "/ui/layout/rui_layout.js,/ui/layout/rui_layout.css",
  "propertys": [
   {
    "deprecated": false,
    "description": "A reference to the HTML element used for the body",
    "isFinal": false,
    "name": "body",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "A modified version of the Rui.browser object",
    "isFinal": false,
    "name": "browser",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "A reference to the HTML element used for the footer",
    "isFinal": false,
    "name": "footer",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "A reference to the HTML element used for the Header",
    "isFinal": false,
    "name": "header",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLELement",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.LElement",
  "type": "Rui.ui.layout.LLayout",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Singleton that manages a collection of all menus and menu items.  Listens\n for DOM events at the document level and dispatches the events to the\n corresponding menu or menu item.",
   "name": "Rui.ui.menu.LMenuManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Singleton that manages a collection of all menus and menu items.  Listens\n for DOM events at the document level and dispatches the events to the\n corresponding menu or menu item.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Adds a menu to the collection of known menus.",
    "name": "addMenu",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Object specifying the LMenu\n instance to be added.",
     "isFinal": false,
     "name": "p_oMenu",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.menu.LMenu"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a reference to the menu that currently",
    "name": "getFocusedMenu",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.menu.LMenu",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a reference to the menu item that currently",
    "name": "getFocusedMenuItem",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a menu with the specified id.",
    "name": "getMenu",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "String specifying the id of the",
     "isFinal": false,
     "name": "p_sId",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.ui.menu.LMenu",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a menu item with the specified id.",
    "name": "getMenuItem",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "String specifying the id of the",
     "isFinal": false,
     "name": "p_sId",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns an array of menu item instances whose\n corresponding &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt; elements are child\n nodes of the &amp;lt;code&amp;gt;&amp;#60;ul&amp;#62;&amp;lt;/code&amp;gt; element with the\n specified id.",
    "name": "getMenuItemGroup",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "String specifying the id of the",
     "isFinal": false,
     "name": "p_sId",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a collection of all menus registered with the menu manger.",
    "name": "getMenus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a collection of all visible menus registered with the menu manger.",
    "name": "getVisible",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Hides all visible, dynamically positioned menus\n (excluding instances of Rui.ui.menu.LMenuBar).",
    "name": "hideVisible",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes a menu from the collection of known menus.",
    "name": "removeMenu",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Object specifying the LMenu\n instance to be removed.",
     "isFinal": false,
     "name": "p_oMenu",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.menu.LMenu"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the menu manager.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_menu",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "scope": "static",
  "type": "Rui.ui.menu.LMenuManager",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Boolean indicating if submenus are automatically made\n visible when the user mouses over the menu's items.",
    "isFinal": false,
    "name": "autosubmenudisplay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "String representing the CSS class to be applied to the\n menu's root &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element.  The specified class(es)\n are appended in addition to the default class as specified by the menu's\n CSS_CLASS_NAME constant. When set this property is automatically\n applied to all submenus.",
    "isFinal": false,
    "name": "classname",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Boolean indicating if the menu will automatically be\n hidden if the user clicks outside of it.  This property is only\n applied when the \"position\" configuration property is set to dynamic\n and is automatically applied to all submenus.",
    "isFinal": false,
    "name": "clicktohide",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Boolean indicating if the menu will try to remain inside\n the boundaries of the size of viewport.  This property is only applied\n when the \"position\" configuration property is set to dynamic and is\n automatically applied to all submenus.",
    "isFinal": false,
    "name": "constraintoviewport",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "document.body",
    "deprecated": false,
    "description": "HTML element reference or string specifying the id\n attribute of the HTML element that the menu's markup should be\n rendered into.",
    "isFinal": false,
    "name": "container",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "HTMLElement",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Array of context arguments for context-sensitive positioning.\n The format is: [id or element, element corner, context corner].\n For example, setting this property to [\"img1\", \"tl\", \"bl\"] would\n align the Mnu's top left corner to the context element's\n bottom left corner.  This property is only applied when the \"position\"\n configuration property is set to dynamic.",
    "isFinal": false,
    "name": "context",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if the menu should be disabled.\n Disabling a menu disables each of its items.  (Disabled menu items are\n dimmed and will not respond to user input or fire events.)  Disabled\n menus have a corresponding \"disabled\" CSS class applied to their root\n &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element.",
    "isFinal": false,
    "name": "disabled",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Object or array of objects representing the ContainerEffect\n classes that are active for animating the container.  When set this\n property is automatically applied to all submenus.",
    "isFinal": false,
    "name": "effect",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if the LMenu should be anchored to the\n center of the viewport.  This property is only applied when the\n \"position\" configuration property is set to dynamic.",
    "isFinal": false,
    "name": "fixedcenter",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "Number indicating the time (in milliseconds) that should\n expire before the menu is hidden.  This property is only applied when\n the \"position\" configuration property is set to dynamic and is\n automatically applied to all submenus.",
    "isFinal": false,
    "name": "hidedelay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Boolean indicating whether or not the LMenu should\n have an IFRAME shim; used to prevent SELECT elements from\n poking through an Overlay instance in IE6.  When set to \"true\",\n the iframe shim is created when the LMenu instance is intially\n made visible.  This property is only applied when the \"position\"\n configuration property is set to dynamic and is automatically applied\n to all submenus.",
    "isFinal": false,
    "name": "iframe",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if the menu should remain open when clicked.",
    "isFinal": false,
    "name": "keepopen",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "Number defining the maximum height (in pixels) for a menu's\n body element (&amp;lt;code&amp;gt;&amp;#60;div class=\"bd\"&amp;#60;&amp;lt;/code&amp;gt;).  Once a menu's body\n exceeds this height, the contents of the body are scrolled to maintain\n this value.  This value cannot be set lower than the value of the\n \"minscrollheight\" configuration property.",
    "isFinal": false,
    "name": "maxheight",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "90",
    "deprecated": false,
    "description": "Number defining the minimum threshold for the \"maxheight\"\n configuration property.  When set this property is automatically applied\n to all submenus.",
    "isFinal": false,
    "name": "minscrollheight",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "dynamic",
    "deprecated": false,
    "description": "String indicating how a menu should be positioned on the\n screen.  Possible values are \"static\" and \"dynamic.\"  Static menus are\n visible by default and reside in the normal flow of the document\n (CSS position: static).  Dynamic menus are hidden by default, reside\n out of the normal flow of the document (CSS position: absolute), and\n can overlay other elements on the screen.",
    "isFinal": false,
    "name": "position",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Boolean indicating whether or not a submenu should overlap its parent LMenuItem\n when the \"constraintoviewport\" configuration property is set to \"true\".",
    "isFinal": false,
    "name": "preventcontextoverlap",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "Number used to control the scroll speed of a menu.  Used to\n increment the \"scrollTop\" property of the menu's body by when a menu's\n content is scrolling.  When set this property is automatically applied\n to all submenus.",
    "isFinal": false,
    "name": "scrollincrement",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Boolean indicating if the menu should have a shadow.",
    "isFinal": false,
    "name": "shadow",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "250",
    "deprecated": false,
    "description": "Number indicating the time (in milliseconds) that should\n expire before a submenu is made visible when the user mouses over\n the menu's items.  This property is only applied when the \"position\"\n configuration property is set to dynamic and is automatically applied\n to all submenus.",
    "isFinal": false,
    "name": "showdelay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "[\"tl\",\"tr\"]",
    "deprecated": false,
    "description": "Array defining how submenus should be aligned to their\n parent menu item. The format is: [itemCorner, submenuCorner]. By default\n a submenu's top left corner is aligned to its parent menu item's top\n right corner.",
    "isFinal": false,
    "name": "submenualignment",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "250",
    "deprecated": false,
    "description": "Number indicating the time (in milliseconds) that should\n expire before a submenu is hidden when the user mouses out of a menu item\n heading in the direction of a submenu.  The value must be greater than or\n equal to the value specified for the \"showdelay\" configuration property.\n This property is only applied when the \"position\" configuration property\n is set to dynamic and is automatically applied to all submenus.",
    "isFinal": false,
    "name": "submenuhidedelay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating whether or not the menu is visible.  If\n the menu's \"position\" configuration property is set to \"dynamic\" (the\n default), this property toggles the menu's &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt;\n element's \"visibility\" style property between \"visible\" (true) or\n \"hidden\" (false).  If the menu's \"position\" configuration property is\n set to \"static\" this property toggles the menu's\n &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element's \"display\" style property\n between \"block\" (true) or \"none\" (false).",
    "isFinal": false,
    "name": "visible",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Number representing the absolute x-coordinate position of\n the LMenu.  This property is only applied when the \"position\"\n configuration property is set to dynamic.",
    "isFinal": false,
    "name": "x",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Array of the absolute x and y positions of the LMenu.  This\n property is only applied when the \"position\" configuration property is\n set to dynamic.",
    "isFinal": false,
    "name": "xy",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number[]",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Number representing the absolute y-coordinate position of\n the LMenu.  This property is only applied when the \"position\"\n configuration property is set to dynamic.",
    "isFinal": false,
    "name": "y",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "The LMenu class creates a container that holds a vertical list representing\n a set of options or commands.  LMenu is the base class for all\n menu containers.",
   "name": "Rui.ui.menu.LMenu",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "id",
     "isFinal": false,
     "name": "p_oElement",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "config",
     "isFinal": false,
     "name": "p_oConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "The LMenu class creates a container that holds a vertical list representing\n a set of options or commands.  LMenu is the base class for all\n menu containers.",
  "events": [
   {
    "deprecated": false,
    "description": "Fires when the user clicks the on the menu.  Passes back the\n DOM Event object as an argument.",
    "name": "click",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when an item is added to the menu.",
    "name": "itemAdded",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when an item is removed to the menu.",
    "name": "itemRemoved",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user presses a key when one of the menu's items\n has focus.  Passes back the DOM Event object as an argument.",
    "name": "keyDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user presses an alphanumeric key when one of the\n menu's items has focus.  Passes back the DOM Event object as an argument.",
    "name": "keyPress",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user releases a key when one of the menu's items\n has focus.  Passes back the DOM Event object as an argument.",
    "name": "keyUp",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user mouses down on the menu.  Passes back the\n DOM Event object as an argument.",
    "name": "mouseDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the mouse has left the menu.  Passes back the DOM\n Event object as an argument.",
    "name": "mouseOut",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the mouse has entered the menu.  Passes back\n the DOM Event object as an argument.",
    "name": "mouseOver",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user releases a mouse button while the mouse is\n over the menu.  Passes back the DOM Event object as an argument.",
    "name": "mouseUp",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "Disables the footer used for scrolling the body of the menu.",
    "name": "_disableScrollFooter",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Disables the header used for scrolling the body of the menu.",
    "name": "_disableScrollHeader",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Enables the footer used for scrolling the body of the menu.",
    "name": "_enableScrollFooter",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Enables the header used for scrolling the body of the menu.",
    "name": "_enableScrollHeader",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"blur\" event handler for a LMenu instance.",
    "name": "_onBlur",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The name of the event that was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Collection of arguments sent when the event\n was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"click\" event handler for the menu.",
    "name": "_onClick",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String representing the name of the event that\n was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Array of arguments sent when the event was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"keydown\" event handler for the menu.",
    "name": "_onKeyDown",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String representing the name of the event that\n was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Array of arguments sent when the event was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"keypress\" event handler for a LMenu instance.",
    "name": "_onKeyPress",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The name of the event that was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Collection of arguments sent when the event\n was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"click\" event handler for the menu.",
    "name": "_onMouseMove",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object representing the DOM event object passed\n back by the event utility (Rui.util.LEvent).",
      "isFinal": false,
      "name": "p_oEvent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Event"
     },
     {
      "deprecated": false,
      "description": "Object representing the menu that\n fired the event.",
      "isFinal": false,
      "name": "p_oMenu",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenu"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"mouseout\" event handler for the menu.",
    "name": "_onMouseOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String representing the name of the event that\n was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Array of arguments sent when the event was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"mouseover\" event handler for the menu.",
    "name": "_onMouseOver",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String representing the name of the event that\n was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Array of arguments sent when the event was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"mouseout\" event handler for the menu's \"header\" and \"footer\"\n elements.  Used to stop scrolling the body of the menu up and down when the\n menu's \"maxheight\" configuration property is set to a value greater than 0.",
    "name": "_onScrollTargetMouseOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object representing the DOM event object passed\n back by the event utility (Rui.util.LEvent).",
      "isFinal": false,
      "name": "p_oEvent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Event"
     },
     {
      "deprecated": false,
      "description": "Object representing the menu that\n fired the event.",
      "isFinal": false,
      "name": "p_oMenu",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenu"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"mouseover\" event handler for the menu's \"header\" and \"footer\"\n elements.  Used to scroll the body of the menu up and down when the\n menu's \"maxheight\" configuration property is set to a value greater than 0.",
    "name": "_onScrollTargetMouseOver",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object representing the DOM event object passed\n back by the event utility (Rui.util.LEvent).",
      "isFinal": false,
      "name": "p_oEvent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Event"
     },
     {
      "deprecated": false,
      "description": "Object representing the menu that\n fired the event.",
      "isFinal": false,
      "name": "p_oMenu",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenu"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "\"y\" event handler for a LMenu instance.",
    "name": "_onYChange",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The name of the event that was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Collection of arguments sent when the event\n was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Appends an item to the menu.",
    "name": "addItem",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object reference for the LMenuItem\n instance to be added to the menu.",
      "isFinal": false,
      "name": "p_oItem",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenuItem"
     },
     {
      "deprecated": false,
      "description": "String specifying the text of the item to be added\n to the menu.",
      "isFinal": false,
      "name": "p_oItem",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Object literal containing a set of menu item\n configuration properties.",
      "isFinal": false,
      "name": "p_oItem",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "Optional. Number indicating the group to\n which the item belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds an array of items to the menu.",
    "name": "addItems",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array of items to be added to the menu.  The array\n can contain strings specifying the text for each item to be created, object\n literals specifying each of the menu item configuration properties,\n or LMenuItem instances.",
      "isFinal": false,
      "name": "p_aItems",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Optional. Number specifying the group to\n which the items belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DataSet에서 menu item을 추출해서 addItems를 수행한다.",
    "name": "addItemsByDataSet",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "포함하는 LDataSet",
      "isFinal": false,
      "name": "Menu정보를",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "LDataSet"
     },
     {
      "deprecated": false,
      "description": "rootValue값과, parentId, id, text, url 정보를 가지고 있는 field name을 저장한다.",
      "isFinal": false,
      "name": "fields는",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Optional. Number specifying the group to\n which the items belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Causes the menu to lose focus and fires the \"blur\" event.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the \"selected\" configuration property of the menu's active\n item to \"false\" and hides the item's submenu.",
    "name": "clearActiveItem",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Boolean indicating if the menu's active item\n should be blurred.",
     "isFinal": false,
     "name": "p_bBlur",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes all of the content from the menu, including the menu\n items, group titles, header and footer.",
    "name": "clearContent",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes the menu's &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element\n (and accompanying child nodes) from the document.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "menu를 disable 상태로 만들기",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "menu를 enable 상태로 만들기",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Causes the menu to receive focus and fires the \"focus\" event.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the item at the specified index.",
    "name": "getItem",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Number indicating the ordinal position of the\n item to be retrieved.",
      "isFinal": false,
      "name": "p_nItemIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "Optional. Number indicating the group to which\n the item belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Multi-dimensional Array representing the menu items as they",
    "name": "getItemGroups",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns an array of all of the items in the menu.",
    "name": "getItems",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Finds the menu's root menu.",
    "name": "getRoot",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns an array of all of the submenus that are immediate\n children of the menu.",
    "name": "getSubmenus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a boolean indicating whether or not the menu has focus.",
    "name": "hasFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Inserts an item into the menu at the specified index.",
    "name": "insertItem",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object reference for the LMenuItem\n instance to be added to the menu.",
      "isFinal": false,
      "name": "p_oItem",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenuItem"
     },
     {
      "deprecated": false,
      "description": "String specifying the text of the item to be added\n to the menu.",
      "isFinal": false,
      "name": "p_oItem",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Object literal containing a set of menu item\n configuration properties.",
      "isFinal": false,
      "name": "p_oItem",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "Number indicating the ordinal position at which\n the item should be added.",
      "isFinal": false,
      "name": "p_nItemIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "Optional. Number indicating the group to which\n the item belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Positions the menu outside of the boundaries of the browser's\n viewport.  Called automatically when a menu is hidden to ensure that\n it doesn't force the browser to render unnecessary scrollbars.\n Menu가 browser를 벗어 났을 경우 필요없는 scrollbar를 생기지 않게 하는 method",
    "name": "positionOffScreen",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes the specified item from the menu.",
    "name": "removeItem",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object reference for the LMenuItem\n instance to be removed from the menu.",
      "isFinal": false,
      "name": "p_oObject",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenuItem"
     },
     {
      "deprecated": false,
      "description": "Number specifying the index of the item\n to be removed.",
      "isFinal": false,
      "name": "p_oObject",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     },
     {
      "deprecated": false,
      "description": "Optional. Number specifying the group to\n which the item belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets focus to the menu's first enabled item.",
    "name": "setInitialFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the \"selected\" configuration property of the menu's first\n enabled item to \"true.\"",
    "name": "setInitialSelection",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Sets the title of a group of menu items.",
    "name": "setItemGroupTitle",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String specifying the title of the group.",
      "isFinal": false,
      "name": "p_sGroupTitle",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Optional. Number specifying the group to which\n the title belongs.",
      "isFinal": false,
      "name": "p_nGroupIndex",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Number"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Shows the Module element by setting the visible configuration\n property to true. Also fires two events: beforeShowEvent prior to\n the visibility change, and showEvent after.",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Adds the specified LCustomEvent subscriber to the menu and each of\n its submenus.",
    "name": "subscribe",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "the type, or name of the event",
      "isFinal": false,
      "name": "p_type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     },
     {
      "deprecated": false,
      "description": "the function to exectute when the event fires",
      "isFinal": false,
      "name": "p_fn",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "function"
     },
     {
      "deprecated": false,
      "description": "An object to be passed along when the event\n                              fires",
      "isFinal": false,
      "name": "p_obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "If true, the obj passed in becomes the\n                              execution scope of the listener",
      "isFinal": false,
      "name": "p_override",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the menu.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_menu",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [
   {
    "deprecated": false,
    "description": "Object reference to the item in the menu that has is selected.",
    "isFinal": false,
    "name": "activeItem",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.menu.LMenuItem",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Menu의 Data가될 dataset",
    "isFinal": false,
    "name": "dataSet",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Menu의 Data가될 DataSet의 field 정보",
    "isFinal": false,
    "name": "fields",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Array of items to be added to the menu.  The array can contain\n strings representing the text for each item to be created, object literals\n representing the menu item configuration properties, or LMenuItem instances.\n This property should be set via the constructor using the configuration\n object literal.",
    "isFinal": false,
    "name": "itemData",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Boolean indicating if the menu's \"lazy load\" feature is\n enabled.  If set to \"true,\" initialization and rendering of the menu's\n items will be deferred until the first time it is made visible.  This\n property should be set via the constructor using the configuration\n object literal.",
    "isFinal": false,
    "name": "lazyLoad",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the menu's parent menu or menu item.\n This property can be set via the constructor using the configuration\n object literal.",
    "isFinal": false,
    "name": "parent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.menu.LMenuItem",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the HTML element (either\n &amp;lt;code&amp;gt;&amp;#60;select&amp;#62;&amp;lt;/code&amp;gt; or &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt;) used to\n create the menu.",
    "isFinal": false,
    "name": "srcElement",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLSelectElement",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.ui.LPanel",
  "type": "Rui.ui.menu.LMenu",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if the menu item should be rendered\n with a checkmark.",
    "isFinal": false,
    "name": "checked",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "CSS class to be applied to the menu item's root\n &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt; element.  The specified class(es) are\n appended in addition to the default class as specified by the menu\n item's CSS_CLASS_NAME constant.",
    "isFinal": false,
    "name": "classname",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if the menu item should be disabled.\n (Disabled menu items are  dimmed and will not respond to user input\n or fire events.)",
    "isFinal": false,
    "name": "disabled",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": true,
    "description": "Boolean indicating if the text of the menu item will be\n rendered with emphasis.",
    "isFinal": false,
    "name": "emphasis",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": true,
    "description": "String specifying additional instructional text to\n accompany the text for the menu item.",
    "isFinal": false,
    "name": "helptext",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "\n HTMLElement",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Object literal representing the key(s) that can be used\n to trigger the LMenuItem's \"click\" event.  Possible attributes are\n shift (boolean), alt (boolean), ctrl (boolean) and keys (either an int\n or an array of ints representing keycodes).",
    "isFinal": false,
    "name": "keylistener",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Object literal representing the code to be executed when\n the item is clicked.  Format:&amp;lt;br&amp;gt; &amp;lt;code&amp;gt; {&amp;lt;br&amp;gt;\n &amp;lt;strong&amp;gt;fn:&amp;lt;/strong&amp;gt; Function,   &amp;#47;&amp;#47; The handler to call when\n the event fires.&amp;lt;br&amp;gt; &amp;lt;strong&amp;gt;obj:&amp;lt;/strong&amp;gt; Object, &amp;#47;&amp;#47; An\n object to  pass back to the handler.&amp;lt;br&amp;gt; &amp;lt;strong&amp;gt;scope:&amp;lt;/strong&amp;gt;\n Object &amp;#47;&amp;#47; The object to use for the scope of the handler.\n &amp;lt;br&amp;gt; } &amp;lt;/code&amp;gt;",
    "isFinal": false,
    "name": "onclick",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if the menu item should\n be highlighted.",
    "isFinal": false,
    "name": "selected",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": true,
    "description": "Boolean indicating if the text of the menu item will be\n rendered with strong emphasis.",
    "isFinal": false,
    "name": "strongemphasis",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Object specifying the submenu to be appended to the\n menu item.  The value can be one of the following: &amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Object\n specifying a LMenu instance.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Object literal specifying the\n menu to be created.  Format: &amp;lt;code&amp;gt;{ id: [menu id], itemdata:\n [&amp;lt;a href=\"Rui.ui.menu.LMenu.html#itemData\"&amp;gt;array of values for\n items&amp;lt;/a&amp;gt;] }&amp;lt;/code&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;String specifying the id attribute\n of the &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element of the menu.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;\n Object specifying the &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element of the\n menu.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;",
    "isFinal": false,
    "name": "submenu",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "\n HTMLElement",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "String specifying the value for the \"target\" attribute\n of the menu item's anchor element. &amp;lt;strong&amp;gt;Specifying a target will\n require the user to click directly on the menu item's anchor node in\n order to cause the browser to navigate to the specified URL.&amp;lt;/strong&amp;gt;\n When building a menu from existing HTML the value of this property\n will be interpreted from the menu's markup.",
    "isFinal": false,
    "name": "target",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "\"\"",
    "deprecated": false,
    "description": "",
    "isFinal": false,
    "name": "text",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "\"#\"",
    "deprecated": false,
    "description": "String specifying the URL for the menu item's anchor's\n \"href\" attribute.  When building a menu from existing HTML the value\n of this property will be interpreted from the menu's markup.",
    "isFinal": false,
    "name": "url",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "Creates an item for a menu.",
   "name": "Rui.ui.menu.LMenuItem",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "String specifying the text of the menu item.",
     "isFinal": false,
     "name": "p_oObject",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "Optional. Object literal specifying the\n configuration for the menu item. See configuration class documentation\n for more details.",
     "isFinal": false,
     "name": "p_oConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Creates an item for a menu.",
  "events": [
   {
    "deprecated": false,
    "description": "Fires when the menu item loses the input focus.",
    "name": "blur",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user clicks the on the menu item.  Passes\n back the DOM Event object as an argument.",
    "name": "click",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the menu item's &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt;\n element is removed from its parent &amp;lt;code&amp;gt;&amp;#60;ul&amp;#62;&amp;lt;/code&amp;gt; element.",
    "name": "destroy",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the menu item receives focus.",
    "name": "focus",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user presses a key when the menu item has\n focus.  Passes back the DOM Event object as an argument.",
    "name": "keyDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user presses an alphanumeric key when the\n menu item has focus.  Passes back the DOM Event object as an argument.",
    "name": "keyPress",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user releases a key when the menu item has\n focus.  Passes back the DOM Event object as an argument.",
    "name": "keyUp",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user mouses down on the menu item.  Passes\n back the DOM Event object as an argument.",
    "name": "mouseDown",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the mouse has left the menu item.  Passes back\n the DOM Event object as an argument.",
    "name": "mouseOut",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the mouse has entered the menu item.  Passes\n back the DOM Event object as an argument.",
    "name": "mouseOver",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Fires when the user releases a mouse button while the mouse\n is over the menu item.  Passes back the DOM Event object as an argument.",
    "name": "mouseUp",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "Causes the menu item to lose focus and fires the\n blur event.",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 check 표시",
    "name": "check",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes the menu item's &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt; element\n from its parent &amp;lt;code&amp;gt;&amp;#60;ul&amp;#62;&amp;lt;/code&amp;gt; element.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 비활성화",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 활성화",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Causes the menu item to receive the focus and fires the\n focus event.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Finds the menu item's next enabled sibling.",
    "name": "getNextEnabledSibling",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Finds the menu item's previous enabled sibling.",
    "name": "getPreviousEnabledSibling",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.menu.LMenuItem",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LMenu - LMenuItem - LMenu - MenuItem의 Parent - Child 구조에서, 최상위 menu를 return",
    "name": "getRootMenu",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.menu.LMenu",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 url target 가져오기",
    "name": "getTarget",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 text 가져오기",
    "name": "getText",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 url 가져오기",
    "name": "getURL",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a boolean indicating whether or not the menu item\n has focus.",
    "name": "hasFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "하위 메뉴를 가졌는지 true/false return",
    "name": "hasSubmenu",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 선택",
    "name": "select",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "url target 변경",
    "name": "setTarget",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "String url target",
     "isFinal": false,
     "name": "text",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "text 변경",
    "name": "setText",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "String 메뉴명",
     "isFinal": false,
     "name": "text",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "url 변경",
    "name": "setURL",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "String url",
     "isFinal": false,
     "name": "text",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the menu item.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 check 표시 제거",
    "name": "unCheck",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "메뉴 선택해제",
    "name": "unSelect",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_menu",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [
   {
    "deprecated": true,
    "description": "@deprecated Use Rui.browser",
    "isFinal": false,
    "name": "browser",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the menu item's constructor function.",
    "isFinal": false,
    "name": "constructor",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.menu.LMenuItem",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the menu item's\n &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt; element.",
    "isFinal": false,
    "name": "element",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLLIElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Number indicating the index of the group to which the menu\n item belongs.",
    "isFinal": false,
    "name": "groupIndex",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Id of the menu item's root &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt;\n element.  This property should be set via the constructor using the\n configuration object literal.  If an id is not specified, then one will\n be created using the \"generateId\" method of the Dom utility.",
    "isFinal": false,
    "name": "id",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Number indicating the ordinal position of the menu item in\n its group.",
    "isFinal": false,
    "name": "index",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Number",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the menu item's parent menu.",
    "isFinal": false,
    "name": "parent",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.menu.LMenu",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the HTML element (either\n &amp;lt;code&amp;gt;&amp;#60;li&amp;#62;&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;&amp;#60;optgroup&amp;#62;&amp;lt;/code&amp;gt; or\n &amp;lt;code&amp;gt;&amp;#60;option&amp;#62;&amp;lt;/code&amp;gt;) used create the menu item.",
    "isFinal": false,
    "name": "srcElement",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "HTMLLIElement",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Object reference to the menu item's value.",
    "isFinal": false,
    "name": "value",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.ui.menu.LMenuItem",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if submenus are automatically made\n visible when the user mouses over the menu bar's items.",
    "isFinal": false,
    "name": "autosubmenudisplay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "static",
    "deprecated": false,
    "description": "String indicating how a menu bar should be positioned on the\n screen.  Possible values are \"static\" and \"dynamic.\"  Static menu bars\n are visible by default and reside in the normal flow of the document\n (CSS position: static).  Dynamic menu bars are hidden by default, reside\n out of the normal flow of the document (CSS position: absolute), and can\n overlay other elements on the screen.",
    "isFinal": false,
    "name": "position",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "[\"tl\",\"bl\"]",
    "deprecated": false,
    "description": "Array defining how submenus should be aligned to their\n parent menu bar item. The format is: [itemCorner, submenuCorner].",
    "isFinal": false,
    "name": "submenualignment",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Array",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Boolean indicating if only a specific region of a LMenuBarItem should toggle the\n display of a submenu.  The default width of the region is determined by the value of the\n SUBMENU_TOGGLE_REGION_WIDTH property.  If set to true, the autosubmenudisplay\n configuration property will be set to false, and any click event listeners will not be\n called when the user clicks inside the submenu toggle region of a LMenuBarItem.  If the\n user clicks outside of the submenu toggle region, the LMenuBarItem will maintain its\n standard behavior.",
    "isFinal": false,
    "name": "submenutoggleregion",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "Horizontal collection of items, each of which can contain a submenu.",
   "name": "Rui.ui.menu.LMenuBar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "String specifying the id attribute of the",
     "isFinal": false,
     "name": "p_oElement",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "String specifying the id attribute of the",
     "isFinal": false,
     "name": "p_oElement",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "Optional. Object literal specifying the\n configuration for the menu bar. See configuration class documentation for\n more details.",
     "isFinal": false,
     "name": "p_oConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Horizontal collection of items, each of which can contain a submenu.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "\"click\" event handler for the menu bar.",
    "name": "_onClick",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String representing the name of the event that\n was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Array of arguments sent when the event was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Object representing the menu bar\n that fired the event.",
      "isFinal": false,
      "name": "p_oMenuBar",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LMenuBar"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the menu bar.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "widget_menu",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.menu.LMenu",
  "type": "Rui.ui.menu.LMenuBar",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Creates an item for a menu bar.",
   "name": "Rui.ui.menu.LMenuBarItem",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "String specifying the text of the menu bar item.",
     "isFinal": false,
     "name": "p_oObject",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "Optional. Object literal specifying the\n configuration for the menu bar item. See configuration class documentation\n for more details.",
     "isFinal": false,
     "name": "p_oConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Creates an item for a menu bar.",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "Returns a string representing the menu bar item.",
   "name": "toString",
   "parameterType": "METHOD",
   "parameters": [],
   "returnType": "String",
   "scope": "instance",
   "visibility": "public"
  }],
  "module": "ui_menu",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.menu.LMenuItem",
  "type": "Rui.ui.menu.LMenuBarItem",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "context menu가 출력될 경우의 범위를 지정하는 html dom id",
   "isFinal": false,
   "name": "trigger",
   "parameterType": "CONFIG",
   "sample": "default",
   "scope": "instance",
   "type": "String|HTMLElement|Array",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "html context 메뉴를 생성한다.",
   "name": "Rui.ui.menu.LContextMenu",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LContextMenu.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "html context 메뉴를 생성한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Cancels the display of the context menu.",
    "name": "cancel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 브라우져 기본 context메뉴 출력 여부 (기본 true)",
     "isFinal": false,
     "name": "defaultContextMenu",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Event handler for when the value of the 'trigger' configuration\n property changes.",
    "name": "configTrigger",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "String representing the name of the event that was fired.",
      "isFinal": false,
      "name": "p_sType",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "Array of arguments sent when the event was fired.",
      "isFinal": false,
      "name": "p_aArgs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "Object representing the context menu that fired the event.",
      "isFinal": false,
      "name": "p_oMenu",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.menu.LContextMenu"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes the context menu's &amp;lt;code&amp;gt;&amp;#60;div&amp;#62;&amp;lt;/code&amp;gt; element\n (and accompanying child nodes) from the document.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Initializes the class's configurable properties which can be\n changed using the context menu's Config object ('cfg').",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Initializes the custom events for the context menu.",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Returns a string representing the context menu.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_menu",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.menu.LMenu",
  "type": "Rui.ui.menu.LContextMenu",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "mark시 자식 노드들도 함께 자동으로 mark할지 여부",
    "isFinal": false,
    "name": "autoMark",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "동적으로 load시 사용할 child용 dataSet",
    "isFinal": false,
    "name": "childDataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "context context menu를 연결하는 LContextMenu의 객체",
    "isFinal": false,
    "name": "contextMenu",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Rui.ui.menu.LContextMenu",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "dataset",
    "isFinal": false,
    "name": "dataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "최초에 펼처질 depth를 결정한다.",
    "isFinal": false,
    "name": "defaultOpenDepth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "tree나 menu가 로드될 경우 최초에 펼처질 레벨의 index",
    "isFinal": false,
    "name": "defaultOpenTopIndex",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "마지막에 FOCUS되었던 노드 다시 focus할 지 여부.  dataSet load시.",
    "isFinal": false,
    "name": "focusLastest",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "fields hasChild의 값이 hasChildValue일 경우 child를 가지고 있는 것으로 처리한다.  child를 가지고 있는 여부를 나타내는 flag값중 참인값",
    "isFinal": false,
    "name": "hasChildValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "하나의 node만 열리게 설정하고 하나가 열리면 다른 node는 다 닫힌다.",
    "isFinal": false,
    "name": "onlyOneTopOpen",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "label출력시 사용되는 renderer",
    "isFinal": false,
    "name": "renderer",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "DataSet과 sync 여부 객체",
    "isFinal": false,
    "name": "syncDataSet",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "Expand 또는 Collapse시에 Animation 사용 할지 여부",
    "isFinal": false,
    "name": "useAnimation",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "복사하고 붙여넣기시 tempId 사용할 지 여부, tempId를 사용하지 않으면 직접 id를 생성해서 작업해야 한다.\n id는 업무 로직에 따라 생성 권장. 임시 id는 사용시 주의 요망(timestamp기반 값이 들어가므로 업무적으로 실제 id로 변경 처리 필요)",
    "isFinal": false,
    "name": "useTempId",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "각 node div에 title을 지정하여 브라우저 기본 tooltip이 나타나도록 한다.",
    "isFinal": false,
    "name": "useTooltip",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LUnorderedList",
   "name": "Rui.ui.LUnorderedList",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LUnorderedList.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "protected"
  }],
  "deprecated": false,
  "description": "LUnorderedList",
  "events": [
   {
    "deprecated": false,
    "description": "node가 닫쳐졌을때 발생하는 이벤트",
    "name": "collapse",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.ui.LUnorderedList"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "childDataSet을 지정했을 경우 node click시 발생하는 event로 child dataset을 load하면 된다.",
    "name": "dynamicLoadChild",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "click한 node object",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     },
     {
      "deprecated": false,
      "description": "click한 node의 record.get(this.fields.id)한 값",
      "isFinal": false,
      "name": "parentId",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node를 expand했을 때 발생",
    "name": "expand",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.ui.LUnorderedList"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "리스트의 각 node가 선택되어 해당 node가 focus 되었을 경우 발생하는 이벤트",
    "name": "focusChanged",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "이전 focus node",
      "isFinal": false,
      "name": "oldNode",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     },
     {
      "deprecated": false,
      "description": "현재 focus node",
      "isFinal": false,
      "name": "newNode",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node click시 발생하는 event, node가 collapse/expand toggle된다.",
    "name": "nodeClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "click한 node object",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet의 내용으로 전체를 다시 그렸을때 발생하는 이벤트",
    "name": "renderData",
    "parameters": [],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "setSyncDataSet 메소드가 호출되면 수행하는 이벤트",
    "name": "syncDataSet",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "sync 여부",
      "isFinal": false,
      "name": "isSync",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "syncDataSet 속성에 따른 실제 적용 메소드",
    "name": "_setSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "선택된 node 밑에 label을 가지는 record 추가",
    "name": "addChildNode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 최상위에 추가할 지 여부",
     "isFinal": false,
     "name": "addTop",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "row 생성한 record의 index return",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "최상위 depth에 label을 가지는 record 추가",
    "name": "addTopNode",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "row [optional] 생성한 record의 index return",
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node copy하기, useTempId가 false이면 자식까지 copy되지 않는다.",
    "name": "copyNode",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "자식들도 같이 복사할지 여부",
      "isFinal": false,
      "name": "widthChilds",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "optional 지정하지 않으면 현재 선택된 node",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.LUnorderedListNode"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node 만들기",
    "name": "createNode",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.LUnorderedListNode",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom으로 node 만들기",
    "name": "createNodeObject",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.LUnorderedListNode",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node cut하기",
    "name": "cutNode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "cut할 node",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.LUnorderedListNode"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "특정 node 지우기, 지운 후에 clone한 record array를 return한다.",
    "name": "deleteNode",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삭제할 node",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.LUnorderedListNode"
     },
     {
      "deprecated": false,
      "description": "clone할지 여부",
      "isFinal": false,
      "name": "clone",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "자신을 제외하고 자식만 삭제 여부",
      "isFinal": false,
      "name": "childOnly",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "이미 record가 삭제된 상태일 경우 record를 가져올 수 없으므로 parentId를 넘겨서 refresh 만 함.",
      "isFinal": false,
      "name": "parentId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "array",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 LI Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityLiRole",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 UL Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityUlRole",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ul의 depth",
     "isFinal": false,
     "name": "depth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "parentId를 가진 모든 record 가져오기",
    "name": "getAllChildRecords",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "검색할 dataSet으로 입력하지 않으면 tree의  dataSet으 사용한다.",
      "isFinal": false,
      "name": "dataSet",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.data.LDataSet"
     },
     {
      "deprecated": false,
      "description": "record의 array 재귀호출용",
      "isFinal": false,
      "name": "rs",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     }
    ],
    "returnDescription": "record의 array",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "마지막에 선택한 node return하기",
    "name": "getFocusNode",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.LUnorderedListNode",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node id에 해당하는 노드를 반환",
    "name": "getNodeById",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "node의 id 필드에 해당되는 값",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.ui.LUnorderedListNode",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "state값을 리턴하는 메소드",
    "name": "getState",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 changed 이벤트 발생시 호출되는 메소드",
    "name": "hideLoadingMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDkfaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "콤포넌트가 render가 됐는지 여부",
    "name": "isRendered",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node click시 실행되는 내용",
    "name": "onNodeClick",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "click한 node div",
      "isFinal": false,
      "name": "_div",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "click한 menu object의 record id",
      "isFinal": false,
      "name": "rId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node paste하기",
    "name": "pasteNode",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "optional 지정하지 않으면 현재 선택된 node",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.LUnorderedListNode"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터셋을 변경하는 메소드",
    "name": "setDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 데이터셋",
     "isFinal": false,
     "name": "dataSet",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.data.LDataSet"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "id값을 참조해서 수동으로 focus 주기",
    "name": "setFocusById",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "지정한 rootValue값으로 tree 다시 그리기",
    "name": "setRootValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet과 sync상태를 셋팅하는 메소드 (대량 변경건 처리시 사용)",
    "name": "setSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "isSync값",
     "isFinal": false,
     "name": "isSync",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "loading시 message 출력",
    "name": "showLoadingMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node click시 toggle처리",
    "name": "toggleChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "click된 node",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.LUnorderedListNode"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui",
  "propertys": [
   {
    "deprecated": false,
    "description": "메뉴의 animation효과 작동 시간 기본 0.3초",
    "isFinal": false,
    "name": "animDuration",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "float",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "mark시 자식 노드들도 함께 자동으로 mark할지 여부",
    "isFinal": false,
    "name": "autoMark",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "동적으로 load시 사용할 child용 dataSet",
    "isFinal": false,
    "name": "childDataSet",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "apply to treeview dom Id",
    "isFinal": false,
    "name": "container",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "context context menu를 연결하는 LContextMenu의 객체",
    "isFinal": false,
    "name": "contextMenu",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.menu.LContextMenu",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "A reference to the Node currently having the focus or null if none.",
    "isFinal": false,
    "name": "currentFocus",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.LUnorderedListNode",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataset",
    "isFinal": false,
    "name": "dataSet",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.data.LDataSet",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "tree나 menu가 로드될 경우 최초에 펼처질 레벨",
    "isFinal": false,
    "name": "defaultOpenDepth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "menu가 로드될 경우 최초에 펼처질 레벨의 index",
    "isFinal": false,
    "name": "defaultOpenTopIndex",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "endDepth을 지정할 경우 해당 depth이상은 생성하지 않는다.",
    "isFinal": false,
    "name": "endDepth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "마지막에 FOCUS되었던 노드 다시 focus할 지 여부.  dataSet load시.",
    "isFinal": false,
    "name": "focusLastest",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "fields hasChild의 값이 hasChildValue일 경우 child를 가지고 있는 것으로 처리한다.  child를 가지고 있는 여부를 나타내는 flag값중 참인값",
    "isFinal": false,
    "name": "hasChildValue",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "li width를 고정할 경우 사용.",
    "isFinal": false,
    "name": "liWidth",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "하나의 node만 열리게 설정하고 하나가 열리면 다른 node는 다 닫힌다.",
    "isFinal": false,
    "name": "onlyOneTopOpen",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "label출력시 사용되는 renderer",
    "isFinal": false,
    "name": "renderer",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Function",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Expand 또는 Collapse시에 Animation 사용 할지 여부",
    "isFinal": false,
    "name": "useAnimation",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "복사하고 붙여넣기시 tempId 사용할 지 여부, tempId를 사용하지 않으면 직접 id를 생성해서 작업해야 한다.\n id는 업무 로직에 따라 생성 권장. 임시 id는 사용시 주의 요망(timestamp기반 값이 들어가므로 업무적으로 실제 id로 변경 처리 필요)",
    "isFinal": false,
    "name": "useTempId",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "각 node div에 title을 지정하여 브라우저 기본 tooltip이 나타나도록 한다.",
    "isFinal": false,
    "name": "useTooltip",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LUnorderedList",
  "visibility": "protected"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "animation 작동 여부",
    "isFinal": false,
    "name": "useAnimation",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "expand시 다른 slibling을 닫을지 여부",
    "isFinal": false,
    "name": "useCollapseAllSibling",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LUnorderedListNode",
   "name": "Rui.ui.LUnorderedListNode",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LUnorderedListNode.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LUnorderedListNode",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "현재 node를 닫는다.",
    "name": "collapse",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자신의 노드를 제외한 다른 형제노드들을 모두 접는다.",
    "name": "collapseAllSibling",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "닫지 않는 top node index",
     "isFinal": false,
     "name": "exceptIndex",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node를 펼친다.",
    "name": "expand",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "하위 노드들을 배열로 리턴한다.",
    "name": "getChildNodes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "depth return",
    "name": "getDepth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "depth",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "ID field에 해당하는 값을 반환한다.",
    "name": "getIdValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "순서 index 가져오기",
    "name": "getOrder",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자신의 부모 node에 대한 dataSet에 해당되는 record의 id를 리턴한다.",
    "name": "getParentId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "recordId",
    "returnType": "string",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자신의 부모에 해당되는 node를 찾아 리턴한다.",
    "name": "getParentNode",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.LUnorderedListNode",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node에 해당되는 dataSet의 record 객체를 리턴한다.",
    "name": "getRecord",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.data.LRecord",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 자신의 dataSet에 해당되는 record의 id를 리턴한다.",
    "name": "getRecordId",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "recordId",
    "returnType": "string",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node에 해당되는 dataSet의 record index를 리턴한다.",
    "name": "getRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "자식을 가지고 있는지 검사",
    "name": "hasChild",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "자식이 있으면 true",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node가 닫혀진 상태인지 여부를 리턴한다.",
    "name": "isCollaps",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node가 펼쳐진 상태인지 여부를 리턴한다.",
    "name": "isExpand",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node가 focus된 상태인지를 리턴한다.",
    "name": "isFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node가 현재 같은 레벨(sibling)의 마지막 node인지 여부를 리턴한다.",
    "name": "isLast",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node의 상태가 마크되었는지를 리턴한다.",
    "name": "isMarked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "최상위(root) node인지 여부를 리턴한다.",
    "name": "isTop",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node의 상태를 mark 상태로 설정한다.",
    "name": "mark",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "노드 펼치고 접기 토글",
    "name": "toggleChild",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 node의 상태를 mark 상태를 취소한다.",
    "name": "unmark",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "propertys": [
   {
    "deprecated": false,
    "description": "expand시 자식 ul의 height",
    "isFinal": false,
    "name": "childULHeight",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "animation 작동 여부",
    "isFinal": false,
    "name": "useAnimation",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "expand시 다른 slibling을 닫을지 여부",
    "isFinal": false,
    "name": "useCollapseAllSibling",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "type": "Rui.ui.LUnorderedListNode",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "메뉴를 slide 형식으로 생성한다.",
   "name": "Rui.ui.menu.LSlideMenu",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LSlideMenu.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "메뉴를 slide 형식으로 생성한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "dom으로 node 만들기",
    "name": "createNodeObject",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.menu.LTabMenuNode",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 LI Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityLiRole",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 UL Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityUlRole",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ul의 depth",
     "isFinal": false,
     "name": "depth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUnorderedList",
  "type": "Rui.ui.menu.LSlideMenu",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "SlideMenu의 Node",
   "name": "Rui.ui.menu.LSlideMenuNode",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LSlideMenuNode.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "SlideMenu의 Node",
  "events": [],
  "methods": [],
  "module": "ui",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUnorderedListNode",
  "type": "Rui.ui.menu.LSlideMenuNode",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "false",
   "deprecated": false,
   "description": "click이 아닌 mouseover만으로도 하위 메뉴를 나타낼지 여부",
   "isFinal": false,
   "name": "expandOnOver",
   "parameterType": "CONFIG",
   "sample": "default",
   "scope": "instance",
   "type": "Rui.ui.grid.LColumnModel",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "tab 형식의 menu를 생성한다.",
   "name": "Rui.ui.menu.LTabMenu",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTabMenu.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "tab 형식의 menu를 생성한다.",
  "events": [
   {
    "deprecated": false,
    "description": "node가 lazy collapsed되면 발생하는 이벤트",
    "name": "nodeLazyCollapsed",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "node object",
      "isFinal": false,
      "name": "collapsed된",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node에 mouseout시 발생하는 event, 사용자 설정에 따라 node가 collapse된다.",
    "name": "nodeOut",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "click한 node object",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node에 mouseover시 발생하는 event, node가 expand된다.",
    "name": "nodeOver",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "click한 node object",
      "isFinal": false,
      "name": "node",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedListNode"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dom으로 node 만들기",
    "name": "createNodeObject",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.menu.LTabMenuNode",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 LI Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityLiRole",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 UL Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityUlRole",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ul의 depth",
     "isFinal": false,
     "name": "depth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 호출되는 메소드",
    "name": "onBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node의 mouseout 이벤트 핸들러",
    "name": "onMouseOut",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "click한 node div",
      "isFinal": false,
      "name": "_div",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "click한 menu object의 record id",
      "isFinal": false,
      "name": "rId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node의 mouseover 이벤트 핸들러",
    "name": "onMouseOver",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "click한 node div",
      "isFinal": false,
      "name": "_div",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "click한 menu object의 record id",
      "isFinal": false,
      "name": "rId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node click시 실행되는 내용",
    "name": "onNodeClick",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "click한 node div",
      "isFinal": false,
      "name": "_div",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "click한 menu object의 record id",
      "isFinal": false,
      "name": "rId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node click시 toggle처리",
    "name": "toggleChild",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "click된 node",
     "isFinal": false,
     "name": "node",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.menu.LTabMenuNode"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [
   {
    "deprecated": false,
    "description": "mouseover만으로도 하위 메뉴를 나타내는 expandOnOver기능을 사용시 메뉴들로부터 mouseout되면 하위메뉴들을 자동으로 collapse할지 여부",
    "isFinal": false,
    "name": "collapseWhenOut",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnModel",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "click이 아닌 mouseover만으로도 하위 메뉴를 나타낼지 여부",
    "isFinal": false,
    "name": "expandOnOver",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Rui.ui.grid.LColumnModel",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUnorderedList",
  "type": "Rui.ui.menu.LTabMenu",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LTabMenuNode",
   "name": "Rui.ui.menu.LTabMenuNode",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTabMenuNode.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LTabMenuNode",
  "events": [],
  "methods": [],
  "module": "ui",
  "plugin": "/ui/menu/rui_menu.js,/ui/menu/rui_menu.css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUnorderedListNode",
  "type": "Rui.ui.menu.LTabMenuNode",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "각 탭의 항목들을 json형식으로 정의한 배열",
   "isFinal": false,
   "name": "tabs",
   "parameterType": "CONFIG",
   "sample": "default",
   "scope": "instance",
   "type": "Array",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "Tab을 생성하고 관리하는 TabView 객체",
   "name": "Rui.ui.tab.LTabView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Tab을 생성하고 관리하는 TabView 객체",
  "events": [
   {
    "deprecated": false,
    "description": "탭의 인덱스가 변경되었을때 발생",
    "name": "activeIndexChange",
    "parameters": [
     {
      "deprecated": false,
      "description": "active된 탭의 index",
      "isFinal": false,
      "name": "activeIndex",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "처음 active 됬는지 여부",
      "isFinal": false,
      "name": "isFirst",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "active된 탭 객체",
      "isFinal": false,
      "name": "activeTab",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.tab.LTab"
     },
     {
      "deprecated": false,
      "description": "현재 active된 탭 이전에 active 상태였던 탭 객체",
      "isFinal": false,
      "name": "beforeActiveTab",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.tab.LTab"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "탭이 변경되었을때 발생",
    "name": "activeTabChange",
    "parameters": [
     {
      "deprecated": false,
      "description": "active된 탭의 index",
      "isFinal": false,
      "name": "activeIndex",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "처음 active 됬는지 여부",
      "isFinal": false,
      "name": "isFirst",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "active된 탭 객체",
      "isFinal": false,
      "name": "activeTab",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.tab.LTab"
     },
     {
      "deprecated": false,
      "description": "현재 active된 탭 이전에 active 상태였던 탭 객체",
      "isFinal": false,
      "name": "beforeActiveTab",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.tab.LTab"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "탭이 변경되었을때 발생",
    "name": "canActiveTabChange",
    "parameters": [
     {
      "deprecated": false,
      "description": "active된 탭의 index",
      "isFinal": false,
      "name": "activeIndex",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "active된 탭 객체",
      "isFinal": false,
      "name": "activeTab",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.tab.LTab"
     },
     {
      "deprecated": false,
      "description": "현재 active된 탭 이전에 active 상태였던 탭 객체",
      "isFinal": false,
      "name": "beforeActiveTab",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.tab.LTab"
     }
    ],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "LTabView에 LTab을 추가하는 메소드",
    "name": "addTab",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "LTab 객체",
      "isFinal": false,
      "name": "tab",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.tab.LTab"
     },
     {
      "deprecated": false,
      "description": "[optional] 추가할 index",
      "isFinal": false,
      "name": "index",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Integer"
     }
    ],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "config를 통해 들어온 tabs 배열로 tab들을 추가한다.",
    "name": "addTabs",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "속성의 현재 설정되어 있는 값을 반환한다.",
    "name": "get",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "value가 반환될 속성명.",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "속성의 현재 설정되어 있는 값.",
    "returnType": "Any",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 선택된 Tab의 index",
    "name": "getActiveIndex",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 선택된 Tab을 리턴한다.",
    "name": "getActiveTab",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.tab.LTab",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "index에 대한 tab 객체를 리턴한다.",
    "name": "getTab",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "tab index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Integer"
    }],
    "returnType": "Rui.ui.tab.LTab",
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "tab의 갯수를 리턴한다.",
    "name": "getTabCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "tab의 index를 리턴한다.",
    "name": "getTabIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "tab 객체",
     "isFinal": false,
     "name": "tab",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.tab.LTab"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "moveTo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "스크롤을 이동할 탭의 인덱스",
      "isFinal": false,
      "name": "index",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 탭 스크롤시 animation 사용여부",
      "isFinal": false,
      "name": "useAmim",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "index에 해당되는 LTab을 삭제한다.",
    "name": "removeAt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 tab index",
     "isFinal": false,
     "name": "inx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LTab을 삭제한다.",
    "name": "removeTab",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 LTab 객체",
     "isFinal": false,
     "name": "tab",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.ui.tab.LTab"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "활성화할 tab을 선택한다.",
    "name": "selectTab",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "선택할 탭 index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "속성값을 설정한다.",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성에 적용할 값",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Any"
     },
     {
      "deprecated": false,
      "description": "change event들에 대한 억제 여부",
      "isFinal": false,
      "name": "silent",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnDescription": "값이 설정되었는지에 대한 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "contentHeight의 높이를 변경한다.",
    "name": "setContentHeight",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "contentHeight 높이 값",
     "isFinal": false,
     "name": "height",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체 정보",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "/ui/tab/rui_tab.js,/ui/tab/rui_tab.css",
  "propertys": [
   {
    "deprecated": false,
    "description": "content Height",
    "isFinal": false,
    "name": "contentHeight",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "각 탭의 항목들을 json형식으로 정의한 배열",
    "isFinal": false,
    "name": "tabs",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.tab.LTabView",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "'content'",
   "deprecated": false,
   "description": "The tab's content. CONTENT_EL의 innerHTML에 할달될 내용",
   "isFinal": false,
   "name": "CONTENT",
   "parameterType": "CONFIG",
   "sample": "default",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "TabView에 의해 생성되어 관리되는 Tab 객체\n 탭의 label을 표시하며 컨텐츠를 표시한다.",
   "name": "Rui.ui.tab.LTab",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LUIComponent.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "TabView에 의해 생성되어 관리되는 Tab 객체\n 탭의 label을 표시하며 컨텐츠를 표시한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "element Dom객체 생성",
    "name": "_createTabElement",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom에 css를 추가한다.",
    "name": "addClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "추가할 className",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "컨테이너 객체를 리턴하는 메소드",
    "name": "getContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "disabled 값을 리턴한다.",
    "name": "getDisabled",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "label 값을 리턴한다.",
    "name": "getLabel",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom에 css가 존재하는지 여부를 리턴한다.",
    "name": "hasClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The className to add",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "element가 class name을 가지고 있는지에 대한 여부",
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Set the current activated tab",
    "name": "onActivate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "tab's event object",
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom에 적용된 css를 삭제한다.",
    "name": "removeClass",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 className",
     "isFinal": false,
     "name": "className",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Array"
    }],
    "returnDescription": "this",
    "returnType": "Rui.LElement",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "disabled 값을 변경한다.",
    "name": "setDisabled",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "설정할 disabled 속성값을 설정한다.",
     "isFinal": false,
     "name": "disabled",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "label을 바꾼다.",
    "name": "setLabel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "text or html",
     "isFinal": false,
     "name": "html",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Provides a readable name for the tab.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "/ui/tab/rui_tab.js,/ui/tab/rui_tab.css",
  "propertys": [
   {
    "deprecated": false,
    "description": "The tab's label text or innerHTML",
    "isFinal": false,
    "name": "contentEl",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string || HtmlElement ",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "The tab's label text or innerHTML",
    "isFinal": false,
    "name": "label",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String || HtmlElement",
    "visibility": "public"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.ui.tab.LTab",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'text'",
    "deprecated": false,
    "description": "nodeType : 트리의 checkbox를 출력할지 단순 text를 출력할지 결정한다.",
    "isFinal": false,
    "name": "nodeType",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "folder image를 보여 줄 지 여부",
    "isFinal": false,
    "name": "showFolder",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "label click시 toggle할지 여부",
    "isFinal": false,
    "name": "toggleByLabel",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "트리를 출력하는 객체",
   "name": "Rui.ui.tree.LTreeView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTreeView.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "트리를 출력하는 객체",
  "events": [
   {
    "deprecated": false,
    "description": "node의 check box를 click했을 때 발생",
    "name": "checkboxClick",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.ui.LUnorderedList"
     },
     {
      "deprecated": false,
      "description": "check여부",
      "isFinal": false,
      "name": "checked",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node의 label을 click했을 때 발생",
    "name": "labelClick",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.ui.LUnorderedList"
    }],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "node의 +/- image를 click했을 때 발생",
    "name": "nodeImageClick",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.ui.LUnorderedList"
    }],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "dom으로 node 만들기",
    "name": "createNodeObject",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.tree.LTreeViewNode",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 LI Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityLiRole",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "웹 접근성을 위한 UL Tag의 role 속성의 값을 가져온다.",
    "name": "getAccessibilityUlRole",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "ul의 depth",
     "isFinal": false,
     "name": "depth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "웹접근성의 role 속성의 값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node mouseout시 실행되는 내용",
    "name": "onNodeMouseout",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "node mouseover시 실행되는 내용",
    "name": "onNodeMouseover",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Open node depth",
    "name": "openDepthNode",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_tree",
  "plugin": "/ui/tree/rui_tree.js,/ui/tree/rui_tree.css",
  "propertys": [
   {
    "deprecated": false,
    "description": "nodeType : text|checkbox",
    "isFinal": false,
    "name": "nodeType",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "folder image를 보여 줄 지 여부",
    "isFinal": false,
    "name": "showFolder",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "label click시 toggle할지 여부",
    "isFinal": false,
    "name": "toggleByLabel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUnorderedList",
  "type": "Rui.ui.tree.LTreeView",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "TreeView의 Node",
   "name": "Rui.ui.tree.LTreeViewNode",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTreeViewNode.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "TreeView의 Node",
  "events": [],
  "methods": [],
  "module": "ui_tree",
  "plugin": "/ui/tree/rui_tree.js,/ui/tree/rui_tree.css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUnorderedListNode",
  "type": "Rui.ui.tree.LTreeViewNode",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LXmlDataSet",
   "name": "Rui.data.LXmlDataSet",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LXmlDataSet.",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LXmlDataSet",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "현재 DataSet 기준으로 결과 데이터를 Object로 변환하여 리턴",
    "name": "getReadResponseData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "응답 객체",
     "isFinal": false,
     "name": "conn",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "데이터 정보를 문자열로 리턴한다.",
    "name": "serialize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "선택된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeMarkedOnly",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "변경된 데이터 정보를 문자열로 리턴한다.",
    "name": "serializeModified",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "변경된 문자열",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "data",
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.data.LDataSet",
  "type": "Rui.data.LXmlDataSet",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "",
   "name": "Rui.dd.LDDList",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "드랍 대상인 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop object들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정 가능한 attribute를 포함한 object\n                 LDragDrop에 추가적으로 LDDList에 대해 유효한 속성들:",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "",
  "events": [],
  "methods": [],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDDProxy",
  "type": "Rui.dd.LDDList",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "",
   "name": "Rui.dd.LDDOnTop",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "드랍 대상인 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop object들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정 가능한 attribute를 포함한 object\n                 LDragDrop에 추가적으로 LDDOnTop에 대해 유효한 속성들:",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "",
  "events": [],
  "methods": [],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDD",
  "type": "Rui.dd.LDDOnTop",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "",
   "name": "Rui.dd.LDDPlayer",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "드랍 대상인 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop object들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정 가능한 attribute를 포함한 object\n                 LDragDrop에 추가적으로 LDDPlayer에 대해 유효한 속성들:",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "",
  "events": [],
  "methods": [],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDDProxy",
  "type": "Rui.dd.LDDPlayer",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "",
   "name": "Rui.dd.LDDRegion",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "드랍 대상인 element의 id",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "연관된 LDragDrop object들의 그룹",
     "isFinal": false,
     "name": "group",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    },
    {
     "deprecated": false,
     "description": "설정 가능한 attribute를 포함한 object\n                 LDragDrop에 추가적으로 LDDRegion에 대해 유효한 속성들:",
     "isFinal": false,
     "name": "attributes",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "",
  "events": [],
  "methods": [],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.dd.LDD",
  "type": "Rui.dd.LDDRegion",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LCommonPanel",
   "name": "Rui.ui.LCommonPanel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LCommonPanel.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LCommonPanel",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 el 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Rui.LElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "view를 초기화한다.",
    "name": "initView",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.LCommonPanel",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'선택된",
    "deprecated": false,
    "description": "파일 선택 메시지",
    "isFinal": false,
    "name": "emptyMsg",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "dialog내에 생성되는 fileBox의 name값",
    "isFinal": false,
    "name": "name",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "파일 업로드시 request의 파라미터 설정한다.",
    "isFinal": false,
    "name": "params",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "'fileUploadStatus.jsp'",
    "deprecated": false,
    "description": "상태를 확인하는 url",
    "isFinal": false,
    "name": "statusUrl",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "upload url 경로",
    "isFinal": false,
    "name": "url",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "파일을 첨부하여 서버로 업로드하는데 필요한 업로드용 dialog\n LFileUploadDialog",
   "name": "Rui.ui.LFileUploadDialog",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LFileUploadDialog.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "파일을 첨부하여 서버로 업로드하는데 필요한 업로드용 dialog\n LFileUploadDialog",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "params 객체를 리턴한다.",
    "name": "getParams",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "show event handler",
    "name": "onShow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "handler 이벤트",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "params 객체를 변경한다.",
    "name": "setParams",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "progress의 진행 값을 반영한다.",
    "name": "setProgressValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "진행값",
     "isFinal": false,
     "name": "percent",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LDialog",
  "type": "Rui.ui.LFileUploadDialog",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "파일을 첨부하여 서버로 업로드하는데 필요한 업로드용 panel\n LFileUploadPanel",
   "name": "Rui.ui.LFileUploadPanel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LFileUploadPanel.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "파일을 첨부하여 서버로 업로드하는데 필요한 업로드용 panel\n LFileUploadPanel",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "객체 render",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dialog를 초기화한다.",
    "name": "initView",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "oConfig",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체 render",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LCommonPanel",
  "type": "Rui.ui.LFileUploadPanel",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "L-fn-arrow",
   "deprecated": false,
   "description": "viewer의 Arrow 이미지 css를 적용한다.",
   "isFinal": false,
   "name": "arrowCss",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "특정 영역에 포커스하여 알림 메시지를 출력하는 객체",
   "name": "Rui.ui.LFocusNotification",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LFocusNotification.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "특정 영역에 포커스하여 알림 메시지를 출력하는 객체",
  "events": [{
   "deprecated": false,
   "description": "창이 닫으면 발생하는 이벤트",
   "name": "closed",
   "parameters": [{
    "deprecated": false,
    "description": "this객체",
    "isFinal": false,
    "name": "target",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "메시지 창을 숨긴다. LFocusNotification은 hide시 자신의 객체를 destory 한다.",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LFocusNotification",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "100",
    "deprecated": false,
    "description": "IFrame의 contentWindow에 FrameDialog 객체를 전달할 Interval 값\n FrameDialog 내부에 생성되는 IFrame에 컨텐츠가 준비되면 이 FrameDialog 객체를 IFrame내 contentWindow에 전달하여 컨텐츠내에서 사용할 수 있어야 한다.\n 이때 전달할 시점을 정하는 Timer의 interval값",
    "isFinal": false,
    "name": "hostDialogDeliveryInterval",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "'Dialog'",
    "deprecated": false,
    "description": "Dialog의 Title",
    "isFinal": false,
    "name": "title",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "Specifies whether the Module is visible on the page.",
    "isFinal": false,
    "name": "visible",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "IFRAME으로 채워지는 Dialog\n Dialog내부 BODY의 컨텐츠를 IFRAME을 이용하여 구성하며, 이 IFRAME에 URL을 지정하여 화면에 출력한다.",
   "name": "Rui.ui.LFrameDialog",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LFrameDialog.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "IFRAME으로 채워지는 Dialog\n Dialog내부 BODY의 컨텐츠를 IFRAME을 이용하여 구성하며, 이 IFRAME에 URL을 지정하여 화면에 출력한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "iframe의 document 객체를 리턴한다.",
    "name": "getFrameDocumentEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "iframe의 window 객체를 리턴한다.",
    "name": "getFrameWindow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "hide",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체의 이벤트 초기화 메소드",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "다이얼로그의 높이 설정",
    "name": "setHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "iframe에 url를 변경한다.",
    "name": "setUrl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "다이얼로그의 너비 설정",
    "name": "setWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LDialog",
  "type": "Rui.ui.LFrameDialog",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "현재 페이지의 고유 문자열",
   "isFinal": false,
   "name": "pageName",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "String",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "화면 가이드를 지원하는 객체",
   "name": "Rui.ui.LGuide",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LGuide.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "화면 가이드를 지원하는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "상태정보를 boolean값으로 얻어오는 메소드",
    "name": "getBoolean",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태정보를 얻어오는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 Int로 얻어오는 메소드",
    "name": "getInt",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태정보를 얻어오는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "상태정보를 하루에 한번만 값을 true로 얻어오는 메소드",
    "name": "getToday",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "상태정보를 얻어오는 키 이름",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnDescription": "키 이름에 해당되는 결과 값",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LGuide",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "현재 페이지의 고유 문자열",
    "isFinal": false,
    "name": "pageName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "guide 스크립트가 포함된 js 파일(쓰지 않으면 pageName + '_guide.js'로 기본지정)",
    "isFinal": false,
    "name": "pageUrl",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "params 객체",
    "isFinal": false,
    "name": "params",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "가이드 기능을 실행할 것인지 여부",
    "isFinal": false,
    "name": "showPageGuide",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "Rui.webdb.LWebStorage 객체",
    "isFinal": false,
    "name": "webStore",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.webdb.LWebStorage",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "화면 가이드를 지원하는 LGuide객체 관리자",
   "name": "Rui.ui.LGuideManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LGuideManager.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "화면 가이드를 지원하는 LGuide객체 관리자",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "params 정보를 추가한다.",
    "name": "addParams",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "params 정보",
     "isFinal": false,
     "name": "params",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 페이지의 가이드 상태 정보를 모두 초기화한다.",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "사용자 가이드 메소드를 호출한다.",
    "name": "invokeGuideFn",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "호출할 메소드 명",
     "isFinal": false,
     "name": "name",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LGuideManager",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "enter key 입력시 stop edit 여부",
    "isFinal": false,
    "name": "enterStopEdit",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "field 객체",
    "isFinal": false,
    "name": "field",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "disable 여부",
    "isFinal": false,
    "name": "isDisable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LInlineEditor",
   "name": "Rui.ui.LInlineEditor",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LInlineEditor",
  "events": [
   {
    "deprecated": false,
    "description": "edit가 시작할때 호출되는 이벤트",
    "name": "endEdit",
    "parameters": [
     {
      "deprecated": false,
      "description": "this 객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "편집 editor 객체",
      "isFinal": false,
      "name": "field",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.form.LField"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "edit가 시작할때 호출되는 이벤트",
    "name": "isEdit",
    "parameters": [
     {
      "deprecated": false,
      "description": "this 객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "target객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "event객체",
      "isFinal": false,
      "name": "event",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "edit가 시작할때 호출되는 이벤트",
    "name": "startEdit",
    "parameters": [
     {
      "deprecated": false,
      "description": "this 객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "편집 editor 객체",
      "isFinal": false,
      "name": "field",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Rui.form.LField"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor를 사용 불가능 하는 메소드",
    "name": "disable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "객체의 아이디나 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editor를 사용 가능 하는 메소드",
    "name": "enable",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LInlineEditor",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "Load Page가 자동으로 hide되는 시간",
   "isFinal": false,
   "name": "timeout",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "Object",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "LLoadPage",
   "name": "Rui.ui.LLoadPage",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LLoadPage.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LLoadPage",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "wait panel 객체를 숨기는 메소드",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wait panel 객체를 출력하는 메소드",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.LLoadPage",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "\"mousedown\"",
    "deprecated": false,
    "description": "The default DOM event that should be used to focus an Overlay",
    "isFinal": false,
    "name": "focusevent",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "The collection of registered Overlays in use by\n the LPanelManager",
    "isFinal": false,
    "name": "overlays",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.LOverlay[]",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "여러개의 패널이 걸쳐있을 경우 focus상태를 관리하는데 이용",
   "name": "Rui.ui.LPanelManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "Optional. A collection of Panels to register\n with the manager.",
     "isFinal": false,
     "name": "Panels",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Array"
    },
    {
     "deprecated": false,
     "description": "The object literal representing the user\n configuration of the LPanelManager",
     "isFinal": false,
     "name": "userConfig",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "여러개의 패널이 걸쳐있을 경우 focus상태를 관리하는데 이용",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "Subscribes to the Overlay based instance's blurEvent to allow the LPanelManager to\n monitor blur state.\n\n If the instance already has a blurEvent (e.g. LMenu), LPanelManager will on\n to the existing blurEvent, however if a blurEvent or blur method does not exist\n on the instance, the _bindBlur method will add them, and the blur method\n update the LPanelManager's state directly.",
    "name": "_bindBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The overlay for which blur needs to be managed",
     "isFinal": false,
     "name": "overlay",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Overlay"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Subscribes to the Overlay based instance's destroyEvent, to allow the Overlay\n to be removed for the LPanelManager when destroyed.",
    "name": "_bindDestroy",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The overlay instance being managed",
     "isFinal": false,
     "name": "overlay",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Overlay"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Subscribes to the Overlay based instance focusEvent, to allow the LPanelManager to\n monitor focus state.\n\n If the instance already has a focusEvent (e.g. LMenu), LPanelManager will on\n to the existing focusEvent, however if a focusEvent or focus method does not exist\n on the instance, the _bindFocus method will add them, and the focus method will\n update the LPanelManager's state directly.",
    "name": "_bindFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The overlay for which focus needs to be managed",
     "isFinal": false,
     "name": "overlay",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Overlay"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Updates the state of the LPanelManager and overlay, as a result of the overlay\n being blurred.",
    "name": "_manageBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The overlay instance which got blurred.",
     "isFinal": false,
     "name": "overlay",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Overlay"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Updates the state of the LPanelManager and overlay, as a result of the overlay\n receiving focus.",
    "name": "_manageFocus",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The overlay instance which got focus.",
     "isFinal": false,
     "name": "overlay",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Overlay"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Ensures the zIndex configuration property on the managed overlay based instance\n is set to the computed zIndex value from the DOM (with \"auto\" translating to 0).",
    "name": "_syncZIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "The overlay instance being managed",
     "isFinal": false,
     "name": "overlay",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Overlay"
    }],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Removes focus from all registered Overlays in the manager",
    "name": "blurAll",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Places the specified Overlay instance on top of all other\n Overlay instances.",
    "name": "bringToTop",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Object representing an\n Overlay instance.",
      "isFinal": false,
      "name": "p_oOverlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.ui.LOverlay"
     },
     {
      "deprecated": false,
      "description": "String representing the id of an\n Overlay instance.",
      "isFinal": false,
      "name": "p_oOverlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Attempts to locate an Overlay by instance or ID.",
    "name": "find",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "An Overlay to locate within the manager",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Overlay"
     },
     {
      "deprecated": false,
      "description": "An Overlay id to locate within the manager",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnDescription": "The requested Overlay, if found, or null if it",
    "returnType": "Overlay",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Focuses the specified Overlay",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The Overlay to focus",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Overlay"
     },
     {
      "deprecated": false,
      "description": "The id of the Overlay to focus",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns the currently focused Overlay",
    "name": "getActive",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The currently focused Overlay",
    "returnType": "Overlay",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Hides all Overlays in the manager.",
    "name": "hideAll",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Registers an Overlay or an array of Overlays with the manager. Upon\n registration, the Overlay receives functions for focus and blur,\n along with CustomEvents for each.",
    "name": "register",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "An Overlay to register with the manager.",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Overlay"
     },
     {
      "deprecated": false,
      "description": "An array of Overlays to register with\n the manager.",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Overlay[]"
     }
    ],
    "returnDescription": "true if any Overlays are registered.",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Removes the specified Overlay from the manager",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "The Overlay to remove",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Overlay"
     },
     {
      "deprecated": false,
      "description": "The id of the Overlay to remove",
      "isFinal": false,
      "name": "overlay",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Shows all Overlays in the manager.",
    "name": "showAll",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Returns a string representation of the object.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The string representation of the LPanelManager",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [{
   "deprecated": false,
   "description": "The LPanelManager's Config object used for monitoring\n configuration properties.",
   "isFinal": false,
   "name": "cfg",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Config",
   "visibility": "public"
  }],
  "scope": "instance",
  "type": "Rui.ui.LPanelManager",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "알림 메시지를 출력하는 패널",
   "name": "Rui.ui.LNotification",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LNotification.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "알림 메시지를 출력하는 패널",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "알림메시지를 숨긴다.",
    "name": "hide",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LNotification",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "알림 메시지 패널을 관리하는 객체",
   "name": "Rui.ui.LNotificationManager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LNotificationManager.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "알림 메시지 패널을 관리하는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "인스턴스를 얻어오는 메소드",
    "name": "getInstance",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.ui.LNotificationManager",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "공지 메시지 출력하는 메소드\n options 정보 : { body: '출력할 메시지', buttons: [ { text: '취소하기', handler: function(e) { 수행할 내용 } } ] }",
    "name": "show",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "옵션정보",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LEventProvider",
  "type": "Rui.ui.LNotificationManager",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "10",
    "deprecated": false,
    "description": "페이지그룹 크기: 사용자가 페이지를 이동시키는데 사용할 페이지 네비게이터에 표시될 페이저 링크의 갯수\n 총 500개의 데이터가 존재하며, pageSize가 10인 경우 총 50개의 페이지로 나눠진다. 이때 이 값인 pageGroupSize가 10인 경우\n 페이지 네비게이터에 총 5개의 페이지그룹이 생성된다.",
    "isFinal": false,
    "name": "pageGroupSize",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "페이지번호: 출력할 현재 페이지번호\n 페이지당 데이터(레코드)수 가 10이며, 페이지번호가 3인 경우 데이터(레코드)의 출력 범위는 31~40 이다.",
    "isFinal": false,
    "name": "pageNumber",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "'pageNumber'",
    "deprecated": false,
    "description": "페이지 이동을 위해 서버로 전송될 요청의 query string에 포함될 pageNumber명으로 이 값을 key로 하여 설정된 pageNumber가 전송된다.\n ex) ./list?pageNumber=3",
    "isFinal": false,
    "name": "pageNumberFieldName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "10",
    "deprecated": false,
    "description": "페이지당 데이터(레코드) 수: 한개의 페이지에 보여질 데이터(레코드)의 수\n 총 500개의 데이터가 존재한다면, 이 값인 pageSize가 10인 경우 총 50개의 페이지로 나눠진다.",
    "isFinal": false,
    "name": "pageSize",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "'pageSize'",
    "deprecated": false,
    "description": "페이지 이동을 위해 서버로 전송될 요청의 query string에 포함될 pageSize 명으로 이 값을 Key로 하여 설정된 pageSize가 전송된다.\n ex) ./list?pageSize=10",
    "isFinal": false,
    "name": "pageSizeFieldName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "sortDir",
    "deprecated": false,
    "description": "페이지 정렬을 위해 서버로 전송될 요청의 query string에 포함될 정렬 방향으로 이 값을 key로 하여 정렬 방향이 전송된다.\n ex) ./list?sortDir=DESC",
    "isFinal": false,
    "name": "sortDirFieldName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "sortField",
    "deprecated": false,
    "description": "페이지 정렬을 위해 서버로 전송될 요청의 query string에 포함될 정렬 대상 필드명으로 이 값을 key로 하여 정렬대상 필드명이 전송된다.\n ex) ./list?sortField=NAME",
    "isFinal": false,
    "name": "sortFieldName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "devonOrderBy",
    "deprecated": false,
    "description": "페이지 정렬을 위해 서버로 전송될 요청의 query string에 포함될 정렬 조건이며, 이 값을 key로 DB Query이 생성되어 전송된다.\n ex) ./list?sortQuery=order by NAME DESC",
    "isFinal": false,
    "name": "sortQueryFieldName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "페이저인 페이지 이동 링크 사이에 구분자를 넣을 지 여부",
    "isFinal": false,
    "name": "useDivider",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'startRowIndex'",
    "deprecated": false,
    "description": "페이지 이동을 위해 서버로 전송될 요청의 query string에 포함될 시작 데이터(레코드) index 명으로 이 값을 Key로 하여 시작 데이터(레코드)의 index가 전송된다.\n ex) pageSize가 10이며, pageNumber가 2인 경우 출력될 데이터의 범위는 11~20이다. 이때의 startowIndex는 11이며 다음과 같이 전송된다.\n ./list?pageNumber=1&amp;pageSize=10&amp;startRowIndex=11",
    "isFinal": false,
    "name": "viewPageStartRowIndexFieldName",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "페이징 처리를 할 수 있게 지원하는 객체",
   "name": "Rui.ui.LPager",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LPager.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "페이징 처리를 할 수 있게 지원하는 객체",
  "events": [
   {
    "deprecated": false,
    "description": "페이지가 변경 되기전에 발생하는 이벤트",
    "name": "beforeChange",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동된 page 번호",
      "isFinal": false,
      "name": "pageNumber",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "이동전 page 번호",
      "isFinal": false,
      "name": "beforeViewPageNumber",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "sample": "default",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "page number 선택으로 page가 변경된후 발생하는 event",
    "name": "changed",
    "parameters": [{
     "deprecated": false,
     "description": "이동된 page 번호",
     "isFinal": false,
     "name": "pageNumber",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "int"
    }],
    "sample": "default",
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "현재 페이지를 다른 페이지로 이동한다.\n 단 pagerMode가 scroll인 경우는 그리드의 스크롤러를 이동시켜서 페이지가 이동되도록 한다.",
    "name": "_setPageNumber",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재 page번호",
      "isFinal": false,
      "name": "pageNumber",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 이동될 페이지를 reload한다. 기본값 true로 기본 reload하나 pagerMode에선 무조건 reload한다.",
      "isFinal": false,
      "name": "reload",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "sample": "default",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 페이지를 번호를 리턴한다.",
    "name": "getPageNumber",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "pageNumber 현재 page번호",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "서버에 전송하기 위해 paging 관련 parameter 값을 얻어온다.",
    "name": "getParams",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "[optional] 해당 page번호를 가지는 page naviagtion query를 return",
     "isFinal": false,
     "name": "pageNumber",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int "
    }],
    "returnDescription": "parameters",
    "returnType": "object",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "page 표시 item html text 생성",
    "name": "getRenderItem",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "render할 page번호",
      "isFinal": false,
      "name": "pageNumber",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "현재 page일 경우 select하기위한 css class",
      "isFinal": false,
      "name": "selected",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "page 숫자 구분자 html text생성",
    "name": "getRenderItemDivider",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "페이지 이동",
    "name": "goPage",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동할 page번호",
      "isFinal": false,
      "name": "number",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] dataset을 reload할지 여부. default는 dataset을 reload 한다.",
      "isFinal": false,
      "name": "reload",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "first page로 이동",
    "name": "moveFirstPage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "last page로 이동",
    "name": "moveLastPage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "next page group으로 이동",
    "name": "moveNextGroup",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "next page로 이동",
    "name": "moveNextPage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "prev page group으로 이동",
    "name": "movePrevGroup",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "prev page로 이동",
    "name": "movePrevPage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet data Changed시 실행할 method",
    "name": "onDataChanged",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet on load시 실행할 method",
    "name": "onLoadDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "auto width의 경우 panel width가 조정될 경우 재계산",
    "name": "onWidthResize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 Render하는 메소드",
    "name": "render",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "객체를 붙이고자 하는 Node정보",
     "isFinal": false,
     "name": "appendToNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "pager에 표시한 페이지 번호 dom load",
    "name": "renderItems",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "pager 기본 구조 dom 생성",
    "name": "renderMaster",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "pager 다시 그리기",
    "name": "rerender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet 재 할당하기",
    "name": "setDataSet",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "page정보 설정하기, item이 새로 rendering됨",
    "name": "setPage",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "config.pageNumber, config.pageSize, config.pageGroupSize, config.totalCount",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "페이지그룹 크기 값을 변경한 후 필요시 페이저를 다시 랜더링한다.",
    "name": "setPageGroupSize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "다시 render할지 여부, default로 true",
     "isFinal": false,
     "name": "rerender",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 페이지를 다른 페이지로 이동한다.",
    "name": "setPageNumber",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재 page번호",
      "isFinal": false,
      "name": "pageNumber",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "[optional] 이동될 페이지를 reload한다. 기본값 true",
      "isFinal": false,
      "name": "reload",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "페이지당 데이터(레코드) 수인 pageSize값을 변경한 후 필요시 페이저를 다시 랜더링한다.",
    "name": "setPageSize",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "다시 render할지 여부, default로 true",
     "isFinal": false,
     "name": "rerender",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "전체 데이터(레코드) 수를 재 설정하며 필요시 페이저를 다시 랜더링한다.",
    "name": "setTotalCount",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "다시 render할지 여부, default로 true",
     "isFinal": false,
     "name": "rerender",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "panel footer의 width를 구해서 할당.",
    "name": "updateWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "js,css",
  "propertys": [
   {
    "deprecated": false,
    "description": "다음 페이지 그룹 이동 표시에 문자를 사용할 경우 문자 기술",
    "isFinal": false,
    "name": "nextPageGroupText",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이전 페이지 이동 표시에 문자를 사용할 경우 문자 기술",
    "isFinal": false,
    "name": "prevPageText",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "string",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LPager",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "side bar가 고정될 형태를 지정한다.\n [static, vertical, horizontal]을 지정할 수 있다.",
    "isFinal": false,
    "name": "type",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "side bar에 놓여질 컨텐츠의 좌측 마진 값을 설정한다 (px)",
    "isFinal": false,
    "name": "x",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "side bar에 놓여질 컨텐츠의 상단 마진 값을 설정한다 (px)",
    "isFinal": false,
    "name": "y",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "스크롤되지 않고 고정된 영역의 Bar를 관리한다.",
   "name": "Rui.ui.LSideBar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LSideBar.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "스크롤되지 않고 고정된 영역의 Bar를 관리한다.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "pager 기본 구조 dom 생성",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "pager 기본 구조 dom 생성",
    "name": "initEvents",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "pager 기본 구조 dom 생성",
    "name": "renderMaster",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "plugin",
  "propertys": [
   {
    "deprecated": false,
    "description": "side bar가 고정될 형태를 지정한다.\n [static, vertical, horizontal]을 지정할 수 있다.",
    "isFinal": false,
    "name": "type",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "side bar에 놓여질 컨텐츠의 좌측 마진 값을 설정한다 (px)",
    "isFinal": false,
    "name": "x",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "side bar에 놓여질 컨텐츠의 상단 마진 값을 설정한다 (px)",
    "isFinal": false,
    "name": "y",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LSideBar",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "생성할 버튼의 갯수를 지정한다.\n items 속성을 지정할 경우 이 값은 무시되며, items에 지정한 만큼 버튼이 생성된다.",
    "isFinal": false,
    "name": "count",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "label등을 가질 수 있는 버튼들을 정의한다.",
    "isFinal": false,
    "name": "items",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "object",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "버튼을 toggle로 사용할지 여부.\n toggle일 경우 모든 버튼은 각각 on/off 되며, false로 지정하여 toggle을 사용하지 않을 경우 모든 버튼들 중 단 하나만 on된다.",
    "isFinal": false,
    "name": "toggle",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LSwitch",
   "name": "Rui.ui.LSwitch",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LSwitch.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LSwitch",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "el 컨테이너 생성",
    "name": "createContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "switch button의 label을 가져온다.",
    "name": "getLabel",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "가져올 button의 index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "string",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체의 value값을 리턴한다.",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "객체에 들어 있는 값",
    "returnType": "int|Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "switch button이 현재 켜짐상태인지 확인한다.",
    "name": "isOn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "switch를 push 한다. toggle 속성 값이 true인 경우에는 toggle로 동작한다.",
    "name": "push",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "push할 버튼의 index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "switch button을 끈다.",
    "name": "pushOff",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "off 하려는 버튼의 index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "switch button을 켠다.",
    "name": "pushOn",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "on 하려는 버튼의 index",
     "isFinal": false,
     "name": "index",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "switch button의 label을 변경한다. HTML 사용가능하다.",
    "name": "setLabel",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "변경할 button의 index",
      "isFinal": false,
      "name": "index",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "label로 사용할 문자열(HTML 가능)",
      "isFinal": false,
      "name": "label",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "string"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [
   {
    "deprecated": false,
    "description": "label등을 가질 수 있는 버튼들을 정의한다.",
    "isFinal": false,
    "name": "items",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "object",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "생성할 버튼의 갯수를 지정한다.",
    "isFinal": false,
    "name": "rowModel",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "버튼을 toggle로 사용할지 여부.",
    "isFinal": false,
    "name": "toggle",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "protected"
   }
  ],
  "scope": "instance",
  "superclass": "Rui.ui.LUIComponent",
  "type": "Rui.ui.LSwitch",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "5000",
    "deprecated": false,
    "description": "툴팁 표시 후 hide time(ms 단위)",
    "isFinal": false,
    "name": "autodismissdelay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "툴팁이 적용될 DOM element",
    "isFinal": false,
    "name": "context",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "툴팁 div id",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "5",
    "deprecated": false,
    "description": "툴팁이 표시될 위치 margin",
    "isFinal": false,
    "name": "margin",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "500",
    "deprecated": false,
    "description": "툴팁 표시 delaytime(ms 단위)",
    "isFinal": false,
    "name": "showdelay",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "마우스 이동시 툴팁 동시 이동 여부",
    "isFinal": false,
    "name": "showmove",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "툴팁에 표시될 텍스트",
    "isFinal": false,
    "name": "text",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LTooltip",
   "name": "Rui.ui.LTooltip",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTooltip.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LTooltip",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "DOM에서 tooltip 엘리먼트를 제거하고 관련 이벤트를 unOn처리 한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "툴팁 표시 text를 변경한다.",
    "name": "setText",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "tooltip에 표현될 text",
     "isFinal": false,
     "name": "text",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui",
  "plugin": "js,css",
  "propertys": [
   {
    "deprecated": false,
    "description": "툴팁 표시 후 hide time(ms 단위)",
    "isFinal": false,
    "name": "autodismissdelay",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "툴팁이 적용될 DOM element",
    "isFinal": false,
    "name": "context",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "툴팁이 표시될 위치 margin",
    "isFinal": false,
    "name": "margin",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "object type 속성",
    "isFinal": false,
    "name": "otype",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "툴팁 표시 delaytime(ms 단위)",
    "isFinal": false,
    "name": "showdelay",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "Int",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "마우스 이동시 툴팁 동시 이동 여부",
    "isFinal": false,
    "name": "showmove",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "툴팁에 표시될 텍스트",
    "isFinal": false,
    "name": "text",
    "parameterType": "PROPERTIES",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.LTooltip",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LFromToCalendar",
   "name": "Rui.ui.calendar.LFromToCalendar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LFromToCalendar.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LFromToCalendar",
  "events": [{
   "deprecated": false,
   "description": "시작, 종료일자 모두 선택되면 호출되는 이벤트",
   "name": "select",
   "parameters": [],
   "sample": "default",
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.calendar.LFromToCalendar",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LMonthCalendar",
   "name": "Rui.ui.calendar.LMonthCalendar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LMonthCalendar.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LMonthCalendar",
  "events": [],
  "methods": [],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.calendar.LMonthCalendar",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LSimpleCalendar (미완성: 사용하면 안됨)",
   "name": "Rui.ui.calendar.LSimpleCalendar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LSimpleCalendar.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LSimpleCalendar (미완성: 사용하면 안됨)",
  "events": [
   {
    "deprecated": false,
    "description": "Cell이 선택취소되기전에 수행하는 이벤트",
    "name": "beforeDeselect",
    "parameters": [
     {
      "deprecated": false,
      "description": "일자",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "날짜 객체",
      "isFinal": false,
      "name": "currentDate",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Date"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Cell이 선택되기전에 수행하는 이벤트",
    "name": "beforeSelect",
    "parameters": [
     {
      "deprecated": false,
      "description": "일자",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "날짜 객체",
      "isFinal": false,
      "name": "currentDate",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Date"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Cell이 render되기전에 수행하는 이벤트",
    "name": "cellRendered",
    "parameters": [
     {
      "deprecated": false,
      "description": "일자",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "날짜 객체",
      "isFinal": false,
      "name": "currentDate",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Date"
     },
     {
      "deprecated": false,
      "description": "css객체",
      "isFinal": false,
      "name": "css",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Cell이 선택취소후에 수행하는 이벤트",
    "name": "deselect",
    "parameters": [
     {
      "deprecated": false,
      "description": "일자",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "날짜 객체",
      "isFinal": false,
      "name": "currentDate",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Date"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Cell이 선택되기후에 수행하는 이벤트",
    "name": "select",
    "parameters": [
     {
      "deprecated": false,
      "description": "일자",
      "isFinal": false,
      "name": "date",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "날짜 객체",
      "isFinal": false,
      "name": "currentDate",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Date"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "선택된 날짜를 초기화 한다.",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 발생하는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "appendToNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "달력 객체를 focus 시킨다.",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "footer html을 생성하여 리턴하는 메소드",
    "name": "getRenderFooter",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "객체의 아이디나 객체",
      "isFinal": false,
      "name": "el",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String|Object"
     },
     {
      "deprecated": false,
      "description": "환경정보 객체",
      "isFinal": false,
      "name": "oConfig",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "월을 변경한다.",
    "name": "setMonth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "월, 0(January)부터 11(December)까지",
     "isFinal": false,
     "name": "month",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "년도를 변경한다.",
    "name": "setYear",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "년도",
     "isFinal": false,
     "name": "year",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.calendar.LSimpleCalendar",
  "visibility": "private"
 },
 {
  "configs": [{
   "defaultValue": "false",
   "deprecated": false,
   "description": "선택 필수 여부",
   "isFinal": false,
   "name": "forceSelection",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "boolean",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "SELECT Markup을 사용하는 Combo",
   "name": "Rui.ui.form.LBasicCombo",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LBasicCombo.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "SELECT Markup을 사용하는 Combo",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render 후 호출하는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "option div 객체 생성",
    "name": "createOptionDiv",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록중에 h와 같은 html을 찾아 객체의 index를 리턴",
    "name": "getDataIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "비교할 html 내용",
     "isFinal": false,
     "name": "h",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "getDisplayValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "option div에 해당되는 객체를 리턴한다.",
    "name": "getOptionDiv",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "container안의 content의 focus/blur 연결 설정",
    "name": "initFocus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "목록의 모든 item을 삭제한다.",
    "name": "removeAllItem",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.form.LCombo",
  "type": "Rui.ui.form.LBasicCombo",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "null",
   "deprecated": false,
   "description": "생성된 LCombo 정보를 가지는 배열",
   "isFinal": false,
   "name": "comboList",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "Array",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "여러 개의 LCombo를 동시에 생성하면서 서버측 로딩까지 한번에 적용하는 클래스",
   "name": "Rui.ui.form.LComboLoader",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LComboLoader.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "여러 개의 LCombo를 동시에 생성하면서 서버측 로딩까지 한번에 적용하는 클래스",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "LCombo list에 id에 대한하는 LCombo를 리턴한다.",
    "name": "getCombo",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "얻고자 하는 LCombo객체의 아이디",
     "isFinal": false,
     "name": "id",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Rui.ui.form.LCombo",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "생성된 LCombo 객체들을 배열로 리턴한다.",
    "name": "getComboList",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "LCombo 배열",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "comboInfo에 등록된 LCombo 혹은 정보를 이용해 콤보를 생성하고, 콤보 데이터셋을 로딩한다.",
    "name": "load",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체\n &amp;lt;div class='param-options'&amp;gt;\n url {String} 서버 호출 url&amp;lt;br&amp;gt;\n comboInfo {Object} LCombo 객체 혹은 LCombo 생성자 파라미터&amp;lt;br&amp;gt;\n method {String} get or post&amp;lt;br&amp;gt;",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_form",
  "plugin": "plugin",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.form.LComboLoader",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "100",
    "deprecated": false,
    "description": "DateTimeBox에서 DateBox의 width를 지정한다.",
    "isFinal": false,
    "name": "dateBoxWidth",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "html5에 있는 placeholder 기능과 같은 역할이며, DateBox에 지정할 placeholder값",
    "isFinal": false,
    "name": "datePlaceholder",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'date'",
    "deprecated": false,
    "description": "입출력 값을 Date형으로 할것인지 String형으로 할 것인지 결정한다.\n 기본 값은 Date형 이며, String형으로 사용 할 경우 입출력 값의 포맷은 valueFormat 속성값에 따른다.",
    "isFinal": false,
    "name": "dateType",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "60",
    "deprecated": false,
    "description": "DateTimeBox에서 TimeBox의 width를 지정한다.",
    "isFinal": false,
    "name": "timeBoxWidth",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "html5에 있는 placeholder 기능과 같은 역할이며, TimeBox에 지정할 placeholder값",
    "isFinal": false,
    "name": "timePlaceholder",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'%Y-%m-%d",
    "deprecated": false,
    "description": "mask를 제외한 실제 값의 format을 지정하는 속성, form submit시 적용되는 format",
    "isFinal": false,
    "name": "valueFormat",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "날짜를 입력하는 LDateTimeBox (Beta)",
   "name": "Rui.ui.form.LDateTimeBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LDateTimeBox.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "날짜를 입력하는 LDateTimeBox (Beta)",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 속성에 따른 실제 적용 메소드",
    "name": "_setEditable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 속성에 따른 실제 적용 메소드",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render후 호출되는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tries to blur the element. Any exceptions are caught and ignored.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tries to focus the element. Any exceptions are caught and ignored.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 날짜 및 시간 가져오기",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "datebox의 changed 이벤트 발생시 호출되는 메소드",
    "name": "onDateBoxChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "timebox의 changed 이벤트 발생시 호출되는 메소드",
    "name": "onDateBoxChanged",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "datebox나 timebox의 invalid 이벤트 발생시 호출되는 메소드",
    "name": "onInvalid",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "날짜 및 시간값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LDateTimeBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "0",
    "deprecated": false,
    "description": "iconMarginLeft, input과 달력 icon간의 간격",
    "isFinal": false,
    "name": "buttonMarginLeft",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "80",
    "deprecated": false,
    "description": "Picker Icon의 width\n 기본값은 20이며 CSS에서 icon width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "iconWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "Browse...",
    "deprecated": false,
    "description": "버튼의 글자",
    "isFinal": false,
    "name": "title",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "200",
    "deprecated": false,
    "description": "가로 길이\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "파일 첨부용 input box\n LFileBox",
   "name": "Rui.ui.form.LFileBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LFileBox.",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "파일 첨부용 input box\n LFileBox",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render 후 호출하는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 발생하는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "appendToNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "화면 출력되는 객체 리턴",
    "name": "getDisplayEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "Element 객체",
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "선택된 값을 반환",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dom value change handler",
    "name": "onChange",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "handler 이벤트",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Event"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LFileBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "100",
    "deprecated": false,
    "description": "DateTimeBox에서 DateBox의 width를 지정한다.",
    "isFinal": false,
    "name": "dateBoxWidth",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "input박스에 키 입력이 가능한지 여부, 변경이 불가능한 읽기 전용 속성은 LUIComponent에 있는 disabled로 처리",
    "isFinal": false,
    "name": "editable",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "html5에 있는 placeholder 기능과 같은 역할이며, From DateBox에 지정할 placeholder값",
    "isFinal": false,
    "name": "fromPlaceholder",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "input과 Picker Icon간의 간격",
    "isFinal": false,
    "name": "iconMarginLeft",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "20",
    "deprecated": false,
    "description": "Picker Icon의 width\n 기본값은 20이며 CSS에서 icon width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "iconWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "달력아이콘 표시 여부",
    "isFinal": false,
    "name": "picker",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "'~'",
    "deprecated": false,
    "description": "시작일과 종료일을 구분하는 구분자",
    "isFinal": false,
    "name": "separator",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "15",
    "deprecated": false,
    "description": "시작일 달력과 종료일 달력 사이의 구분자 DOM의 간격",
    "isFinal": false,
    "name": "separatorWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "html5에 있는 placeholder 기능과 같은 역할이며, To DateBox에 지정할 placeholder값",
    "isFinal": false,
    "name": "toPlaceholder",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "'%Y-%m-%d'",
    "deprecated": false,
    "description": "mask를 제외한 실제 값의 format을 지정하는 속성, form submit시 적용되는 format",
    "isFinal": false,
    "name": "valueFormat",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "기간을 입력하는 LFromToDateBox",
   "name": "Rui.ui.form.LFromToDateBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial Field.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "기간을 입력하는 LFromToDateBox",
  "events": [{
   "deprecated": false,
   "description": "시작 및 종료일 폼의 값이 변경되면 발생되는 이벤트",
   "name": "changed",
   "parameters": [
    {
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "시작일자 폼의 값으로 dateType에 맞는 유형의 값",
     "isFinal": false,
     "name": "startValue",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Date|String"
    },
    {
     "deprecated": false,
     "description": "종료일자 폼의 값으로 dateType에 맞는 유형의 값",
     "isFinal": false,
     "name": "endValue",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Date|String"
    },
    {
     "deprecated": false,
     "description": "시작 및 종료일자 폼의 값 문자열",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String"
    }
   ],
   "sample": "default",
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 속성에 따른 실제 적용 메소드",
    "name": "_setEditable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "height 속성에 따른 실제 적용 메소드",
    "name": "_setHeight",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tries to blur the element. Any exceptions are caught and ignored.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "blur",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "DOM에서 패널 엘리먼트를 제거하고 모든 자식 엘리먼트들을 null로 설정한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "changed 이벤트를 발생한다.",
    "name": "doChanged",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.data.DataSet",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모객체 정보",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Tries to focus the element. Any exceptions are caught and ignored.\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "name": "focus",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "종료일자 폼의 값을 dateType에 맞는 유형으로 반환",
    "name": "getEndValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date|String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시작일자 폼의 값을 dateType에 맞는 유형으로 반환",
    "name": "getStartValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date|String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 날짜 및 시간 가져오기",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체를 Config정보를 초기화하는 메소드",
    "name": "initDefaultConfig",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 값을 셋팅하는 메소드",
    "name": "setEditable",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "editable 셋팅 값",
     "isFinal": false,
     "name": "isEditable",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "종료일자 폼의 값을 dateType에 맞는 유형으로 지정",
    "name": "setEndValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력할 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date|String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "시작일자 폼의 값을 dateType에 맞는 유형으로 지정",
    "name": "setStartValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "입력할 값",
     "isFinal": false,
     "name": "value",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Date|String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "날짜 및 시간값을 변경한다.\n 값의 format은 valueFormat에 따른다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 값의 유효성 검사",
    "name": "validateValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.form.LField",
  "type": "Rui.ui.form.LFromToDateBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "'%Y-%m'",
    "deprecated": false,
    "description": "mask를 제외한 실제 값의 format을 지정하는 속성, form submit시 적용되는 format",
    "isFinal": false,
    "name": "valueFormat",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "80",
    "deprecated": false,
    "description": "width",
    "isFinal": false,
    "name": "width",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "연월을 입력받는 월력 입력 INPUT 박스\n LMonthBox",
   "name": "Rui.ui.form.LMonthBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LMonthBox.",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "연월을 입력받는 월력 입력 INPUT 박스\n LMonthBox",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "blur 이벤트 발생시 defer를 연결하는 메소드",
    "name": "deferOnBlur",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 설정되어 있는 localeMask의 format을 리턴한다.",
    "name": "getLocaleFormat",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "입력된 날짜 가져오기",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Date",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Dom객체 생성 및 초기화하는 메소드",
    "name": "initComponent",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "환경정보 객체",
     "isFinal": false,
     "name": "config",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "localeMask 초기화 메소드",
    "name": "initLocaleMask",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "날짜값을 반영한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LDateBox",
  "type": "Rui.ui.form.LMonthBox",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "데이터를 반드시 선택해야 하는 필수 여부",
    "isFinal": false,
    "name": "forceSelection",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "','",
    "deprecated": false,
    "description": "getValue나 getValue시 멀티 선택값의 구분자 문자열",
    "isFinal": false,
    "name": "separator",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "'선택하세요.' 항목 추가 여부\n &amp;lt;p&amp;gt;Sample: &amp;lt;a href=\"./../sample/general/ui/form/textboxSample.html\" target=\"_sample\"&amp;gt;보기&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;",
    "isFinal": false,
    "name": "useEmptyText",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "Combo의 값을 여러개 선택할 수 있는 콤보",
   "name": "Rui.ui.form.LMultiCombo",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LMultiCombo.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Combo의 값을 여러개 선택할 수 있는 콤보",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "render 후 호출하는 메소드",
    "name": "afterRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모 객체",
     "isFinal": false,
     "name": "container",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HttpElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "renderer를 수행하는 메소드",
    "name": "comboRenderer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "option div 객체 생성",
    "name": "createOptionDiv",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dislayField에 해당되는 값으로 row를 찾는다.",
    "name": "findRowByDisplayValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "찾고자하는 display값",
     "isFinal": false,
     "name": "displayValue",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Sring"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "sVal에 해당되는 값을 찾아서 리턴한다.",
    "name": "getDisplayValueByValue",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "찾고자 하는 컬렉션 객체",
      "isFinal": false,
      "name": "items",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Rui.util.LCollection"
     },
     {
      "deprecated": false,
      "description": "찾고자하는 display값",
      "isFinal": false,
      "name": "displayValue",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Sring"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "allMarked 이벤트가가 발생하면 호출되는 메소드",
    "name": "onAllMarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "marked 이벤트가가 발생하면 호출되는 메소드",
    "name": "onMarked",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "options div를 mousedown할 경우 호출되는 메소드",
    "name": "onOptionMouseDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "데이터셋이 RowPosChanged 메소드가 호출되면 수행하는 메소드",
    "name": "onRowPosChangedDataSet",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "이 메소드는 LMultiCombo에서 지원 안한다.",
    "name": "setSelectedIndex",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "위치를 변경할 값",
     "isFinal": false,
     "name": "idx",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다. 멀티로 선택할 경우에는 구분자 값(생성자 속성:separator)으로 처리해야 한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값 문자",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.form.LCombo",
  "type": "Rui.ui.form.LMultiCombo",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "input박스에 키 입력이 가능한지 여부, 변경이 불가능한 읽기 전용 속성은 LUIComponent에 있는 disabled로 처리",
    "isFinal": false,
    "name": "editable",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "엔터를 치면 popup 이벤트가 발생한다.",
    "isFinal": false,
    "name": "enterToPopup",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "1",
    "deprecated": false,
    "description": "input과 Picker Icon간의 간격",
    "isFinal": false,
    "name": "iconMarginLeft",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "20",
    "deprecated": false,
    "description": "Picker Icon의 width\n 기본값은 20이며 CSS에서 icon width를 변경할 경우 이 값도 동일하게 변경하여야 합니다.",
    "isFinal": false,
    "name": "iconWidth",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "true",
    "deprecated": false,
    "description": "팝업 아이콘 표시 여부",
    "isFinal": false,
    "name": "picker",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   },
   {
    "defaultValue": "false",
    "deprecated": false,
    "description": "내부에 hidden input 태그를 생성하여 출력용 필드와 구분하여 처리할지 여부를 결정한다.",
    "isFinal": false,
    "name": "useHiddenValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "boolean",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "TextBox에 팝업아이콘을 생성하는 PopupTextBox (beta)\n LTextBox의 모든 속성이 적용되지 않는다. (mask)\n LMonthBox",
   "name": "Rui.ui.form.LPopupTextBox",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "intial LPopupTextBox.",
    "isFinal": false,
    "name": "The",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "TextBox에 팝업아이콘을 생성하는 PopupTextBox (beta)\n LTextBox의 모든 속성이 적용되지 않는다. (mask)\n LMonthBox",
  "events": [{
   "deprecated": false,
   "description": "popup 메소드가 호출되면 수행하는 이벤트",
   "name": "popup",
   "parameters": [],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "disabled 속성에 따른 실제 적용 메소드",
    "name": "_setDisabled",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "editable 속성에 따른 실제 적용 메소드",
    "name": "_setEditable",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "width 속성에 따른 실제 적용 메소드",
    "name": "_setWidth",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "render시 호출되는 메소드",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "부모노드",
     "isFinal": false,
     "name": "parentNode",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String|Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 값을 리턴",
    "name": "getValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "결과값",
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "enter keydown이 발생하면 수행하는 메소드",
    "name": "onEnterKeyDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "이벤트 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Popup 기능을 동작하지 않도록 한다.",
    "name": "popupOff",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Popup 기능을 동작하도록 한다.",
    "name": "popupOn",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "출력객체에 내용을 변경한다.",
    "name": "setDisplayValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력객체에 내용을 변경할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "값을 변경한다.",
    "name": "setValue",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "반영할 값",
     "isFinal": false,
     "name": "o",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "js,css",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.form.LTextBox",
  "type": "Rui.ui.form.LPopupTextBox",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "button의 code값과 display값을 분리하여 처리하는 객체",
   "name": "Rui.ui.grid.LEditButtonColumn",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": true,
  "description": "button의 code값과 display값을 분리하여 처리하는 객체",
  "events": [],
  "methods": [{
   "deprecated": false,
   "description": "ButtonColumn을 renderer하는 메소드",
   "name": "buttonRenderer",
   "parameterType": "METHOD",
   "parameters": [{
    "deprecated": false,
    "description": "button 객체",
    "isFinal": false,
    "name": "button",
    "parameterType": "PARAMETER",
    "scope": "required",
    "type": "Rui.ui.LButton"
   }],
   "returnType": "String",
   "scope": "instance",
   "visibility": "protected"
  }],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.grid.LTriggerColumn",
  "type": "Rui.ui.grid.LEditButtonColumn",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "Rui.emptyFn",
   "deprecated": false,
   "description": "expandable에 단순히 내용만 출력하는 function. 리턴값을 바로 하단에 출력한다.\n function의 파라미터 : row, record, 리턴형은 문자",
   "isFinal": false,
   "name": "rowRenderer",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "Function",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "Table태그를 사용한 rendering하는 grid",
   "name": "Rui.ui.grid.LExpandableView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LExpandableView.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "Table태그를 사용한 rendering하는 grid",
  "events": [
   {
    "deprecated": false,
    "description": "collapse 메소드가 호출되면 수행하는 이벤트",
    "name": "collapse",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "그리드안에 target되는 dom객체",
      "isFinal": false,
      "name": "expandableTarget",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "HtmlElement"
     },
     {
      "deprecated": false,
      "description": "row 아이디",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     }
    ],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "expand 메소드가 호출되면 수행하는 이벤트",
    "name": "expand",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "그리드안에 target되는 dom객체",
      "isFinal": false,
      "name": "expandableTarget",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "HtmlElement"
     },
     {
      "deprecated": false,
      "description": "row 아이디",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "처음 펼쳐졌는지 여부",
      "isFinal": false,
      "name": "isFirst",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "boolean"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "dataSet의 add 이벤트 발생시 호출되는 메소드",
    "name": "doAddData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 remove 이벤트 발생시 호출되는 메소드",
    "name": "doRemoveData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "삭제여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 undo 이벤트 발생시 호출되는 메소드",
    "name": "doUndoData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row를 생성한 후 추가할 row 정보를 계산한다.",
    "name": "getAfterRenderRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재행 번호",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "row 출력 총 카운트",
      "isFinal": false,
      "name": "rowCount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "틀고정 전/후 여부",
      "isFinal": false,
      "name": "firstColumns",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "셀 머지 여부",
      "isFinal": false,
      "name": "spansm",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     },
     {
      "deprecated": false,
      "description": "소계 정보",
      "isFinal": false,
      "name": "sumRowsInfo",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "현재 선택된 행 return",
    "name": "getRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "규칙적인 행의 높이 반환 (보통 행 랜더링시 사용함)",
    "name": "getRowHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row의 expand 속성 여부",
    "name": "hasExpand",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "현재행 번호",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row의 expand 속성 설정",
    "name": "setExpand",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "현재행 번호",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "expand 여부",
      "isFinal": false,
      "name": "isExpand",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "boolean"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_grid",
  "plugin": "plugin",
  "propertys": [{
   "deprecated": false,
   "description": "expandable에 단순히 내용만 출력하는 function. 리턴값을 바로 하단에 출력한다.\n function의 파라미터 : row, record, 리턴형은 문자",
   "isFinal": false,
   "name": "rowRenderer",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "Function",
   "visibility": "protected"
  }],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.grid.LGridView",
  "type": "Rui.ui.grid.LExpandableView",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "그리드에서 컬럼에 대한 데이터 검색 기능",
   "name": "Rui.uigrid..LGridSearchDialog",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드에서 컬럼에 대한 데이터 검색 기능",
  "events": [],
  "methods": [],
  "propertys": [],
  "scope": "instance",
  "type": "Rui.uigrid..LGridSearchDialog",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "그리드의 데이터 처리 성능을 출력하는 bar로 샘플에서만 사용한다.",
   "name": "Rui.uigrid..LGridStatusBar",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드의 데이터 처리 성능을 출력하는 bar로 샘플에서만 사용한다.",
  "events": [],
  "methods": [],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.uigrid..LGridStatusBar",
  "visibility": "public"
 },
 {
  "configs": [{
   "defaultValue": "false",
   "deprecated": false,
   "description": "그리드의 row가 출력되는 만큼 자동으로 height가 넓어지는 기능",
   "isFinal": false,
   "name": "fitContentHeight",
   "parameterType": "CONFIG",
   "scope": "instance",
   "type": "boolean",
   "visibility": "public"
  }],
  "constructors": [{
   "deprecated": false,
   "description": "그리드의 데이터를 출력하는 LGridView (트리그리드, 소계, 합계 지원, 셀병합시 변경 처리 안함.)",
   "name": "Rui.ui.grid.LGridView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LGridView.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드의 데이터를 출력하는 LGridView (트리그리드, 소계, 합계 지원, 셀병합시 변경 처리 안함.)",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "그리드 내부에 생성한 form hidden input 태그를 삭제한다.",
    "name": "clearFormValues",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드 내부에 form submit을 위한 hidden input 태그를 생성한다.",
    "name": "createFormValues",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "dataSet의 add 이벤트 발생시 호출되는 메소드",
    "name": "doAddData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 update 이벤트 발생시 호출되는 메소드",
    "name": "doCellUpdateData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 remove 이벤트 발생시 호출되는 메소드",
    "name": "doRemoveData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnDescription": "삭제여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body content rendering",
    "name": "doRenderData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event Object",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "dataSet의 undo 이벤트 발생시 호출되는 메소드",
    "name": "doUndoData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering해야할 행 시작 index, 종료 index 계산후 return",
    "name": "getRenderRange",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "start, end",
    "returnType": "object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "실제 dom으로 출력된 행인지 점검하고 출력된 행이면 실제 dom상의 index return",
    "name": "getRenderedRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "grid body scroller LElement return",
    "name": "getScrollerEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.LElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "multiheader의 columnModel multiheaderHtml정보를 2차원 배열로 분석한것",
    "name": "getTableSpanInfo",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "columnModel multiheaderHtml 정보를 dom으로 만든것",
      "isFinal": false,
      "name": "domTable",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "column 전체 갯수",
      "isFinal": false,
      "name": "colCount",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "2차원 array",
    "returnType": "Array",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 row행을 숨긴다.",
    "name": "hideRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 row행 index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "그리드의 row행을 출력여부를 리턴한다.",
    "name": "isShowRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 row행 index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": "출력 여부",
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Scroller를 생성한다.  스크롤은 행수에 따른 고정 넓이를 할당하고 한화면에 보여줄 수 있는 행수를 계산하여 처리",
    "name": "makeScroll",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "가로 스크롤을 제공된 cell 기준으로 이동한다.",
    "name": "moveXScroll",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이동될 셀의 DOM",
      "isFinal": false,
      "name": "cellDom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "세로 스크롤을 제공된 row 기준으로 이동한다.",
    "name": "moveYScroll",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnDescription": ".x .y",
    "returnType": "object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "auto width의 경우 panel width가 조정될 경우 재계산",
    "name": "onWidthResize",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "상태를 유지한체 전체를 새롭게 그리기",
    "name": "redoRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "create,delete에 따라서 전체행 다시 그리기.",
    "name": "redoRenderData",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "options 정보",
     "isFinal": false,
     "name": "options",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "행이 없을 경우 메시지 출력",
    "name": "showEmptyDataMessage",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 row행을 출력한다.",
    "name": "showRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 row행 index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "focus된 row에 focusEl 이동하기",
    "name": "syncFocusRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "그리드의 row행을 출력되어 있으면 숨기고 숨긴상태면 출력한다.",
    "name": "toggleShowRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "출력할 row행 index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "column resize에 따른 column 넓이 설정",
    "name": "updateColumnWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "column resize에 따른 header column 넓이 설정",
    "name": "updateHeaderWidth",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "틀고정일 경우 각 row의 height를 비교해서 height를 적용한다.",
    "name": "updateRowHeight",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "plugin",
  "propertys": [{
   "deprecated": false,
   "description": "그리드의 row가 출력되는 만큼 자동으로 height가 넓어지는 기능",
   "isFinal": false,
   "name": "fitContentHeight",
   "parameterType": "PROPERTIES",
   "scope": "instance",
   "type": "boolean",
   "visibility": "protected"
  }],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.grid.LBufferGridView",
  "type": "Rui.ui.grid.LGridView",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "그리드의 기본 Context menu를 생성하는 객체",
   "name": "Rui.ui.grid.LHeaderContextMenu",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LBufferGridView.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드의 기본 Context menu를 생성하는 객체",
  "events": [{
   "deprecated": false,
   "description": "renderMenuRow 메소드가 호출되면 수행하는 이벤트",
   "name": "renderMenuRowEvent",
   "parameters": [
    {
     "deprecated": false,
     "description": "this 객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    },
    {
     "deprecated": false,
     "description": "column 객체",
     "isFinal": false,
     "name": "column",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Rui.util.LColumn"
    }
   ],
   "visibility": "public"
  }],
  "methods": [
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy하는 메소드",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "group id에 대한 정보를 리턴한다.",
    "name": "getGroupItem",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "group id",
     "isFinal": false,
     "name": "groupId",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "submenu중 columns 정보의 html을 생성하여 리턴하는 메소드",
    "name": "getRenderFilterColumns",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header html을 생성하여 리턴하는 메소드",
    "name": "getRenderMenuBody",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header html을 생성하여 리턴하는 메소드",
    "name": "getRenderMenuBodyRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "header html을 생성하여 리턴하는 메소드",
    "name": "getRenderMenuBodyRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "submenu중 columns 정보의 html을 생성하여 리턴하는 메소드",
    "name": "getRenderSortColumns",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "headerToolEl을 click했을때 호출되는 메소드",
    "name": "onClickHeaderTool",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "구조 rendering",
    "name": "renderMaster",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "header rendering한 html",
     "isFinal": false,
     "name": "headerHtml",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "plugin": "plugin",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "type": "Rui.ui.grid.LHeaderContextMenu",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "LSummary",
   "name": "Rui.ui.grid.LSummary",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LSummary",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "body html을 생성하여 리턴하는 메소드",
    "name": "getRenderBody",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body의 cell의 value를 생성하여 리턴하는 메소드",
    "name": "getSummaryCalculatorCellValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body의 cell의 value를 생성하여 리턴하는 메소드",
    "name": "getSummaryRenderCellValue",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.ui.grid.LSummary",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "Table태그를 사용한 rendering하는 grid",
   "name": "Rui.ui.grid.LTableView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTableView.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "Table태그를 사용한 rendering하는 grid",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "template 생성",
    "name": "createTemplate",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "Row의 Dom Array return",
    "name": "getRows",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Array",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Row가 존재하는지 여부 리턴",
    "name": "hasRows",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body content rendering",
    "name": "renderBody",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "body rendering한 html",
     "isFinal": false,
     "name": "bodyHtml",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "focus된 row에 focusEl 이동하기",
    "name": "syncFocusRow",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "row index",
      "isFinal": false,
      "name": "row",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "column index",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "grid의 scroll영역의 height 설정하기",
    "name": "updateSizes",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.grid.LGridView",
  "type": "Rui.ui.grid.LTableView",
  "visibility": "private"
 },
 {
  "configs": [
   {
    "defaultValue": "[]",
    "deprecated": false,
    "description": "LGridView 객체",
    "isFinal": false,
    "name": "gridView",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Rui.ui.grid.LGridView",
    "visibility": "public"
   },
   {
    "defaultValue": "50",
    "deprecated": false,
    "description": "토탈 서머리를 몇초간격으로 랜더링할지 시간(밀리세컨드)",
    "isFinal": false,
    "name": "renderSummaryTime",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LTotalSummary 그리드의 합계를 출력하는 객체",
   "name": "Rui.ui.grid.LTotalSummary",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "Object literal of definitions.",
    "isFinal": false,
    "name": "oConfigs",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "LTotalSummary 그리드의 합계를 출력하는 객체",
  "events": [
   {
    "deprecated": false,
    "description": "renderTotal 기능이 호출되면 수행하는 이벤트",
    "name": "renderTotal",
    "parameters": [{
     "deprecated": false,
     "description": "this객체",
     "isFinal": false,
     "name": "target",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "renderTotalCell 기능이 호출되면 수행하는 이벤트",
    "name": "renderTotalCell",
    "parameters": [
     {
      "deprecated": false,
      "description": "this객체",
      "isFinal": false,
      "name": "target",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "Object"
     },
     {
      "deprecated": false,
      "description": "col 값",
      "isFinal": false,
      "name": "col",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "생성할 결과 html 문자",
      "isFinal": false,
      "name": "value",
      "parameterType": "PARAMETER",
      "scope": "instance",
      "type": "String"
     }
    ],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "syncDataSet 속성에 따른 실제 적용 메소드",
    "name": "_setSyncDataSet",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "속성의 이름",
      "isFinal": false,
      "name": "type",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "속성의 값 배열",
      "isFinal": false,
      "name": "args",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Array"
     },
     {
      "deprecated": false,
      "description": "적용된 객체",
      "isFinal": false,
      "name": "obj",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 destroy한다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "body의 total summary row html을 생성하여 리턴하는 메소드",
    "name": "getRenderTotal",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 total summary cell html을 생성하여 리턴하는 메소드",
    "name": "getRenderTotalCell",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "summary container를 생성하는 메소드",
    "name": "initPluginContainer",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "body의 scroll과 summary의 scroll 위치를 맞춤.",
    "name": "onSyncSummaryScrollLeft",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "bodyScroll 이벤트가 호출되면 수행하는 메소드",
    "name": "updatePlugin",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet load, dataChanged 이벤트에 따라 summary를 갱신하는 메소드",
    "name": "updateRenderDataTotal",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "DataSet 변경에 따른 summary를 갱신하는 메소드",
    "name": "updateRenderTotal",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "scrollbar의 width를 계산하여 갱신하는 메소드",
    "name": "updateWidthSummaryBar",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "module": "ui_grid",
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.util.LPlugin",
  "type": "Rui.ui.grid.LTotalSummary",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "그리드에서 cell를 선택시 cell의 흐름 제어를 하는 객체",
   "name": "Rui.ui.grid.LTreeGridSelectionModel",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "그리드에서 cell를 선택시 cell의 흐름 제어를 하는 객체",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "데이터의 총건수를 리턴한다.",
    "name": "getDataCount",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에서 moveIdx만큼 이동할 row를 계산하여 리턴한다.",
    "name": "getMoveRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "keydown 이벤트 발생시 호출되는 메소드",
    "name": "onKeydown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "page down 이벤트 발생시 호출되는 메소드",
    "name": "onPageDown",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   }
  ],
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.ui.grid.LSelectionModel",
  "type": "Rui.ui.grid.LTreeGridSelectionModel",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "-1",
    "deprecated": false,
    "description": "최초에 펼처질 depth를 결정한다.",
    "isFinal": false,
    "name": "defaultOpenDepth",
    "parameterType": "CONFIG",
    "sample": "default",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "트리에서 사용하는 필드 정보를 정의한다.",
    "isFinal": false,
    "name": "fields",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "Object",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "트리그리드의 펼침과 닫힘 이미지를 출력할 컬럼명",
    "isFinal": false,
    "name": "treeColumnId",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "트리 기능을 지원하는 그리드",
   "name": "Rui.ui.grid.LTreeGridView",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LTreeGridView.",
    "isFinal": false,
    "name": "config",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "트리 기능을 지원하는 그리드",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "dom에서 row index return\n//         *",
    "name": "",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "dom",
      "isFinal": false,
      "name": "dom",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "HTMLElement"
     },
     {
      "deprecated": false,
      "description": "pageY",
      "isFinal": false,
      "name": "y",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     }
    ],
    "returnDescription": "* @return {int}",
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "트리 그리드에서 row 위치를 닫는다.",
    "name": "collapse",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "rendering",
    "name": "doRender",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "트리 그리드에서 row 위치를 펼친다.",
    "name": "expand",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "depth값까지 모든 트리정보를 펼친다.",
    "name": "expandDepth",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "depth 펼치고자 하는 depth값",
     "isFinal": false,
     "name": "depth",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row에 해당되는 자식 레벨의 모든 row 위치들을 리턴한다.",
    "name": "getAllChildRows",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "Array",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row Dom에 추가할 aria 속성을 리턴한다.",
    "name": "getAriaAttr",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 보이는 기준에서 moveRow값의 실제 row값을 리턴한다.",
    "name": "getBeforeVisibleRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 해당되는 자식 레벨의 1 depth 아래의 row 위치들을 리턴한다.",
    "name": "getChildRows",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "Array",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "보이는 row에 대한 데이터셋의 실제 row값을 리턴한다.",
    "name": "getDataSetRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 해당되는 같은 레벨의 다음 row 위치를 리턴한다.",
    "name": "getNextSiblingRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row에 부모의 row를 리턴한다. 부모가 없으면 -1을 리턴한다.",
    "name": "getParentRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "row에 해당되는 같은 레벨의 이전 row 위치를 리턴한다.",
    "name": "getPrevSiblingRow",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치값",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "int",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell dom에 전에 탑재할 디자인용 html을 포함한다.",
    "name": "getRenderBeforeCell",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 대한 class name 만들기",
    "name": "getRenderRowClassName",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "현재행 번호",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "String",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "override getRow",
    "name": "getRowDom",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "dataSet 기준 실제 row index",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "row에 대한 현재 보이는 실제 row값을 리턴한다.",
    "name": "getVisibleRow",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "int",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "트리 그리드에서 row 위치가 펼쳐 있으면 true를 그렇지 않으면 false 리턴한다.",
    "name": "isExpand",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "boolean",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "cell click 이벤트가 발생하면 호출되는 메소드",
    "name": "onCellClick",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "Event 객체",
     "isFinal": false,
     "name": "e",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "Object"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "트리 그리드에서 row 위치가 펼쳐 있으면 닫고 닫쳐 있으면 펼친다.",
    "name": "toggle",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "row 위치",
     "isFinal": false,
     "name": "row",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "int"
    }],
    "returnType": "void",
    "sample": "default",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "ui_grid",
  "plugin": "js,css",
  "propertys": [],
  "sample": "default",
  "scope": "instance",
  "superclass": "Rui.ui.grid.LBufferGridView",
  "type": "Rui.ui.grid.LTreeGridView",
  "visibility": "public"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "특정 브라우져에서만 작동하는 onmove 이벤트를 타이머로 구현한 클래스",
   "name": "Rui.util.LMoveMonitor",
   "parameterType": "CONSTRUCTOR",
   "parameters": [{
    "deprecated": false,
    "description": "The intial LMoveMonitor.",
    "isFinal": false,
    "name": "oConfig",
    "parameterType": "PARAMETER",
    "scope": "instance",
    "type": "Object"
   }],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "특정 브라우져에서만 작동하는 onmove 이벤트를 타이머로 구현한 클래스",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "모니터할 dom 객체를 추가하는 메소드",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "모니터할 dom 객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "이동여부를 체크하는 메소드",
    "name": "checkMove",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "객체를 초기화하는 메소드",
    "name": "init",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "protected"
   },
   {
    "deprecated": false,
    "description": "등록된 dom 객체를 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "삭제할 dom 객체",
     "isFinal": false,
     "name": "dom",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "HTMLElement"
    }],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "type": "Rui.util.LMoveMonitor",
  "visibility": "public"
 },
 {
  "configs": [
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "id 아이디",
    "isFinal": false,
    "name": "id",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "parentId 아이디",
    "isFinal": false,
    "name": "parentId",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "String",
    "visibility": "public"
   },
   {
    "defaultValue": "null",
    "deprecated": false,
    "description": "root의 값의 비교 기준값(null인지? 0인지? undefined인지?)",
    "isFinal": false,
    "name": "rootValue",
    "parameterType": "CONFIG",
    "scope": "instance",
    "type": "int",
    "visibility": "public"
   }
  ],
  "constructors": [{
   "deprecated": false,
   "description": "LNodeCollection utility.",
   "name": "Rui.util.LNodeCollection",
   "parameterType": "CONSTRUCTOR",
   "parameters": [],
   "scope": "static",
   "visibility": "private"
  }],
  "deprecated": false,
  "description": "LNodeCollection utility.",
  "events": [],
  "methods": [
   {
    "deprecated": false,
    "description": "item을 추가하는 메소드",
    "name": "add",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "입력할 객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모두 초기화 하는 메소드",
    "name": "clear",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "LNodeCollection을 복제하여 리턴하는 메소드",
    "name": "clone",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "Rui.util.LNodeCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item을 idx위치에 삽입하는 메소드",
    "name": "insert",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "삽입할 위치",
      "isFinal": false,
      "name": "idx",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "int"
     },
     {
      "deprecated": false,
      "description": "키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "입력할 객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "func에 해당되는 값을 LNodeCollection으로 리턴하는 메소드",
    "name": "nodeQuery",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "scope",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Rui.util.LCollection",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "func에 해당되는 값으로 같은 자식 레코드끼리 정렬하는 메소드",
    "name": "nodeSort",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "Array 배열",
      "isFinal": false,
      "name": "func",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Function"
     },
     {
      "deprecated": false,
      "description": "정렬 방향",
      "isFinal": false,
      "name": "dir",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item을 삭제하는 메소드",
    "name": "remove",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "키",
     "isFinal": false,
     "name": "key",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "String"
    }],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "key에 해당하는 item을 변경하는 메소드",
    "name": "set",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "키",
      "isFinal": false,
      "name": "key",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "Object",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "객체의 toString",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "item을 node를 수정하는 메소드",
    "name": "updateParentId",
    "parameterType": "METHOD",
    "parameters": [
     {
      "deprecated": false,
      "description": "이전 부모키 값",
      "isFinal": false,
      "name": "oldParentId",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "String"
     },
     {
      "deprecated": false,
      "description": "입력할 객체",
      "isFinal": false,
      "name": "item",
      "parameterType": "PARAMETER",
      "scope": "required",
      "type": "Object"
     }
    ],
    "returnType": "void",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "plugin": "plugin",
  "propertys": [],
  "scope": "static",
  "superclass": "Rui.util.LCollection",
  "type": "Rui.util.LNodeCollection",
  "visibility": "private"
 },
 {
  "configs": [],
  "constructors": [{
   "deprecated": false,
   "description": "&amp;lt;p&amp;gt;사이즈 조절 가능한 element를 만든다.&amp;lt;/p&amp;gt;",
   "name": "Rui.util.LResize",
   "parameterType": "CONSTRUCTOR",
   "parameters": [
    {
     "deprecated": false,
     "description": "리사이즈 가능하게 만들 element",
     "isFinal": false,
     "name": "el",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "String/HTMLElement"
    },
    {
     "deprecated": false,
     "description": "설정 parameter를 포함하는 Object liternal",
     "isFinal": false,
     "name": "attrs",
     "parameterType": "PARAMETER",
     "scope": "instance",
     "type": "Object"
    }
   ],
   "scope": "instance",
   "visibility": "public"
  }],
  "deprecated": false,
  "description": "&amp;lt;p&amp;gt;사이즈 조절 가능한 element를 만든다.&amp;lt;/p&amp;gt;",
  "events": [
   {
    "deprecated": false,
    "description": "모든 element 리사이즈 이전 및 사이즈 계산 후에 발생하며, 리사이즈가 중단될때 false를 반환하는 event",
    "name": "beforeResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "&amp;lt;a href=\"Rui.dd.LDragDrop.html\"&amp;gt;Rui.dd.LDragDrop&amp;lt;/a&amp;gt; dragEvent가 드래그 가능한 설정 옵션에 대해 발생되었을때 발생하는 event",
    "name": "dragEvent",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "드래그 인스턴스로부터의 mouseUp event가 발생했을때 발생하는 event",
    "name": "endResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 proxy 리사이즈에 발생하는 event(proxy 설정 세팅에 사용될때만 발생함)",
    "name": "proxyResize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "모든 element 리사이즈에 발생하는 event(proxy 설정 세팅에 사용될때 오직 한번만 발생함)",
    "name": "resize",
    "parameters": [],
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "resize 액션이 시작되었을때 발생하는 event",
    "name": "startResize",
    "parameters": [],
    "visibility": "public"
   }
  ],
  "methods": [
   {
    "deprecated": false,
    "description": "resize object와 그것의 모든 element와 listner들을 없앤다.",
    "name": "destroy",
    "parameterType": "METHOD",
    "parameters": [],
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "현재 활성화된 resize handle에 대한 HTML 참조를 가져온다.",
    "name": "getActiveHandleEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "활성화된 handle element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "proxy에 대한 HTML 참조를 가져오며, proxy가 아닌 경우 null을 반환한다",
    "name": "getProxyEl.",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The proxy element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "resize object와 연관된 element의 HTML id로 resize object를 가져온다.",
    "name": "getResizeById",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The Resize Object",
    "returnType": "Object",
    "scope": "static",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "status element에 대한 HTML 참조를 가져온다.",
    "name": "getStatusEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The status element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "wrap element에 대한 HTML 참조를 가져오며, warp되어 있지 않다면, 현재 element를 반환한다.",
    "name": "getWrapEl",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "The wrap element",
    "returnType": "HTMLElement",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "리사이즈 작업이 현재 element에 활성화 되어 있는지에 따라 true나 false를 반환한다.",
    "name": "isActive",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "리사이즈 인스턴스의 lock 상태를 체크한다.",
    "name": "isLocked",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "boolean",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "리사이즈 될 수 없도록 리사이즈를 locking 한다.",
    "name": "lock",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드래그 가능하도록 설정되어 있는 경우에도 역시 lock 됨",
     "isFinal": false,
     "name": "dd",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "href=\"Rui.util.LResize.html\">Rui.util.LResize<\/a>} 리사이즈 인스턴스",
    "returnType": "Rui.util.LResize",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "start 상태가 되도록 element를 리셋한다.",
    "name": "reset",
    "parameterType": "METHOD",
    "parameters": [],
    "returnDescription": "href=\"Rui.util.LResize.html\">Rui.util.LResize<\/a>} 리사이즈 인스턴스",
    "returnType": "Rui.util.LResize",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "Resize object를 표한하는 문자열을 반환한다.",
    "name": "toString",
    "parameterType": "METHOD",
    "parameters": [],
    "returnType": "String",
    "scope": "instance",
    "visibility": "public"
   },
   {
    "deprecated": false,
    "description": "리사이즈 될 수 있도록 unlocking 한다.",
    "name": "unlock",
    "parameterType": "METHOD",
    "parameters": [{
     "deprecated": false,
     "description": "드래그 가능하도록 설정되어 있는 경우에도 역시 unlock 됨",
     "isFinal": false,
     "name": "dd",
     "parameterType": "PARAMETER",
     "scope": "required",
     "type": "boolean"
    }],
    "returnDescription": "href=\"Rui.util.LResize.html\">Rui.util.LResize<\/a>} 리사이즈 인스턴스",
    "returnType": "Rui.util.LResize",
    "scope": "instance",
    "visibility": "public"
   }
  ],
  "module": "util",
  "plugin": "plugin",
  "propertys": [],
  "scope": "instance",
  "superclass": "Rui.LElement",
  "type": "Rui.util.LResize",
  "visibility": "public"
 }
]