<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mgmt.mchnCgds">
	<cache eviction="FIFO" flushInterval="10000" size="512" readOnly="true"/>

	<!-- 기기관리 목록 조회  -->
	<select id="retrieveCdgsList" resultType="hashmap" >
		<![CDATA[
		-- retrieveCdgsList 기기관리 목록 조회
		SELECT    MCM.CGDS_ID       AS "cgdsId"
				 ,MCM.CGDS_NM       AS "cgdsNm"
				 ,MCM.MKR_NM        AS "mkrNm"
				 ,MCM.STK_NO        AS "stkNo"
				 ,SU.SA_NAME        AS  "cgdCrgrNm"
				 ,MCM.CGD_CRGR_ID   AS "cgdCrgrId"
				 ,MCM.PRP_IV_QTY    AS "prpIvQty"
				 ,MCM.UTM_CD        AS "utmCd"
				 ,MCM.CUR_IV_QTY	AS "curIvQty"
				 ,(CASE WHEN MCM.CUR_IV_QTY - MCM.PRP_IV_QTY <=2 THEN'Y'
				        ELSE 'N' END ) AS "ivStCd"
				 ,MCM.USE_USF 		AS "useUsf"
				 ,MCM.ATTC_FIL_ID	AS "attcFilId"
		FROM 	IRIS_MCHN_CGDS_MST MCM
				LEFT OUTER JOIN IRIS_SSO_USER SU
				ON SU.SA_SABUN_NEW = MCM.CGD_CRGR_ID
		WHERE 	MCM.DEL_YN = 'N'
		]]>

		<if test="( cgdsNm != null and cgdsNm != '')">
			AND MCM.CGDS_NM LIKE '%'+#{cgdsNm}+'%'
	    </if>
		<if test="( mkrNm != null and mkrNm != '')">
			AND MCM.MKR_NM LIKE '%'+#{mkrNm}+'%'
	    </if>
		<if test="( stkNo != null and stkNo != '')">
			AND MCM.STK_NO LIKE '%'+#{stkNo}+'%'
	    </if>
	    <if test="( cgdCrgrNm != null and cgdCrgrNm != '' )">
			AND SU.SA_NAME LIKE '%'+#{cgdCrgrNm}+'%'
	    </if>

		<![CDATA[
		ORDER 	BY CGDS_NM
		]]>
	</select>

	<!-- 소모품 상세 조회 -->
	<select id="retrieveCdgsMst" resultType="hashmap" >
		<![CDATA[
		-- retrieveCdgsMst 소모품 상세 조회
		SELECT 	 MCM.CGDS_ID     AS "cgdsId"
			 	,MCM.CGDS_NM     AS "cgdsNm"
			 	,MCM.MKR_NM      AS "mkrNm"
			 	,MCM.STK_NO      AS "stkNo"
			 	,MCM.CGD_CRGR_ID AS "cgdCrgrId"
			 	,dbo.fn_getSabunName(MCM.CGD_CRGR_ID) AS "cgdCrgrNm"
				,MCM.PRP_IV_QTY  AS "prpIvQty"
				,MCM.UTM_CD      AS "utmCd"
			 	,MCM.USE_USF     AS "useUsf"
			 	,MCM.CUR_IV_QTY	 AS "curIvQty"
			 	,MCM.CGDS_LOC    AS "cgdsLoc"
			 	,(CASE WHEN MCM.CUR_IV_QTY - MCM.PRP_IV_QTY <=2 THEN'Y'
				        ELSE 'N' END ) AS "ivStCd"
			 	,F.ATTC_FIL_ID   AS "attcFilId"
				,F.SEQ           AS "seq"
		FROM 	IRIS_MCHN_CGDS_MST MCM
				LEFT OUTER JOIN IRIS_SSO_USER SU
				ON SU.SA_SABUN_NEW = MCM.CGD_CRGR_ID
				LEFT OUTER JOIN IRIS_COM_ATTC_FIL F
				ON F.ATTC_FIL_ID = MCM.ATTC_FIL_ID
				AND F.DEL_YN = 'N'
		WHERE 	MCM.DEL_YN = 'N'
		AND 	MCM.CGDS_ID = #{cgdsId}
		]]>
	</select>

	<!-- 소모품 정보 저장 및 수정 -->
	<update id="saveCgdsMst">
		<![CDATA[
		-- saveCgdsMst 소모품 정보 저장 및 수정
		MERGE IRIS_MCHN_CGDS_MST MCM
		USING ( SELECT #{cgdsId} AS CGDS_ID ) AS Tab1
		ON  (MCM.CGDS_ID = Tab1.CGDS_ID)
		WHEN matched THEN
		UPDATE SET
			   CGDS_NM    	= #{cgdsNm}
		      ,MKR_NM     	= #{mkrNm}
		      ,STK_NO     	= #{stkNo}
		      ,CGD_CRGR_ID  = #{cgdCrgrId}
		      ,PRP_IV_QTY 	= #{prpIvQty}
		      ,UTM_CD     	= #{utmCd}
		      ,CGDS_LOC     = #{cgdsLoc}
		      ,USE_USF      = #{useUsf}
		      ,ATTC_FIL_ID  = #{attcFilId}
		      ,LAST_MDFY_DT = GETDATE()
		      ,LAST_MDFY_ID = #{_userId}
		WHEN not matched THEN
		INSERT
		       (CGDS_NM
		       ,MKR_NM
		       ,STK_NO
		       ,CGD_CRGR_ID
		       ,PRP_IV_QTY
		       ,UTM_CD
		       ,CUR_IV_QTY
		       ,CGDS_LOC
		       ,USE_USF
		       ,ATTC_FIL_ID
		       ,DEL_YN
		       ,FRST_RGST_DT
		       ,FRST_RGST_ID
		       ,LAST_MDFY_DT
		       ,LAST_MDFY_ID)
		    VALUES
		        (#{cgdsNm}
		        ,#{mkrNm}
		        ,#{stkNo}
		        ,#{cgdCrgrId}
		        ,#{prpIvQty}
		        ,#{utmCd}
		        ,0
		        ,#{cgdsLoc}
		        ,#{useUsf}
		        ,#{attcFilId}
		        ,'N'
			    ,GETDATE()
			    ,#{_userId}
			    ,GETDATE()
			    ,#{_userId}
			    );
			]]>
	</update>

	<!-- 소모품 정보 삭제 -->
	<update id="updateCgdsMst">
		<![CDATA[
		-- updateCgdsMst 소모품 정보 삭제
		UPDATE IRIS_MCHN_CGDS_MST
		SET    DEL_YN = 'Y'
		      ,LAST_MDFY_DT = GETDATE()
		      ,LAST_MDFY_ID = #{_userId}
		WHERE  CGDS_ID = #{cgdsId}
		]]>
	</update>

	<!-- 소모품 입출력 조회 -->
	<select id="retrieveCdgsMgmt" resultType="hashmap" >
		<![CDATA[
		-- retrieveCdgsMgmt 소모품 입출력 조회
		SELECT CGDS_MGMT_ID  				AS "cgdsMgmtId"
		      ,CGDS_ID						AS "cgdsId"
		      ,RGST_ID						AS "rgstId"
		      ,dbo.fn_getSabunName(RGST_ID) AS "rgstNm"
		      ,RGST_DT						AS "rgstDt"
		      ,WHIO_CL_CD					AS "whioClCd"
		      ,ACC.COM_DTL_NM 				AS "whioClNm"
		      ,WHSN_QTY						AS "whsnQty"
		      ,WHOT_QTY						AS "whotQty"
		      ,CGDS_REM    					AS "cgdsRem"
		FROM  IRIS_MCHN_CGDS_MGMT MCM
		     ,IRIS_ADM_COM_CD ACC
		WHERE MCM.DEL_YN = 'N'
		AND   ACC.COM_CD_CD = 'CDGS_WHIO_CL_CD'
		AND   MCM.WHIO_CL_CD = ACC.COM_DTL_CD
		AND   MCM.CGDS_ID = #{cgdsId}
		ORDER BY MCM.LAST_MDFY_DT DESC
		]]>
	</select>


	<!-- 소모품 입출력 팝업 정보 조회 -->
	<select id="retrieveCgdsMgmtPopInfo" resultType="hashmap" >
		<![CDATA[
		-- retrieveCgdsMgmtPopInfo 소모품 입출력 팝업 정보 조회
		SELECT A.CGDS_MGMT_ID  AS cgdsMgmtId
		      ,A.CGDS_ID       AS cgdsId
		      ,A.RGST_DT       AS rgstDt
		      ,A.CGDS_ID       AS cgdsId
			  ,A.RGST_ID       AS rgstId
			  ,A.WHIO_CL_CD    AS whioClCd
			  ,A.WHOT_QTY      AS whotQty
			  ,A.WHSN_QTY      AS whsnQty
			  ,A.CGDS_REM      AS cgdsRem
			  ,CASE WHEN WHIO_CL_CD = 'WHSN' THEN WHSN_QTY
			        WHEN WHIO_CL_CD = 'WHOT' THEN WHOT_QTY
					ELSE '0' END AS "qty"
			  ,DBO.FN_GETSABUNNAME(A.RGST_ID)  AS "rgstNm"
		FROM  IRIS_MCHN_CGDS_MGMT A
		WHERE CGDS_MGMT_ID = #{cgdsMgmtId}
		]]>
	</select>

	<!-- 소모품 현재고 조회 -->
	<select id="retrieveTotQty" resultType="int" >
		<![CDATA[
		-- retrieveTotQty 소모품 현재고 조회
		SELECT CUR_IV_QTY  	AS "curIvQty"
		FROM   IRIS_MCHN_CGDS_MST
		WHERE  DEL_YN = 'N'
		AND    CGDS_ID = #{cgdsId}
		]]>
	</select>

	<!-- 소모품 입출력 (입고) 등록 및 수정 -->
	<update id="saveCgdsMgmtWhsn" >
		<![CDATA[
		-- saveCgdsMgmtWhsn 소모품 입출력 (입고) 등록 및 수정
		MERGE 	IRIS_MCHN_CGDS_MGMT MEM
				USING ( SELECT #{cgdsMgmtId} AS CGDS_MGMT_ID ) AS Tab1
				ON  (MEM.CGDS_MGMT_ID = Tab1.CGDS_MGMT_ID)
				WHEN MATCHED THEN
		UPDATE SET
			   RGST_DT    	= #{rgstDt}
			  ,WHSN_QTY   	= #{qty}
			  ,CGDS_REM    	= #{cgdsRem}
			  ,RGST_ID    	= #{_userSabun}
		      ,LAST_MDFY_DT = GETDATE()
		      ,LAST_MDFY_ID = #{_userId}
		WHEN NOT MATCHED THEN
		INSERT
		        (CGDS_ID
	           ,RGST_ID
	           ,RGST_DT
	           ,WHIO_CL_CD
	           ,WHSN_QTY
	           ,WHOT_QTY
	           ,CGDS_REM
	           ,DEL_YN
	           ,FRST_RGST_DT
	           ,FRST_RGST_ID
	           ,LAST_MDFY_DT
	           ,LAST_MDFY_ID)
	    VALUES
	           (#{cgdsId}
			   ,#{_userSabun}
			   ,#{rgstDt}
			   ,#{whioClCd}
			   ,ISNULL(#{qty},0)
			   ,0
			   ,#{cgdsRem}
			   ,'N'
			   ,GETDATE()
			   ,#{_userId}
			   ,GETDATE()
			   ,#{_userId}
				);
		]]>
	</update>

	 <!-- 소모품 입출력 (출고 및 폐기) 등록 및 수정 -->
	<update id="saveCgdsMgmtWhot" >
		<![CDATA[
		-- saveCgdsMgmtWhot 소모품 입출력 (출고 및 폐기) 등록 및 수정
		MERGE 	IRIS_MCHN_CGDS_MGMT MEM
				USING ( SELECT #{cgdsMgmtId} AS CGDS_MGMT_ID ) AS Tab1
				ON  (MEM.CGDS_MGMT_ID = Tab1.CGDS_MGMT_ID)
				WHEN MATCHED THEN
		UPDATE SET
			   RGST_DT    	= #{rgstDt}
			  ,WHOT_QTY   	= #{qty}
			  ,CGDS_REM    	= #{cgdsRem}
			  ,RGST_ID    	= #{_userSabun}
		      ,LAST_MDFY_DT = GETDATE()
		      ,LAST_MDFY_ID = #{_userId}
		WHEN NOT MATCHED THEN
		INSERT
		        (CGDS_ID
	           ,RGST_ID
	           ,RGST_DT
	           ,WHIO_CL_CD
	           ,WHSN_QTY
	           ,WHOT_QTY
	           ,CGDS_REM
	           ,DEL_YN
	           ,FRST_RGST_DT
	           ,FRST_RGST_ID
	           ,LAST_MDFY_DT
	           ,LAST_MDFY_ID)
	    VALUES
	           (#{cgdsId}
			   ,#{_userSabun}
			   ,#{rgstDt}
			   ,#{whioClCd}
			   ,0
			   ,ISNULL(#{qty},0)
			   ,#{cgdsRem}
			   ,'N'
			   ,GETDATE()
			   ,#{_userId}
			   ,GETDATE()
			   ,#{_userId}
				);
		]]>
	</update>

	<!-- 소모품 입출력 등록 및 수정 후 소모품 마스터 데이터 업데이트 -->
	<update id="updateCgdsQtyMst" >
		<![CDATA[
		-- updateCgdsQtyMst 소모품 입출력 등록 및 수정 후 소모품 마스터 데이터 업데이트
		UPDATE IRIS_MCHN_CGDS_MST
		SET    CUR_IV_QTY   = #{totQty}
		      ,LAST_MDFY_DT = GETDATE()
		      ,LAST_MDFY_ID = #{_userId}
		WHERE  CGDS_ID = #{cgdsId}
		]]>
	</update>


</mapper>