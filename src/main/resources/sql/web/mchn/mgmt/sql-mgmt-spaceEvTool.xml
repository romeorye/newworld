<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mgmt.spaceEvTool">
	<cache eviction="FIFO" flushInterval="10000" size="512" readOnly="true"/>

	<!-- 공간평가Tool 목록 조회  -->
	<select id="retrieveSpaceEvToolSearchList" resultType="hashmap" >
		<![CDATA[
		SELECT TOOL_NM as "toolNm"
			  ,VER as "ver"
			  ,EV_CTGR as "evCtgr"
			  ,CMPN_NM as "cmpnNm"
			  ,EV_WAY as "evWay"
			  ,SU.SA_NAME  as "mchnCrgrNm"
			  ,MCHN_INFO_ID as "mchnInfoId"
			  ,EV_SCN as "evScn"
		FROM IRIS_SPCE_MCHN_INFO_MGMT SPCE
		LEFT OUTER JOIN
				IRIS_SSO_USER   SU
			ON  SPCE.MCHN_CRGR_ID = SU.SA_SABUN_NEW
		WHERE 1=1
		]]>

		<if test="(tool != null and tool != '')">
			AND SPCE.TOOL_NM LIKE '%'+#{tool}+'%'
	    </if>
	    <if test="(mchnCrgrNm != null and mchnCrgrNm != '')">
			AND  SU.SA_NAME LIKE '%'+#{mchnCrgrNm}+'%'
	    </if>
	    <![CDATA[
		ORDER BY SPCE.MCHN_INFO_ID DESC
		]]>
	</select>
	
	<!-- 공간평가Tool 상세 조회  -->
	<select id="retrieveSpaceEvToolSearchDtl" resultType="hashmap" >
		<![CDATA[
		SELECT   TOOL_NM           as "toolNm"
				,VER               as "ver"
				,CMPN_NM           as "cmpnNm"
				,SSO.SA_NAME       as "mchnCrgrNm"
				,MCHN_CRGR_ID      as "mchnCrgrId"
				,EV_CTGR           as "evCtgr"
				,EV_WAY            as "evWay"
				,EV_SCN            as "evScn"
				,MCHN_EXPL         as "mchnExpl"
				,MCHN_SMRY         as "mchnSmry"
				,F.ATTC_FIL_ID     as "attcFilId"
				,F.SEQ             as "seq"
				,MCHN_INFO_ID      as "mchnInfoId"
		FROM    IRIS_SPCE_MCHN_INFO_MGMT SPCE
		        INNER JOIN IRIS_SSO_USER SSO
				ON SSO.SA_SABUN_NEW = SPCE.MCHN_CRGR_ID		        
				LEFT OUTER JOIN IRIS_COM_ATTC_FIL F
				ON F.ATTC_FIL_ID = SPCE.ATTC_FIL_ID
				AND F.DEL_YN ='N'
		WHERE   MCHN_INFO_ID =  #{mchnInfoId};
		]]>
	</select>
	
	<!-- 공간평가Tool 등록 및 수정  -->
	<insert id="saveSpaceEvToolInfo" >
		<![CDATA[
		MERGE IRIS_SPCE_MCHN_INFO_MGMT SPEC
		USING ( SELECT #{mchnInfoId} AS MCHN_INFO_ID ) AS Tab1
		ON  (SPEC.MCHN_INFO_ID = Tab1.MCHN_INFO_ID)
		WHEN matched THEN
UPDATE 	 SET
                 TOOL_NM          = #{toolNm}
				,VER              = #{ver}
				,CMPN_NM          = #{cmpnNm}
				,EV_CTGR          = #{evCtgrVal}
				,EV_WAY           = #{evWayVal}
				,MCHN_CRGR_ID     = #{mchnCrgrId}
				,EV_SCN           = #{evScn}
				,MCHN_EXPL        = #{mchnExpl}
				,MCHN_SMRY        = #{mchnSmry}
				,ATTC_FIL_ID      = #{attcFilId}
				,LAST_MDFY_ID     = #{_userId}
				,LAST_MDFY_DT     = GETDATE()
WHEN not matched THEN
INSERT  (
		 TOOL_NM
		,VER
		,CMPN_NM
		,EV_CTGR
		,EV_WAY
		,MCHN_CRGR_ID
		,EV_SCN
		,MCHN_EXPL
		,MCHN_SMRY
		,ATTC_FIL_ID
		,FRST_RGST_DT
		,FRST_RGST_ID
		,LAST_MDFY_DT
		,LAST_MDFY_ID
		 )
		 VALUES
		 (
			 #{toolNm}
			,#{ver}
			,#{cmpnNm}
			,#{evCtgrVal}
			,#{evWayVal}
			,#{mchnCrgrId}
			,#{evScn}
			,#{mchnExpl}
			,#{mchnSmry}
			,#{attcFilId}
			,GETDATE()
			,#{_userId}
			,GETDATE()
			,#{_userId}
		 );
		]]>
	</insert>	
	

</mapper>