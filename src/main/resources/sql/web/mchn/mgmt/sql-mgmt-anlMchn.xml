<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mgmt.anlMchn">
	<cache eviction="FIFO" flushInterval="10000" size="512" readOnly="true"/>

	<!-- 기기목록 조회  -->
	<select id="retrieveAnlMchnSearchList" resultType="hashmap" >
		<![CDATA[
		-- retrieveAnlMchnSearchList 기기목록 조회
		SELECT MCHN_HAN_NM+'('+MCHN_EN_NM+')' as "mchnNm"
		      ,FXA_NO as "fxaNo"
			  ,MDL_NM as "mdlNm"
			  ,MKR_NM as "mkrNm"
			  ,ACC2.COM_DTL_NM AS "mchnClNm"
		      ,OPN_YN as "opnYn"
			  ,SU.SA_NAME  as "mchnCrgrNm"
			  ,ACC.COM_DTL_NM AS "mchnUsePsblNm"
			  ,MCHN_INFO_ID as "mchnInfoId"
			  ,MIM.ATTC_FIL_ID as "attcFilId"
			  ,MCHN_LOC as "mchnLoc"
		FROM IRIS_MCHN_INFO_MST MIM
		LEFT OUTER JOIN
				IRIS_SSO_USER   SU
			ON  MIM.MCHN_CRGR_ID = SU.SA_SABUN_NEW
			,IRIS_ADM_COM_CD ACC
			,IRIS_ADM_COM_CD ACC2
		WHERE 1=1
		AND ACC.COM_CD_CD = 'MCHN_PRCT_ST'
		AND MIM.MCHN_USE_PSBL_YN = ACC.COM_DTL_CD
		AND ACC2.COM_CD_CD = 'MCHN_CL_CD'
		AND MIM.MCHN_CL_CD = ACC2.COM_DTL_CD
		]]>

		<if test="(mchnNm != null and mchnNm != '')">
			AND (MIM.MCHN_HAN_NM LIKE '%'+#{mchnNm}+'%' OR MIM.MCHN_EN_NM LIKE '%'+#{mchnNm}+'%')
	    </if>
	    <if test="(mchnClCd != null and mchnClCd != '')">
			AND  MIM.MCHN_CL_CD = #{mchnClCd}
	    </if>
		<if test="(fxaNo != null and fxaNo != '')">
			AND  MIM.FXA_NO = #{fxaNo}
	    </if>
	    <if test="(opnYn != null and opnYn != '')">
			AND  MIM.OPN_YN = #{opnYn}
	    </if>
	    <if test="(mchnCrgrNm != null and mchnCrgrNm != '')">
			AND  SU.SA_NAME LIKE '%'+#{mchnCrgrNm}+'%'
	    </if>
	    <if test="(mchnUserPsblYn != null and mchnUserPsblYn != '')">
			AND  MIM.MCHN_USE_PSBL_YN = #{mchnUserPsblYn}
	    </if>
	    <![CDATA[
		ORDER BY MIM.MCHN_INFO_ID DESC
		]]>
	</select>


	<!-- 기기 등록 및 수정  -->
	<insert id="saveMachineInfo" >
		<![CDATA[
		-- saveMachineInfo 기기 등록 및 수정
		MERGE IRIS_MCHN_INFO_MST MIG
		USING ( SELECT #{mchnInfoId} AS MCHN_INFO_ID ) AS Tab1
		ON  (MIG.MCHN_INFO_ID = Tab1.MCHN_INFO_ID)
		WHEN matched THEN
UPDATE 	 SET
                 MCHN_HAN_NM      = #{mchnHanNm}
				,MCHN_EN_NM       = #{mchnEnNm}
				,MKR_NM           = #{mkrNm}
				,MDL_NM           = #{mdlNm}
				,MCHN_CL_CD       = #{mchnClCd}
				,OPN_YN           = #{opnYn}
				,DEL_YN           = #{delYn}
				,MCHN_UFE_CL_CD   = #{mchnUfeClCd}
				,MCHN_USE_PSBL_YN = #{mchnUsePsblYn}
				,MN_SCRN_DSP_YN   = #{mnScrnDspYn}
				,MCHN_UFE         = #{mchnUfe}
				,FXA_NO           = #{fxaNo}
				,MCHN_CRGR_ID     = #{mchnCrgrId}
				,MCHN_LOC         = #{mchnLoc}
				,MCHN_EXPL        = #{mchnExpl}
				,MCHN_SMRY         = #{mchnSmry}
				,ATTC_FIL_ID     = #{attcFilId}
				,LAST_MDFY_ID     = #{_userId}
				,LAST_MDFY_DT     = GETDATE()
WHEN not matched THEN
INSERT  (
		 MCHN_HAN_NM
		,MCHN_EN_NM
		,MKR_NM
		,MDL_NM
		,MCHN_CL_CD
		,OPN_YN
		,MCHN_UFE_CL_CD
		,MCHN_UFE
		,FXA_NO
		,MCHN_CRGR_ID
		,MCHN_LOC
		,MCHN_EXPL
		,MCHN_SMRY
		,ATTC_FIL_ID
		,DEL_YN
		,MCHN_USE_PSBL_YN
		,MN_SCRN_DSP_YN
		,FRST_RGST_DT
		,FRST_RGST_ID
		,LAST_MDFY_DT
		,LAST_MDFY_ID
		 )
		 VALUES
		 (
			 #{mchnHanNm}
			,#{mchnEnNm}
			,#{mkrNm}
			,#{mdlNm}
			,#{mchnClCd}
			,#{opnYn}
			,#{mchnUfeClCd}
			,#{mchnUfe}
			,#{fxaNo}
			,#{mchnCrgrId}
			,#{mchnLoc}
			,#{mchnExpl}
			,#{mchnSmry}
			,#{attcFilId}
			,#{delYn}
			,#{mchnUsePsblYn}
			,#{mnScrnDspYn}
			,GETDATE()
			,#{_userId}
			,GETDATE()
			,#{_userId}
		 );
		]]>
	</insert>



<!-- 고정자산 목록 조회  -->
	<select id="retrieveFxaInfoSearchList" resultType="hashmap" >
		<![CDATA[
		-- retrieveFxaInfoSearchList 고정자산 목록 조회
		SELECT   FXA_NM  as "fxaNm"
				,FXA_NO  as "fxaNo"
				,b.sa_name as "crgrNm"
				,FXA_LOC as "fxaLoc"
				,OBT_DT  as "obtDt"
				,OBT_PCE as "obtPce"
				,BKP_PCE as "bkpPce"
				,CRGR_ID as "crgrId"
		FROM    IRIS_FXA_INFO_MST a
		        INNER JOIN IRIS_SSO_USER b
		        on a.CRGR_ID = b.sa_sabun_new
		WHERE   1=1
		]]>

		<if test="( fxaNm!= null and fxaNm != '')">
			AND a.FXA_NM LIKE '%'+#{fxaNm}+'%'
	    </if>
	    <if test="( fxaNo != null and fxaNo != '')">
			AND  a.FXA_NO = #{fxaNo}
	    </if>
		<if test="( fxaLoc != null and fxaLoc != '')">
			AND  a.FXA_LOC LIKE '%'+#{fxaLoc}+'%'
	    </if>
	    <if test="( crgrNm != null and crgrNm != '')">
			AND  b.sa_name LIKE '%'+#{crgrNm}+'%'
	    </if>
	</select>

<!-- 고정자산 등록 여부 확인  -->
	<select id="retrieveFxaInfoCnt" resultType="int" >
		<![CDATA[
		-- retrieveFxaInfoCnt 고정자산 등록 여부 확인
		SELECT  count(*) as "cnt"
		FROM    IRIS_MCHN_INFO_MST a
		WHERE   A.FXA_NO =  #{fxaNo}
		]]>

		<if test="( mchnInfoId != null and mchnInfoId != '')">
			AND  A.MCHN_INFO_ID != #{mchnInfoId}
	    </if>
	</select>

	<!-- 기기 상세 조회  -->
	<select id="retrieveAnlMchnSearchDtl" resultType="hashmap" >
		<![CDATA[
		-- retrieveAnlMchnSearchDtl 기기 상세 조회
		SELECT   MCHN_HAN_NM       as "mchnHanNm"
				,MCHN_EN_NM        as "mchnEnNm"
				,MCHN_HAN_NM+'('+MCHN_EN_NM+')' as "mchnNm"
				,MKR_NM            as "mkrNm"
				,MDL_NM            as "mdlNm"
				,MCHN_CL_CD        as "mchnClCd"
				,OPN_YN            as "opnYn"
				,MCHN_UFE_CL_CD    as "mchnUfeClCd"
				,MCHN_UFE          as "mchnUfe"
				,A.FXA_NO          as "fxaNo"
				,B.FXA_NM          as "fxaNm"
				,C.SA_NAME         as "mchnCrgrNm"
				,MCHN_CRGR_ID      as "mchnCrgrId"
				,A.DEL_YN      	   as "delYn"
				,CASE WHEN A.DEL_YN = 'Y' THEN '삭제'
				      ELSE '미삭제' END as "delNm"
				,MCHN_LOC          as "mchnLoc"
				,MCHN_EXPL         as "mchnExpl"
				,MCHN_SMRY         as "mchnSmry"
				,F.ATTC_FIL_ID     as "attcFilId"
				,F.SEQ             as  "seq"
				,MCHN_USE_PSBL_YN  as "mchnUsePsblYn"
				,MCHN_INFO_ID      as "mchnInfoId"
				,A.MN_SCRN_DSP_YN as "mnScrnDspYn"
				,AA.COM_DTL_NM    as  "mchnUsePsblNm"
				,dbo.fn_getComDtlNm('MCHN_CL_CD', A.MCHN_CL_CD) as mchnClNm
		FROM    IRIS_MCHN_INFO_MST A
		        INNER JOIN IRIS_SSO_USER C
				ON C.SA_SABUN_NEW = A.MCHN_CRGR_ID
		        LEFT OUTER JOIN IRIS_FXA_INFO_MST B
				ON B.FXA_NO = A.FXA_NO
				LEFT OUTER JOIN IRIS_COM_ATTC_FIL F
				ON F.ATTC_FIL_ID = A.ATTC_FIL_ID
				AND F.DEL_YN ='N'
				,IRIS_ADM_COM_CD AA
		WHERE   MCHN_INFO_ID =  #{mchnInfoId}
		AND     AA.COM_CD_CD = 'MCHN_PRCT_ST'
		AND     AA.COM_DTL_CD = A.MCHN_USE_PSBL_YN
		]]>
	</select>


	<select id="retrieveAnlMchnAllSearchList" resultType="hashmap" >
		<![CDATA[
		-- retrieveAnlMchnAllSearchList
			select m.*
			from  (
					SELECT [dbo].[fn_getMchnInfoName](MIG.MCHN_INFO_ID)+' '+' ('+[dbo].[fn_getMchnInfoEnName](MIG.MCHN_INFO_ID) +') ' AS mchnNm
					       ,MIM.mchn_han_nm as mchnHanNm
					      ,ACC3.COM_DTL_NM  as mchnClNm
						  ,MIM.mchn_cl_cd as mchnClCd
						  ,MIG.INFO_MGMT_ID as "infoMgmtId"
					      ,MIG.MCHN_INFO_ID as "mchnInfoId"
					      ,MIG.MGMT_DT as "mgmtDt"
					      ,MIG.DTL_CL_CD as "dtlClCd"
					      ,ACC.COM_DTL_NM  as "mchnMgmtNm"
					      ,MIG.DTL_CL_CD  as "mchnMgmtCd"
					      ,MIG.RGST_DT as "rgstDt"
					      ,MIG.RGST_ID as "rgstId"
					      ,SU.sa_name  as "rgstNm"
					      ,MIG.MCHN_USE_PSBL_YN as "mchnUsePsblYn"
					      ,MIG.MGMT_UFE as "mgmtUfe"
					      ,MIG.SMRY_SBC as "smrySbc"
					      ,MIG.DTL_SBC as "dtlSbc"
					      ,MIG.ATTC_FIL_ID as "attcFilId"
					      ,ACC2.COM_DTL_NM  as "mchnUsePsblNm"
					FROM IRIS_MCHN_INFO_MGMT MIG
					     LEFT OUTER JOIN
					         IRIS_SSO_USER   SU
						 ON  MIG.RGST_ID = SU.SA_SABUN_NEW
					    ,IRIS_MCHN_INFO_MST  MIM
					    ,IRIS_ADM_COM_CD ACC
					    ,IRIS_ADM_COM_CD ACC2
						,IRIS_ADM_COM_CD ACC3
					WHERE MIG.DEL_YN = 'N'
					AND	 MIG.MCHN_INFO_ID = MIM.MCHN_INFO_ID
					AND  ACC.COM_CD_CD = 'MCHN_MGMT_CD'
					AND  MIG.DTL_CL_CD = ACC.COM_DTL_CD
					AND  ACC2.COM_CD_CD = 'MCHN_PRCT_ST'
					AND  MIG.MCHN_USE_PSBL_YN =  ACC2.COM_DTL_CD
					AND  ACC3.COM_CD_CD = 'MCHN_CL_CD'
					AND  MIM.MCHN_CL_CD =  ACC3.COM_DTL_CD
			) m
		]]>
		where  1=1
		<if test="(mchnNm != null and mchnNm != '')">
			AND  m.mchnNm LIKE '%'+#{mchnNm}+'%'
	    </if>
	    <if test="( rgstNm != null and rgstNm != '')">
			AND  m.rgstNm LIKE '%'+#{rgstNm}+'%'
	    </if>
		<if test="( mchnClCd != null and mchnClCd != '')">
			AND  m.mchnClCd = #{mchnClCd}
	    </if>
		<if test="( mchnMgmtCd != null and mchnMgmtCd != '')">
			AND  m.mchnMgmtCd = #{mchnMgmtCd}
	    </if>
	    <if test="( mgmtStrDt != null and mgmtStrDt != '')">
			AND  left(m.mgmtDt, 7) between #{mgmtStrDt} and #{mgmtEndDt}
	    </if>

		order by m.mgmtDt desc
	</select>

</mapper>