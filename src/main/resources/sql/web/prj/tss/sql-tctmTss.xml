<?xml version="1.0" encoding="EUC-KR"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="prj.tss.tctm">
    <!--기술팀 과제 목록 조회-->
    <select id="selectList" resultType="hashmap">
        <![CDATA[
--  selectList 기술팀 과제 목록 조회
        select   z.wbs_cd  													as wbsCd
                    ,z.wbs_cd  													as wbsCd2
		        ,z.PK_WBS_CD 												as pkWbsCd
				,z.tss_cd as tssCd
				,case when z.PGS_STEP_CD = 'AL' then Z.al_TSS_NM
				      else z.TSS_NM end 									as tssNm
				,case when z.PGS_STEP_CD = 'AL' then Z.al_prj_NM
					  else z.prj_NM end 									as prjNm
				,case when z.PGS_STEP_CD = 'AL' then Z.al_dept_nm
				      else z.dept_nm end 									as deptName
				,case when z.PGS_STEP_CD = 'AL' then Z.al_TSS_STRT_DD
				      else z.TSS_STRT_DD end 								as tssStrtDd
				,case when z.PGS_STEP_CD = 'AL' then Z.al_TSS_FNH_DD
					  else z.TSS_FNH_DD end 								as tssFnhDd
				, CASE WHEN Z.PGS_STEP_CD = 'DC' THEN Z.DCAC_B_STRT_DD
				       WHEN Z.PGS_STEP_CD = 'CM' THEN Z.CMPL_B_STRT_DD END  AS cmplNxStrtDd --과제실적시작
				, CASE WHEN Z.PGS_STEP_CD = 'DC' THEN Z.DCAC_B_FNH_DD
				       WHEN Z.PGS_STEP_CD = 'CM' THEN Z.CMPL_B_FNH_DD END  	AS cmplNxFnhDd  --과제실적종료
				, Z.TSS_ST                                                  AS tssSt        --상태
				, dbo.fn_getComDtlNm('TSS_ST', Z.TSS_ST)                    AS tssStNm      --상태명
				, Z.FRST_RGST_DT
				, CASE WHEN Z.PGS_STEP_CD = 'AL' THEN Z.AL_SA_SABUN_NAME
				       ELSE Z.SA_SABUN_NAME END 							AS saUserName   --과제리더명
				, Z.PGS_STEP_CD                                             AS pgsStepCd    --진행상태코드(PL:계획, PG:진행, CM:완료, AL: 변경, DC:중단)
				, dbo.fn_getComDtlNm('PGS_STEP_CD',Z.PGS_STEP_CD)           AS pgsStepNm    --진행상태명
				, Z.TSS_NOS_ST                                              AS tssNosSt     --과제차수상태코드(1차년도, 2 차년도, 3 차년도, 4차년도, 5차년도:국책과제)
				, dbo.fn_getComDtlNm('TSS_NOS_ST',Z.TSS_NOS_ST)             AS tssNosStNm   --과제차수상태명
				, Z.GRS_EV_ST                                               AS grsEvSt      --GRS상태
				, Z.MY_TSS                                                  AS myTss
				, Z.PROGRESSRATEREAL                                        AS progressrateReal
				, Z.PROGRESSRATE                                            as progressrate
				, Z.PRJ_CD													AS prjCd
		from  (
				select   m.PRJ_CD
						,substring(m.prj_nm, CHARINDEX ('.', m.prj_nm) +1, len(m.prj_nm)  ) as prj_nm
						,substring(m.al_prj_nm, CHARINDEX ('.', m.al_prj_nm) +1, len(m.al_prj_nm)  ) as al_prj_nm
						,m.TSS_CD
						,m.PGS_STEP_CD
						,m.TSS_SCN_CD
						,m.WBS_CD
						,m.PK_WBS_CD
						,m.dept_nm
						,m.al_dept_nm
						,m.biz_dpt_cd
						,m.tss_nm
						,m.sa_sabun_name
						,m.al_sa_sabun_name
						,m.TSS_STRT_DD
						,m.TSS_FNH_DD
						,m.ALTR_B_STRT_DD
						,m.ALTR_B_FNH_DD
						,m.ALTR_NX_STRT_DD
						,m.ALTR_NX_FNH_DD
						,m.CMPL_B_STRT_DD
						,m.CMPL_B_FNH_DD
						,m.CMPL_NX_STRT_DD
						,m.CMPL_NX_FNH_DD
						,m.DCAC_B_STRT_DD
						,m.DCAC_B_FNH_DD
						,m.DCAC_NX_STRT_DD
						,m.DCAC_NX_FNH_DD
						,m.TSS_ST
						,m.TSS_NOS_ST
						,m.FRST_RGST_DT
						,m.FRST_RGST_ID
						,m.LAST_MDFY_DT
						,m.LAST_MDFY_ID
						,m.sa_sabun_new
						,m.al_tss_nm
						,m.al_TSS_STRT_DD
						,m.al_TSS_FNH_DD
				       , (SELECT TOP 1 X.GRS_EV_ST FROM IRIS_GRS_EV_RSLT_RGST X WHERE X.TSS_CD = M.TSS_CD ORDER BY X.TSS_CD_SN DESC) AS GRS_EV_ST
					   , CASE WHEN  M.TSS_CD IN (SELECT X.TSS_CD FROM IRIS_TSS_PTC_RSST_MBR X WHERE X.SA_SABUN_NEW =  #{_userSabun})  THEN 'Y'
					   		  when  isnull(m.al_sa_sabun_name, m.sa_sabun_name)  = #{_userNm} then 'Y'
					          ELSE 'N' END AS MY_TSS
					   , CONCAT(ISNULL((SELECT IIF(A.ARSL_CD='','0' , ROUND( A.ARSL_CD,1))
										FROM IRIS_TSS_GEN_WBS A
										WHERE A.TSS_CD = (SELECT MAX(PG.TSS_CD) --다건발생경우  ERROR발생
														  FROM IRIS_TSS_MGMT_MST PG
														  WHERE PG.PK_WBS_CD = M.PK_WBS_CD
														  AND PG.PGS_STEP_CD = 'PG')
														  AND A.WBS_SN = 1), 0),
											  '/',
											  --목표 (전달의 마지막날로 계산)
										(SELECT ISNULL(SUM(IIF(A.FNH_DT < (CONVERT(VARCHAR(10), GETDATE(), 126)), A.WGVL,
												ROUND(CONVERT(FLOAT,A.WGVL / DATEDIFF(DD, CONVERT(DATE, STRT_DT), CONVERT(DATE, FNH_DT))) *
												IIF(DATEDIFF(DD, CONVERT(DATE, STRT_DT),GETDATE() ) <0 , 0 ,  DATEDIFF(DD, CONVERT(DATE, STRT_DT),GETDATE())), 1)
												 )), 100) -- 전달의 마지막날로 계산
										 FROM IRIS_TSS_GEN_WBS A
										 WHERE A.TSS_CD = M.TSS_CD
										 AND A.DEPTH = 1
										 AND ((CONVERT(VARCHAR(10), GETDATE(), 126) BETWEEN A.STRT_DT AND A.FNH_DT)
												   OR A.FNH_DT < (CONVERT(VARCHAR(10), GETDATE(), 126))))) AS PROGRESSRATEREAL --진척율
						-- 실적(WBS) /목표 -신호등
						, CONCAT(ISNULL((SELECT IIF(A.ARSL_CD='','0' , A.ARSL_CD)
										 FROM IRIS_TSS_GEN_WBS A
										 WHERE A.TSS_CD = (SELECT MAX(PG.TSS_CD)
														   FROM IRIS_TSS_MGMT_MST PG
														   WHERE PG.PK_WBS_CD = M.PK_WBS_CD AND PG.PGS_STEP_CD = 'PG')
														   AND A.WBS_SN=1),0),
											  '/',
											  --목표 (전달의 마지막날로 계산)
											  (SELECT ISNULL(SUM(IIF(A.FNH_DT < (CONVERT(VARCHAR(10), GETDATE(), 126)) , A.WGVL ,
															ROUND(CONVERT(FLOAT,A.WGVL /DATEDIFF(DD, CONVERT(DATE, STRT_DT), CONVERT(DATE, FNH_DT)))
																	*
																	IIF( DATEDIFF(DD, CONVERT(DATE, STRT_DT), DATEADD(D,-DAY(GETDATE()),GETDATE())  ) <0 , 0 ,  DATEDIFF(DD, CONVERT(DATE, STRT_DT), DATEADD(D,-DAY(GETDATE()),GETDATE())  ))
																	,1)
																) ),100) -- 전달의 마지막날로 계산
												 FROM IRIS_TSS_GEN_WBS A
												WHERE A.TSS_CD = M.TSS_CD
												  AND A.DEPTH= 1
												  AND ((CONVERT(VARCHAR(10), GETDATE(), 126) BETWEEN A.STRT_DT  AND A.FNH_DT)
												   OR A.FNH_DT < (CONVERT(VARCHAR(10), GETDATE(), 126))))) AS PROGRESSRATE --진척(신호등)
						, CASE WHEN SUBSTRING(M.PK_WBS_CD, 1, 1) = 'D' THEN 1 ELSE 2 END AS R_NUM
				from   (
						select  a.PRJ_CD
							   ,isnull(a.PRJ_NM, dbo.fn_getPrjName(a.PRJ_CD))  as prj_nm
							   ,a.TSS_CD
							   ,a.PGS_STEP_CD
							   ,a.TSS_SCN_CD
							   ,a.WBS_CD
							   ,a.PK_WBS_CD
							   ,isnull(a.dept_name, dbo.fn_getUpperDeptNm(a.dept_code))  as dept_nm
							   ,isnull(b.dept_name, dbo.fn_getUpperDeptNm(b.dept_code))  as al_dept_nm
							   ,a.biz_dpt_cd
							   ,a.tss_nm
							   ,isnull(dbo.fn_getSabunName(a.sa_sabun_new), a.sa_sabun_name) as sa_sabun_name
							   ,isnull(dbo.fn_getSabunName(b.sa_sabun_new), b.sa_sabun_name) as al_sa_sabun_name
							   ,a.TSS_STRT_DD
							   ,a.TSS_FNH_DD
							   ,a.ALTR_B_STRT_DD
							   ,a.ALTR_B_FNH_DD
							   ,a.ALTR_NX_STRT_DD
							   ,a.ALTR_NX_FNH_DD
							   ,a.CMPL_B_STRT_DD
							   ,a.CMPL_B_FNH_DD
							   ,a.CMPL_NX_STRT_DD
							   ,a.CMPL_NX_FNH_DD
							   ,a.DCAC_B_STRT_DD
							   ,a.DCAC_B_FNH_DD
							   ,a.DCAC_NX_STRT_DD
							   ,a.DCAC_NX_FNH_DD
							   ,a.TSS_ST
							   ,a.TSS_NOS_ST
							   ,a.FRST_RGST_DT
							   ,a.FRST_RGST_ID
							   ,a.LAST_MDFY_DT
							   ,a.LAST_MDFY_ID
							  , a.sa_sabun_new
							   ,b.tss_nm as al_tss_nm
							  ,isnull(b.PRJ_NM, dbo.fn_getPrjName(b.PRJ_CD)) as al_prj_nm
							  , b.TSS_STRT_DD as al_TSS_STRT_DD
							  , b.TSS_FNH_DD as al_TSS_FNH_DD
						from   IRIS_TSS_MGMT_MST a
							   LEFT JOIN (SELECT PK_WBS_CD, WBS_CD, TSS_STRT_DD, TSS_FNH_DD, TSS_NM, PRJ_CD, DEPT_CODE, DEPT_NAME, TSS_CD, SA_SABUN_NAME, SA_SABUN_NEW, prj_nm
										  FROM IRIS_TSS_MGMT_MST
										  WHERE PGS_STEP_CD = 'PG'
		                                  AND TSS_SCN_CD = 'D'
		                                 ) B
		                       on a.PK_WBS_CD = B.PK_WBS_CD
						where  a.DEL_YN ='N'
						and    a.TSS_SCN_CD = 'D'
						and    a.TSS_CD IN (SELECT TSS_CD
											FROM (SELECT PK_WBS_CD, TSS_CD, STEPRANK
													   , RANK() OVER (PARTITION BY X.PK_WBS_CD ORDER BY X.STEPRANK ASC, TSS_CD DESC) AS OVER_STEP_RANK
												  FROM (SELECT CASE WHEN PGS_STEP_CD = 'CM' OR PGS_STEP_CD = 'DC' THEN 1
																	WHEN PGS_STEP_CD = 'PG' AND TSS_ST = '100' THEN 2
																	WHEN PGS_STEP_CD = 'PG' AND (TSS_ST = '101' OR TSS_ST = '102') THEN 3
																	WHEN PGS_STEP_CD = 'AL' THEN 4
																	WHEN PGS_STEP_CD = 'PG' AND TSS_ST != '100' THEN 5
																	WHEN PGS_STEP_CD = 'PL' THEN 6 END AS STEPRANK
															   , TSS_CD, PGS_STEP_CD, TSS_ST, PK_WBS_CD
														 FROM IRIS_TSS_MGMT_MST
														 where tss_scn_cd ='D' ) X) Y
												  WHERE OVER_STEP_RANK = 1
												  )
						) m
				where   1=1
				) z
		where  1=1
		]]>
        <if test="tssRoleType.equals('S2')">
            and  ( z.wbs_cd in (select distinct wbs_cd
            from   IRIS_TSS_MGMT_MST a
            where   del_yn ='N'
            and     tss_cd in (
            select tss_cd
            from  IRIS_TSS_PTC_RSST_MBR
            where  1=1
            and    sa_sabun_new = #{_userSabun}
            )
            and   tss_scn_cd = 'D'

            union
            select  distinct wbs_cd
            from    IRIS_TSS_MGMT_MST a
            where  	del_yn ='N'
            and     tss_scn_cd ='D'
            and     sa_sabun_new = #{_userSabun}
            )
            or  Z.PRJ_CD in (select prj_cd  from iris_prj_rsst_mst where  pl_emp_no = #{_userSabun})

            )
        </if>

        <if test="tssRoleType.equals('S3')">
            AND z.BIZ_DPT_CD IN
            <foreach collection="tssRoleCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>

        <if test="wbsCd != null and !wbsCd.equals('')">
            AND (z.WBS_CD LIKE '%'+#{wbsCd}+'%'
            OR z.PGS_STEP_CD = CASE WHEN #{wbsCd} = 'SEED' THEN 'PL' ELSE 'X' END)
        </if>

        <if test="tssNm != null and !tssNm.equals('')">
            AND z.TSS_NM LIKE '%'+#{tssNm}+'%'
        </if>

        <if test="deptName != null and !deptName.equals('')">
            AND (z.dept_nm  LIKE '%'+#{deptName}+'%'  OR z.al_dept_nm LIKE '%'+#{deptName}+'%')
        </if>
        <if test="tssStrtDd != null and !tssStrtDd.equals('')">
            <![CDATA[
			AND convert(nvarchar(7), z.TSS_STRT_DD ) >= #{tssStrtDd}
		]]>
        </if>
        <if test="tssFnhDd != null and !tssFnhDd.equals('')">
            <![CDATA[
			AND convert(nvarchar(7), z.TSS_FNH_DD ) <= #{tssFnhDd}
		]]>
        </if>
        <if test="saUserName != null and !saUserName.equals('')">
            AND (z.SA_SABUN_NAME  LIKE '%'+#{saUserName}+'%'  OR  z.AL_SA_SABUN_NAME LIKE '%'+#{saUserName}+'%')
        </if>
        <if test="tssSt != null and !tssSt.equals('')">
            AND z.TSS_ST = #{tssSt}
        </if>
        <if test="pgsStepCd != null and !pgsStepCd.equals('')">
            AND z.PGS_STEP_CD = #{pgsStepCd} --진행상태코드(PL:계획, PG:진행, CM:완료, AL: 변경, DC:중단)
        </if>
        <if test="prjNm != null and !prjNm.equals('')">
            AND Z.PRJ_NM LIKE '%'+#{prjNm}+'%'
        </if>
        <if test="_roleId == 'WORK_IRI_T16' ">
            AND (z.dept_nm  LIKE '%'+#{deptName}+'%'  OR z.al_dept_nm LIKE '%'+#{deptName}+'%')
        </if>

        order by 	z.TSS_STRT_DD  desc, z.TSS_FNH_DD desc

    </select>

   <select id="selectNewTssCd" resultType="String">
   <![CDATA[
-- selectNewTssCd TSS CD 생성
            SELECT CASE WHEN #{createMod} = 'Altr' THEN #{pkWbsCd} ELSE #{wbsCd} END
                     + REPLICATE('0', 4 - LEN(COUNT(X.TSS_CD)+1)) + CAST(COUNT(X.TSS_CD) + 1 AS NVARCHAR(4))
              FROM IRIS_TSS_MGMT_MST X
             WHERE X.WBS_CD = #{wbsCd}
      ]]>
   </select>


    <!--기술팀 과제 상세 조회 -->
    <select id="selectInfo" resultType="hashmap">
    <![CDATA[
    -- selectInfo 기술팀 과제 상세 조회
            SELECT A.PRJ_CD          AS prjCd        --프로젝트코드
             --, B.PRJ_NM          AS prjNm        --프로젝트명
             , ISNULL(dbo.fn_getNameOnTssPgsStep(A.TSS_CD, 'PRJ', A.PRJ_CD), A.PRJ_NM) AS prjNm        --프로젝트명
             , A.TSS_CD          AS tssCd        --과제코드
             , A.PGS_STEP_CD     AS pgsStepCd    --진행단계코드
             , A.TSS_SCN_CD      AS tssScnCd     --과제구분코드
             , A.WBS_CD          AS wbsCd        --WBS코드
             , A.WBS_CD          AS orgWbsCd     --원본WBS코드
             , A.TSS_NM+' ('+ A.WBS_CD + ')'  AS wbsNm
      		 , A.PK_WBS_CD       AS pkWbsCd      --WBS코드
             , A.DEPT_CODE       AS deptCode     --조직코드(소속)
             , A.PPSL_MBD_CD     AS ppslMbdCd    --발의주체코드
             , A.BIZ_DPT_CD      AS bizDptCd     --사업부문코드
             , A.TSS_NM          AS tssNm        --과제명
             , A.SA_SABUN_NEW    AS saSabunNew   --과제리더사번
             , A.TSS_ATTR_CD     AS tssAttrCd    --과제속성코드
             , A.TSS_STRT_DD     AS tssStrtDd    --과제시작일
             , A.TSS_FNH_DD      AS tssFnhDd     --과제종료일
             , A.CUST_SQLT      AS custSqlt     --고객특성
             , A.TSS_SMRY_TXT      AS tssSmryTxt     --Concept
             , A.ALTR_B_STRT_DD  AS altrBStrtDd  --변경전시작일
             , A.ALTR_B_FNH_DD   AS altrBFnhDd   --변경전종료일
             , A.ALTR_NX_STRT_DD AS altrNxStrtDd --변경후시작일
             , A.ALTR_NX_FNH_DD  AS altrNxFnhDd  --변경후종료일
             , A.CMPL_B_STRT_DD  AS cmplBStrtDd  --완료전시작일
             , A.CMPL_B_FNH_DD   AS cmplBFnhDd   --완료전종료일
             , A.CMPL_NX_STRT_DD AS cmplNxStrtDd --완료후시작일
             , A.CMPL_NX_FNH_DD  AS cmplNxFnhDd  --완료후종료일
             , A.DCAC_B_STRT_DD  AS dcacBStrtDd  --중단전시작일
             , A.DCAC_B_FNH_DD   AS dcacBFnhDd   --중단전종료일
             , A.DCAC_NX_STRT_DD AS dcacNxStrtDd --중단후시작일
             , A.DCAC_NX_FNH_DD  AS dcacNxFnhDd  --중단후종료일
             , A.COO_INST_CD     AS cooInstCd    --협력기관코드
             , A.SUPV_OPS_NM     AS supvOpsNm    --주관부서명
             , A.EXRS_INST_NM    AS exrsInstNm   --전담기관명
             , A.BIZ_NM          AS bizNm        --사업명
             , A.TSS_ST          AS tssSt        --과제상태
             , A.TSS_NOS_ST      AS tssNosSt     --과제차수상태
             , A.TSS_ST_TXT      AS tssStTxt     --과제상태의견
             , A.PROD_G          AS prodG
             , ISNULL(dbo.fn_getNameOnTssPgsStep(A.TSS_CD, 'USER', A.SA_SABUN_NEW) , A.SA_SABUN_NAME) AS saSabunName --과제리더명
             , ISNULL(dbo.fn_getUpperDeptNm(A.DEPT_CODE)    , A.DEPT_NAME)     AS deptName   --조직(소속)명
             , dbo.fn_getComDtlNm('PGS_STEP_CD', A.PGS_STEP_CD) AS pgsStepNm  --진행단계명
             , dbo.fn_getComDtlNm('PPSL_MBD_CD', A.PPSL_MBD_CD) AS ppslMbdNm  --발의주체명
             , dbo.fn_getComDtlNm('BIZ_DPT_CD', A.BIZ_DPT_CD)   AS bizDptNm   --사업부문명
             , dbo.fn_getComDtlNm('TSS_ATTR_CD', A.TSS_ATTR_CD) AS tssAttrNm  --과제속성명
             , dbo.fn_getComDtlNm('PROD_G', A.PROD_G) AS prodGNm
             , dbo.fn_getComDtlNm('RSST_SPHE', A.RSST_SPHE) AS rsstSpheNm
			 , dbo.fn_getComDtlNm('TSS_TYPE', A.TSS_TYPE)   AS tssTypeNm
             , A.RSST_SPHE                                      AS rsstSphe
             , A.TSS_TYPE                                       AS tssType
             , ( CASE WHEN A.TSS_SCN_CD = 'N'
                      THEN (SELECT X.TSS_CD FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG' AND X.TSS_NOS_ST = A.TSS_NOS_ST)
                      ELSE  (SELECT X.TSS_CD FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG')
                 END ) AS pgTssCd --진행과제코드
             , ( CASE WHEN A.TSS_SCN_CD = 'N'
                      THEN (SELECT X.TSS_ST FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG' AND X.TSS_NOS_ST = A.TSS_NOS_ST)
                      ELSE  (SELECT X.TSS_ST FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG')
                 END ) AS pgTssSt --진행과제상태코드
             , ( CASE WHEN A.TSS_SCN_CD = 'N'
                      THEN (SELECT X.SA_SABUN_NEW FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG' AND X.TSS_NOS_ST = A.TSS_NOS_ST)
                      ELSE  (SELECT X.SA_SABUN_NEW FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG')
                 END ) AS pgSaSabunNew --진행단계리더
             , (SELECT INST_NM + ' / ' +  OPS_NM  + ' / ' +  SPLT_NM+ ' '+ POA_NM FROM IRIS_KNLD_OSCP_SPLT WHERE DEL_YN = 'N' AND OSCP_SPLT_ID = A.COO_INST_CD ) AS cooInstNm --협력기관명
             , DATEDIFF ( month , CONVERT(DATE, A.TSS_STRT_DD) , CONVERT(DATE, A.TSS_FNH_DD) )  AS ttsDifMonth -- 과제소요기간
          FROM IRIS_TSS_MGMT_MST A /*과제관리마스터*/
          LEFT JOIN IRIS_PRJ_RSST_MST B  /*프로젝트연구마스터*/
            ON A.PRJ_CD = B.PRJ_CD
         WHERE A.TSS_CD = #{tssCd}
    ]]>
    </select>

    <!--기술팀 과제  개요 조회 -->
    <select id="selectInfoSmry" resultType="hashmap">
        <![CDATA[
-- selectInfoSmry 기술팀 과제 개요 조회
            SELECT
                SMR_SMRY_TXT AS smrSmryTxt,
                SMR_GOAL_TXT AS smrGoalTxt,
                CTY_OT_PLN_M AS ctyOtPlnM,
                NPROD_SALS_PLN_Y AS nprodSalsPlnY,
                ATTC_FIL_ID AS attcFilId,
                ALTR_RSON_TXT AS altrRsonTxt,
                ADD_RSON_TXT AS addRsonTxt,
                DCAC_RSON_TXT AS dcacRsonTxt,
                ALTR_ATTC_FIL_ID AS altrAttcFilId,
                CMPL_ATTC_FIL_ID AS cmplAttcFilId,
                DCAC_ATTC_FIL_ID AS dcacAttcFilId,
                FRST_RGST_DT AS frstRgstDt,
                FRST_RGST_ID AS frstRgstId,
                LAST_MDFY_DT AS lastMdfyDt,
                LAST_MDFY_ID AS lastMdfyId
              FROM IRIS_TSS_TCTM_SMRY
             WHERE TSS_CD = #{tssCd}
        ]]>
    </select>




   <!--기술팀 과제 등록/수정-->
   <insert id="updateInfo">
      <![CDATA[
--updateInfo 기술팀과제 마스터 등록 및 수정
MERGE INTO dbo.IRIS_TSS_MGMT_MST tbl
    USING (SELECT #{tssCd} AS TSS_CD) src
    ON (tbl.TSS_CD = src.TSS_CD)
    WHEN NOT MATCHED THEN
        ]]>
      <![CDATA[
		INSERT
		       (
               PRJ_CD,
               TSS_CD,
               PGS_STEP_CD,
               TSS_SCN_CD,
               WBS_CD,
               PK_WBS_CD,
               DEPT_CODE,
               PPSL_MBD_CD,
               BIZ_DPT_CD,
               TSS_NM,
               SA_SABUN_NEW,
               TSS_ATTR_CD,
               TSS_STRT_DD,
               TSS_FNH_DD,
               TSS_ST,
               FRST_RGST_DT,
               FRST_RGST_ID,
               LAST_MDFY_DT,
               LAST_MDFY_ID,
               DEL_YN,
               PROD_G,
               RSST_SPHE,
               TSS_TYPE,
               SA_SABUN_NAME,
               DEPT_NAME,
               PRJ_NM,
               CUST_SQLT,
               TSS_SMRY_TXT
		       )VALUES(
                #{prjCd},
                #{tssCd},
                #{pgsStepCd},
                #{tssScnCd},
                #{wbsCd},
                CASE WHEN #{createMod} = 'Altr' THEN #{pkWbsCd} ELSE #{wbsCd} END,
                #{deptCode},
                #{ppslMbdCd},
                #{bizDptCd},
                #{tssNm},
                #{saSabunNew},
                #{tssAttrCd},
                #{tssStrtDd},
                #{tssFnhDd},
                #{tssSt},
				GETDATE(),
				#{userId},
				GETDATE(),
				#{userId},
                'N',
                #{prodG},
                #{rsstSphe},
                #{tssType},
                #{saSabunName},
                #{deptName},
                #{prjNm},
               #{custSqlt},
               #{tssSmryTxt}
		       )
    WHEN MATCHED THEN
        UPDATE SET
            PRJ_CD = #{prjCd},
            PGS_STEP_CD = #{pgsStepCd},
            TSS_SCN_CD = #{tssScnCd},
            WBS_CD = #{wbsCd},
            PK_WBS_CD = #{pkWbsCd},
            DEPT_CODE = #{deptCode},
            PPSL_MBD_CD = #{ppslMbdCd},
            BIZ_DPT_CD = #{bizDptCd},
            TSS_NM = #{tssNm},
            SA_SABUN_NEW = #{saSabunNew},
            TSS_ATTR_CD = #{tssAttrCd},
            TSS_STRT_DD = #{tssStrtDd},
            TSS_FNH_DD = #{tssFnhDd},
            TSS_ST = #{tssSt},
            LAST_MDFY_DT = GETDATE(),
            LAST_MDFY_ID = #{userId},
            PROD_G = #{prodG},
            RSST_SPHE = #{rsstSphe},
            TSS_TYPE = #{tssType},
            SA_SABUN_NAME = #{saSabunName},
            DEPT_NAME = #{deptName},
            PRJ_NM = #{prjNm},
           CUST_SQLT = #{custSqlt},
           TSS_SMRY_TXT = #{tssSmryTxt }

    ;
    	]]>
   </insert>

   <!--기술팀 과제 개요 등록/수정-->
   <insert id="updateSmryInfo">
      <![CDATA[
--updateSmryInfo 기술팀 과제 개요 등록/수정
MERGE INTO IRIS_TSS_TCTM_SMRY tbl
    USING (SELECT #{tssCd} AS TSS_CD) src
    ON (tbl.TSS_CD = src.TSS_CD)
    WHEN NOT MATCHED THEN
		INSERT
		       (
		       TSS_CD,
               SMR_SMRY_TXT,
               SMR_GOAL_TXT,
               CTY_OT_PLN_M,
               NPROD_SALS_PLN_Y,
               ATTC_FIL_ID,
               FRST_RGST_DT,
               FRST_RGST_ID,
               LAST_MDFY_DT,
               LAST_MDFY_ID
		       )VALUES(
		       #{tssCd},
               #{smrSmryTxt},
               #{smrGoalTxt},
               #{ctyOtPlnM},
               #{nprodSalsPlnY},
               #{attcFilId},
				GETDATE(),
				#{userId},
				GETDATE(),
				#{userId}
		       )
    WHEN MATCHED THEN
        UPDATE SET
               SMR_SMRY_TXT = #{smrSmryTxt},
               SMR_GOAL_TXT = #{smrGoalTxt},
               CTY_OT_PLN_M = #{ctyOtPlnM},
               NPROD_SALS_PLN_Y = #{nprodSalsPlnY},
               ATTC_FIL_ID = #{attcFilId},
	           LAST_MDFY_DT = GETDATE(),
	           LAST_MDFY_ID = #{userId}
    ;
    	]]>
   </insert>

   <!--기술팀 과제 삭제-->
   <delete id="deleteInfo">
   <![CDATA[
-- deleteInfo 기술팀 과제 삭제
       ]]>
   </delete>

   <!--기술팀 과제 개요 삭제-->
   <delete id="deleteSmryInfo">
   <![CDATA[
--deleteSmryInfo 기술팀 과제 개요 삭제
       ]]>
   </delete>

</mapper>
