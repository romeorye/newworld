<?xml version="1.0" encoding="EUC-KR"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="prj.tss.nat.pgs">
    <!--========================== 국책과제_진행_마스터 ==========================-->
    <!-- 마스터 신규 -->
    <insert id="insertNatTssMst">
    -- insertNatTssMst 마스터 신규
        <selectKey keyProperty="tssCd" resultType="String" order="BEFORE">
        <![CDATA[
            SELECT #{pkWbsCd} + REPLICATE('0', 4 - LEN(COUNT(X.TSS_CD)+1)) + CAST(COUNT(X.TSS_CD) + 1 AS NVARCHAR(4))
              FROM IRIS_TSS_MGMT_MST X
             WHERE X.PK_WBS_CD = #{pkWbsCd}
        ]]>
        </selectKey>
    <![CDATA[
        INSERT
          INTO IRIS_TSS_MGMT_MST  /*과제관리마스터*/
             ( PRJ_CD            --프로젝트코드
             , TSS_CD            --과제코드
             , PGS_STEP_CD       --진행단계코드
             , TSS_SCN_CD        --과제구분코드
             , WBS_CD            --WBS코드
             , PK_WBS_CD            --WBS코드
             , DEPT_CODE         --조직코드(소속)
             , PPSL_MBD_CD       --발의주체코드
             , BIZ_DPT_CD        --사업부문코드
             , TSS_NM            --과제명
             , SA_SABUN_NEW      --과제리더사번
             , TSS_ATTR_CD       --과제속성코드
             , TSS_STRT_DD       --과제시작일
             , TSS_FNH_DD        --과제종료일
             , ALTR_B_STRT_DD    --변경전시작일
             , ALTR_B_FNH_DD     --변경전종료일
             , ALTR_NX_STRT_DD   --변경후시작일
             , ALTR_NX_FNH_DD    --변경후종료일
             , CMPL_B_STRT_DD    --완료전시작일
             , CMPL_B_FNH_DD     --완료전종료일
             , CMPL_NX_STRT_DD   --완료후시작일
             , CMPL_NX_FNH_DD    --완료후종료일
             , DCAC_B_STRT_DD    --중단전시작일
             , DCAC_B_FNH_DD     --중단전종료일
             , DCAC_NX_STRT_DD   --중단후시작일
             , DCAC_NX_FNH_DD    --중단후종료일
             , COO_INST_CD       --협력기관코드
             , SUPV_OPS_NM       --주관부서명
             , EXRS_INST_NM      --전담기관명
             , BIZ_NM            --사업명
             , TSS_ST            --과제상태
             , TSS_NOS_ST        --과제차수상태
             , TSS_ST_TXT        --과제상태의견
             , FRST_RGST_DT      --최초등록일시
             , FRST_RGST_ID      --최초등록자
             , LAST_MDFY_DT      --최종수정일시
             , LAST_MDFY_ID      --최종수정자
             )
        SELECT PRJ_CD
             , #{tssCd}
             , #{pgsStepCd}
             , TSS_SCN_CD
             , WBS_CD
             , PK_WBS_CD
             , DEPT_CODE
             , PPSL_MBD_CD
             , BIZ_DPT_CD
             , TSS_NM
             , SA_SABUN_NEW
             , TSS_ATTR_CD
             , TSS_STRT_DD
             , TSS_FNH_DD
             , ALTR_B_STRT_DD
             , ALTR_B_FNH_DD
             , ALTR_NX_STRT_DD
             , ALTR_NX_FNH_DD
             , CMPL_B_STRT_DD
             , CMPL_B_FNH_DD
             , CMPL_NX_STRT_DD
             , CMPL_NX_FNH_DD
             , DCAC_B_STRT_DD
             , DCAC_B_FNH_DD
             , DCAC_NX_STRT_DD
             , DCAC_NX_FNH_DD
             , COO_INST_CD
             , SUPV_OPS_NM
             , EXRS_INST_NM
             , BIZ_NM
             , '100'
             , TSS_NOS_ST
             , TSS_ST_TXT
             , GETDATE()
             , #{userId}
             , GETDATE()
             , #{userId}
          FROM IRIS_TSS_MGMT_MST  /*과제관리마스터*/
         WHERE TSS_CD = #{pgTssCd}
    ]]>
    </insert>


    <!--========================== 국책과제_진행_개요 ==========================-->



    <!--========================== 국책과제_진행_WBS ==========================-->
    <!-- WBS 조회 -->
    <select id="retrieveNatTssPgsWBS" resultType="hashmap">
    <![CDATA[
    -- retrieveNatTssPgsWBS WBS 조회
        SELECT TSS_CD       AS tssCd      --과제코드
             , WBS_SN       AS wbsSn      --WBS일련번호
             , PID_SN       AS pidSn      --PID
             , DEPTH        AS depth      --DEPTH
             , DEPTH_SEQ    AS depthSeq   --순서
             , TSS_NM       AS tssNm      --과제명
             , STRT_DT      AS strtDt     --시작일
             , FNH_DT       AS fnhDt      --종료일
             , WGVL         AS wgvl       --가중치
             , sa_sabun_new AS saSabunNew --담당자
             , VRF_YN       AS vrfYn      --검증
             , ARSL_CD      AS arslCd     --실적코드
             , YLD_ITM_NM   AS yldItmNm   --산출물명
             , YLD_ITM_TXT  AS yldItmTxt  --산출물내용
             , KWD_TXT      AS kwdTxt     --키워드
             , ATTC_FIL_ID  AS attcFilId  --파일ID
             , CASE WHEN LEN(STRT_DT) = 0 OR LEN(FNH_DT) = 0 THEN NULL
                    ELSE DATEDIFF(DD, CONVERT(DATE, STRT_DT), CONVERT(DATE, FNH_DT)) + 1 END AS period --기간
             , CASE WHEN DEPTH = 0 THEN WBS_SN
                    WHEN DEPTH = 1 THEN PID_SN
                    WHEN DEPTH = 2 THEN (SELECT X.PID_SN FROM IRIS_TSS_GEN_WBS X WHERE X.TSS_CD = #{tssCd} AND X.WBS_SN = A.PID_SN )
                    WHEN DEPTH = 3 THEN (SELECT Y.PID_SN FROM IRIS_TSS_GEN_WBS Y WHERE Y.TSS_CD = #{tssCd}
                                            AND Y.WBS_SN = (SELECT X.PID_SN FROM IRIS_TSS_GEN_WBS X WHERE X.TSS_CD = #{tssCd} AND X.WBS_SN = A.PID_SN))
                    END AS pidSeq
             , #{_userId}   AS userId
          FROM IRIS_TSS_GEN_WBS A  /*국책과제WBS*/
         WHERE A.TSS_CD = #{tssCd}
         ORDER BY pidSeq, depthSeq
    ]]>
    </select>


    <!-- WBS 저장 -->
    <update id="updateNatTssPgsWBS">
    <![CDATA[
    -- updateNatTssPgsWBS WBS 저장
         MERGE IRIS_TSS_GEN_WBS AS A  /*국책과제WBS*/
         USING (SELECT #{tssCd} AS TSS_CD, CONVERT(numeric, #{wbsSn}) AS WBS_SN) B
            ON A.TSS_CD = B.TSS_CD
           AND A.WBS_SN = B.WBS_SN
          WHEN NOT MATCHED THEN
        INSERT
             ( TSS_CD
             , WBS_SN
             , PID_SN
             , DEPTH
             , DEPTH_SEQ
             , TSS_NM
             , STRT_DT
             , FNH_DT
             , WGVL
             , SA_SABUN_NEW
             , VRF_YN
             , ARSL_CD
             , YLD_ITM_NM
             , YLD_ITM_TXT
             , KWD_TXT
             , ATTC_FIL_ID
             , FRST_RGST_DT
             , FRST_RGST_ID
             , LAST_MDFY_DT
             , LAST_MDFY_ID
             )
        VALUES
             ( #{tssCd}
             , CONVERT(numeric, #{wbsSn})
             , CONVERT(numeric, CASE WHEN #{pidSn} = '' THEN NULL ELSE #{pidSn} END)
             , CONVERT(numeric, CASE WHEN #{depth} = '' THEN '0' ELSE #{depth} END)
             , CONVERT(numeric, CASE WHEN #{depthSeq} = '' THEN '0' ELSE #{depthSeq} END)
             , #{tssNm}
             , #{strtDt}
             , #{fnhDt}
             , CONVERT(numeric(3, 0), CASE WHEN #{wgvl} = '' THEN '0' ELSE #{wgvl} END)
             , #{saSabunNew}
             , #{vrfYn}
             , #{arslCd}
             , #{yldItmNm}
             , #{yldItmTxt}
             , #{kwdTxt}
             , #{attcFilId}
             , GETDATE()
             , #{userId}
             , GETDATE()
             , #{userId}
             )
          WHEN MATCHED THEN
        UPDATE
           SET WBS_SN       = CONVERT(numeric, #{wbsSn})
             , PID_SN       = CONVERT(numeric, CASE WHEN #{pidSn} = '' THEN NULL ELSE #{pidSn} END)
             , DEPTH        = CONVERT(numeric, CASE WHEN #{depth} = '' THEN '0' ELSE #{depth} END)
             , DEPTH_SEQ    = CONVERT(numeric, CASE WHEN #{depthSeq} = '' THEN '0' ELSE #{depthSeq} END)
             , TSS_NM       = #{tssNm}
             , STRT_DT      = #{strtDt}
             , FNH_DT       = #{fnhDt}
             , WGVL         = CONVERT(numeric(3, 0), CASE WHEN #{wgvl} = '' THEN '0' ELSE #{wgvl} END)
             , SA_SABUN_NEW = #{saSabunNew}
             , VRF_YN       = #{vrfYn}
             , ARSL_CD      = #{arslCd}
             , YLD_ITM_NM   = #{yldItmNm}
             , YLD_ITM_TXT  = #{yldItmTxt}
             , KWD_TXT      = #{kwdTxt}
             , ATTC_FIL_ID  = #{attcFilId}
             , LAST_MDFY_DT = GETDATE()
             , LAST_MDFY_ID = #{userId}
             ;
    ]]>
    </update>



    <!--================== 국책과제_진행_개발비 ==================-->
    <!-- 개발비 조회 -->
    <select id="retrieveNatTssPgsTrwiBudg" resultType="hashmap">
        <![CDATA[
        -- retrieveNatTssPgsTrwiBudg 개발비 조회
        WITH BUDG_LIST AS (
            SELECT ${pivotTitle}
                 , ${pivotSum} AS totSum
                 , EXP_SCN_CD  AS expScnCd
                 , COM_DTL_NM  AS expScnNm
                 , TOT_TITLE   AS totTitle
                 , '계획'      AS gbn
              FROM (SELECT A.EXP_SCN_CD, A.PLN_EXP, B.COM_DTL_NM, C.COM_DTL_NM AS TOT_TITLE
            ]]>
            <if test="choiceYm.equals('yy')">
                         , SUBSTRING(YY_MM, 1, 4) AS YY_MM
            </if>
            <if test="choiceYm.equals('mm')">
                         , YY_MM
            </if>
            <![CDATA[
                      FROM IRIS_TSS_GEN_TRWI_BUDG_LIST A  WITH (NOLOCK)
                         , IRIS_ADM_COM_CD B
                         , IRIS_ADM_COM_CD C
                     WHERE A.EXP_SCN_CD = B.COM_DTL_CD
                       AND B.COM_CD_CD = C.COM_CD_CD
                       AND SUBSTRING(B.COM_DTL_CD, 1, 2) = C.COM_DTL_CD
                       AND A.TSS_CD = #{tssCd}
                       AND B.COM_CD_CD = 'EXP_SCN_CD'
                   ) AS X
             PIVOT (SUM(X.PLN_EXP) FOR YY_MM IN(${pivotTitle})) Y
             UNION ALL
            SELECT ${pivotTitle}
                 , ${pivotSum} AS totSum
                 , EXP_SCN_CD  AS expScnCd
                 , COM_DTL_NM  AS expScnNm
                 , TOT_TITLE   AS totTitle
                 , '실적'      AS gbn
              FROM (SELECT A.EXP_SCN_CD, A.ARSL_EXP, B.COM_DTL_NM, C.COM_DTL_NM AS TOT_TITLE
            ]]>
            <if test="choiceYm.equals('yy')">
                         , SUBSTRING(YY_MM, 1, 4) AS YY_MM
            </if>
            <if test="choiceYm.equals('mm')">
                         , YY_MM
            </if>
            <![CDATA[
                      FROM IRIS_TSS_GEN_TRWI_BUDG_LIST A  WITH (NOLOCK)
                         , IRIS_ADM_COM_CD B
                         , IRIS_ADM_COM_CD C
                     WHERE A.EXP_SCN_CD = B.COM_DTL_CD
                       AND B.COM_CD_CD = C.COM_CD_CD
                       AND SUBSTRING(B.COM_DTL_CD, 1, 2) = C.COM_DTL_CD
                       AND A.TSS_CD = #{tssCd}
                       AND B.COM_CD_CD = 'EXP_SCN_CD'
                   ) AS X
             PIVOT (SUM(X.ARSL_EXP) FOR YY_MM IN(${pivotTitle})) Y
        )
        SELECT ${unionTitle}
             , ROUND(totSum, 0) AS totSum
             , expScnCd
             , expScnNm
             , totTitle
             , gbn
             , 1 AS uniSort
          FROM BUDG_LIST
         UNION ALL
        SELECT ${unionSum}
             , ROUND(SUM(totSum), 0)
             , '00'
             , '합계'
             , '합계'
             , gbn
             , 2
          FROM BUDG_LIST
         GROUP BY gbn
         ORDER BY uniSort, expScnCd, gbn
        ]]>
    </select>


    <!--========================== 국책과제_진행_투자품목목록 ==========================-->
    <!-- 투자품목 조회 -->
    <select id="retrieveNatTssPgsIvst" resultType="hashmap">
    <![CDATA[
    -- retrieveNatTssPgsIvst 투자품목 조회
        SELECT TSS_CD        AS tssCd        --과제코드
             , IVST_IG_SN    AS ivstIgSn     --투자품목일련번호
             , ASST_NO       AS asstNo       --자산번호
             , PUR_ERA       AS purEra       --구입시기(년차)
             , ASST_NM       AS asstNm       --자산명
             , QTY           AS qty          --수량
             , UTM           AS utm          --단위
             , OBT_DT        AS obtDt        --취득일
             , IVST_AMT      AS ivstAmt      --투자금액
             , OBT_AMT       AS obtAmt       --취득가액
             , IVST_AMT - OBT_AMT AS subAmt       --차감가액
             , ATTC_FIL_ID   AS attcFilId    --
             , FRST_RGST_ID  AS frstRgstId   --최초등록자
             , FRST_RGST_DT  AS frstRgstDt   --최초등록일시
             , LAST_MDFY_ID  AS lastMdfyId   --최종수정자
             , LAST_MDFY_DT  AS lastMdfyDt   --최종수정일시
          FROM IRIS_TSS_NAT_PLCY_IVST_IG  /*국책투자품목*/
         WHERE TSS_CD = #{tssCd}
    ]]>
        <if test="ivstIgSn != null and !ivstIgSn.equals('')">
           AND IVST_IG_SN = #{ivstIgSn}
        </if>
    </select>


    <!-- 투자품목 저장 -->
    <insert id="insertNatTssPgsIvst">
    <![CDATA[
    -- insertNatTssPgsIvst 투자품목 저장
    	INSERT
		  INTO IRIS_TSS_NAT_PLCY_IVST_IG  /*국책투자품목*/
		     ( TSS_CD        --과제코드
		     , IVST_IG_SN    --투자품목일련번호
		     , ASST_NO       --자산번호
		     , PUR_ERA       --구입시기(년차)
		     , ASST_NM       --자산명
		     , QTY           --수량
		     , UTM           --단위
		     , OBT_DT        --취득일
		     , IVST_AMT      --투자금액
		     , OBT_AMT       --취득가액
		     , ATTC_FIL_ID   --
		     , FRST_RGST_ID  --최초등록자
		     , FRST_RGST_DT  --최초등록일시
		     , LAST_MDFY_ID  --최종수정자
		     , LAST_MDFY_DT  --최종수정일시
		     )
		SELECT #{tssCd}
		     , IVST_IG_SN
		     , ASST_NO
		     , PUR_ERA
		     , ASST_NM
		     , QTY
		     , UTM
		     , OBT_DT
		     , IVST_AMT
		     , OBT_AMT
		     , CASE WHEN #{batType} = '01' THEN NULL ELSE ATTC_FIL_ID END
		     , #{userId}
             , GETDATE()
             , #{userId}
             , GETDATE()
          FROM IRIS_TSS_NAT_PLCY_IVST_IG
         WHERE TSS_CD = #{pgTssCd}
    ]]>
    </insert>


    <!-- 투자품목 저장 -->
    <update id="updateNatTssPgsIvst">
    <![CDATA[
    -- updateNatTssPgsIvst 투자품목 저장
         MERGE IRIS_TSS_NAT_PLCY_IVST_IG A  /*국책투자품목*/
         USING (SELECT #{tssCd} AS TSS_CD, CONVERT(numeric, CASE WHEN #{ivstIgSn} = '' THEN NULL ELSE #{ivstIgSn} END) AS IVST_IG_SN) B
            ON A.TSS_CD     = B.TSS_CD
           AND A.IVST_IG_SN = B.IVST_IG_SN
          WHEN NOT MATCHED THEN
        INSERT
             ( TSS_CD        --과제코드
             , IVST_IG_SN    --투자품목일련번호
             , ASST_NO       --자산번호
             , PUR_ERA       --구입시기(년차)
             , ASST_NM       --자산명
             , QTY           --수량
             , UTM           --단위
             , OBT_DT        --취득일
             , IVST_AMT      --투자금액
             , OBT_AMT       --취득가액
             , ATTC_FIL_ID   --
             , FRST_RGST_ID  --최초등록자
             , FRST_RGST_DT  --최초등록일시
             , LAST_MDFY_ID  --최종수정자
             , LAST_MDFY_DT  --최종수정일시
             )
        VALUES
             ( #{tssCd}
             , (SELECT ISNULL(MAX(X.IVST_IG_SN), 0) + 1 FROM IRIS_TSS_NAT_PLCY_IVST_IG X WHERE X.TSS_CD = #{tssCd})
             , #{asstNo}
             , #{purEra}
             , #{asstNm}
             , CONVERT(numeric, CASE WHEN #{qty} = '' THEN NULL ELSE #{qty} END)
             , #{utm}
             , #{obtDt}
             , CONVERT(numeric, CASE WHEN #{ivstAmt} = '' THEN NULL ELSE #{ivstAmt} END)
             , CONVERT(numeric, CASE WHEN #{obtAmt} = '' THEN NULL ELSE #{obtAmt} END)
             , #{attcFilId}
             , #{userId}
             , GETDATE()
             , #{userId}
             , GETDATE()
             )
          WHEN MATCHED THEN
        UPDATE
           SET ASST_NO      = #{asstNo}
             , PUR_ERA      = #{purEra}
             , ASST_NM      = #{asstNm}
             , QTY          = CONVERT(numeric, CASE WHEN #{qty} = '' THEN NULL ELSE #{qty} END)
             , UTM          = #{utm}
             , OBT_DT       = #{obtDt}
             , IVST_AMT     = CONVERT(numeric, CASE WHEN #{ivstAmt} = '' THEN NULL ELSE #{ivstAmt} END)
             , OBT_AMT      = CONVERT(numeric, CASE WHEN #{obtAmt} = '' THEN NULL ELSE #{obtAmt} END)
             , ATTC_FIL_ID  = #{attcFilId}
             , FRST_RGST_ID = #{userId}
             , FRST_RGST_DT = GETDATE()
             , LAST_MDFY_ID = #{userId}
             , LAST_MDFY_DT = GETDATE()
             ;
    ]]>
    </update>


    <!-- 투자품목 삭제 -->
    <delete id="deleteNatTssPgsIvst">
    <![CDATA[
    -- deleteNatTssPgsIvst 투자품목 삭제
        DELETE
          FROM IRIS_TSS_NAT_PLCY_IVST_IG  /*국책투자품목*/
         WHERE TSS_CD     = #{tssCd}
           AND IVST_IG_SN = #{ivstIgSn}
    ]]>
    </delete>



    <!--========================== 국책과제_진행_연구비카드 ==========================-->
    <!-- 연구비카드 조회 -->
    <select id="retrieveNatTssPgsCrd" resultType="hashmap">
    <![CDATA[
    -- retrieveNatTssPgsCrd 연구비카드 조회
        select  A.TSS_CD            AS tssCd          --과제코드
			  , a.RSST_EXP_CDCD_SN  AS rsstExpCdcdSn  --연구비카드일련번호
			  , b.sa_name           as saUserName
			  , b.sa_jobx_name		as saJobxName
			  , a.CDCD_NM           AS cdcdNm         --카드사
			  , SUBSTRING(a.CDCD_NO, 1, 5)+'****-****'+SUBSTRING(a.CDCD_NO, 15, 5) AS cdcdNo
			  , SUBSTRING(a.CDCD_NO, 1, 4)  AS cdcdNo1
              , SUBSTRING(a.CDCD_NO, 6, 4)  AS cdcdNo2
              , SUBSTRING(a.CDCD_NO, 11, 4) AS cdcdNo3
              , SUBSTRING(a.CDCD_NO, 16, 4) AS cdcdNo4
			  , a.I_YYMM            AS iYymm          --발급년월
			  , a.RTRN_DT           AS rtrnDt         --반납일
			  , a.REM_TXT           AS remTxt         --비고
			  , a.IVST_AMT          AS ivstAmt        --투자금액
		from   IRIS_TSS_NAT_PLCY_RSST_EXP_CDCD a
		       inner join IRIS_SSO_USER b
			   on b.sa_sabun_new = a.sa_sabun_new
		where  1=1
    ]]>
        <if test="tssCd != null and !tssCd.equals('')">
           AND A.TSS_CD = (select  CASE WHEN A.TSS_SCN_CD = 'N'
						             	THEN (SELECT X.TSS_CD FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG' AND X.TSS_NOS_ST = A.TSS_NOS_ST)
						             	ELSE  (SELECT X.TSS_CD FROM IRIS_TSS_MGMT_MST X WHERE X.PK_WBS_CD = A.PK_WBS_CD AND X.PGS_STEP_CD = 'PG') END  AS pgTssCd --진행과제코드
						    FROM IRIS_TSS_MGMT_MST A /*과제관리마스터*/
						          LEFT JOIN IRIS_PRJ_RSST_MST B  /*프로젝트연구마스터*/
						            ON A.PRJ_CD = B.PRJ_CD
						         WHERE A.TSS_CD =  #{tssCd}
					       )
        </if>
        <if test="rsstExpCdcdSn != null and !rsstExpCdcdSn.equals('')">
           AND A.RSST_EXP_CDCD_SN = #{rsstExpCdcdSn}
        </if>
    </select>


    <!-- 연구비카드 저장 -->
    <insert id="insertNatTssPgsCrd">
    <![CDATA[
    -- insertNatTssPgsCrd 연구비카드 저장
    	INSERT
		  INTO IRIS_TSS_NAT_PLCY_RSST_EXP_CDCD
		     ( TSS_CD             --과제코드
		     , RSST_EXP_CDCD_SN   --연구비카드일련번호
		     , sa_sabun_new       --사번
		     , dept_code          --소속
		     , sa_func            --직급
		     , RTRN_DT            --반납일
		     , CDCD_NM            --카드사
		     , CDCD_NO            --카드번호
		     , I_YYMM             --발급년월
		     , IVST_AMT           --투자금액
		     , REM_TXT            --비고
		     , FRST_RGST_DT       --최초등록일시
		     , FRST_RGST_ID       --최초등록자
		     , LAST_MDFY_DT       --최종수정일시
		     , LAST_MDFY_ID       --최종수정자
		     )
		SELECT #{tssCd}
		     , RSST_EXP_CDCD_SN
		     , sa_sabun_new
		     , dept_code
		     , sa_func
		     , RTRN_DT
		     , CDCD_NM
		     , CDCD_NO
		     , I_YYMM
		     , IVST_AMT
		     , REM_TXT
             , GETDATE()
             , #{userId}
             , GETDATE()
		     , #{userId}
          FROM IRIS_TSS_NAT_PLCY_RSST_EXP_CDCD
         WHERE TSS_CD = #{pgTssCd}
    ]]>
    </insert>


    <!-- 연구비카드 저장 -->
    <update id="updateNatTssPgsCrd">
    <![CDATA[
    -- updateNatTssPgsCrd 연구비카드 저장
         MERGE IRIS_TSS_NAT_PLCY_RSST_EXP_CDCD A  /*국책연구비카드*/
         USING (SELECT #{tssCd} AS TSS_CD, CONVERT(numeric, CASE WHEN #{rsstExpCdcdSn} = '' THEN NULL ELSE #{rsstExpCdcdSn} END) AS RSST_EXP_CDCD_SN) B
            ON A.TSS_CD           = B.TSS_CD
           AND A.RSST_EXP_CDCD_SN = B.RSST_EXP_CDCD_SN
          WHEN NOT MATCHED THEN
        INSERT
             ( TSS_CD            --과제코드
             , RSST_EXP_CDCD_SN  --연구비카드일련번호
             , SA_SABUN_NEW      --사번
             , DEPT_CODE         --소속
             , SA_FUNC           --직급
             , RTRN_DT           --반납일
             , CDCD_NM           --카드사
             , CDCD_NO           --카드번호
             , I_YYMM            --발급년월
             , IVST_AMT          --투자금액
             , REM_TXT           --비고
             , FRST_RGST_DT      --최초등록일시
             , FRST_RGST_ID      --최초등록자
             , LAST_MDFY_DT      --최종수정일시
             , LAST_MDFY_ID      --최종수정자
             )
        VALUES
             ( #{tssCd}
             , (SELECT ISNULL(MAX(X.RSST_EXP_CDCD_SN), 0) + 1 FROM IRIS_TSS_NAT_PLCY_RSST_EXP_CDCD X WHERE X.TSS_CD = #{tssCd})
             , #{saSabunNew}
             , #{deptCode}
             , #{saFunc}
             , #{rtrnDt}
             , #{cdcdNm}
             , #{cdcdNo}
             , #{iYymm}
             , CONVERT(numeric, CASE WHEN #{ivstAmt} = '' THEN NULL ELSE #{ivstAmt} END)
             , #{remTxt}
             , GETDATE()
             , #{userId}
             , GETDATE()
             , #{userId}
             )
          WHEN MATCHED THEN
        UPDATE
           SET A.SA_SABUN_NEW     = #{saSabunNew}
             , A.DEPT_CODE        = #{deptCode}
             , A.SA_FUNC          = #{saFunc}
             , A.RTRN_DT          = #{rtrnDt}
             , A.CDCD_NM          = #{cdcdNm}
             , A.CDCD_NO          = #{cdcdNo}
             , A.I_YYMM           = #{iYymm}
             , A.IVST_AMT         = CONVERT(numeric, CASE WHEN #{ivstAmt} = '' THEN NULL ELSE #{ivstAmt} END)
             , A.REM_TXT          = #{remTxt}
             , A.LAST_MDFY_DT     = GETDATE()
             , A.LAST_MDFY_ID     = #{userId}
             ;
    ]]>
    </update>


    <!-- 연구비카드 삭제 -->
    <delete id="deleteNatTssPgsCrd">
    <![CDATA[
    -- deleteNatTssPgsCrd 연구비카드 삭제
        DELETE
          FROM IRIS_TSS_NAT_PLCY_RSST_EXP_CDCD  /*국책연구비카드*/
         WHERE TSS_CD           = #{tssCd}
           AND RSST_EXP_CDCD_SN = #{rsstExpCdcdSn}
    ]]>
    </delete>



    <!--========================== 국책과제_진행_변경이력 ==========================-->
    <!-- 변경이력 목록 조회 -->
    <select id="retrieveNatTssPgsAltrHist" resultType="hashmap">
    <![CDATA[
    -- retrieveNatTssPgsAltrHist 변경이력 목록 조회
        SELECT A.TSS_CD             AS tssCd
             , A.WBS_CD             AS wbsCd
             , A.PK_WBS_CD          AS pkWbsCd
             , C.PRVS               AS prvs
             , C.ALTR_PRE           AS altrPre
             , C.ALTR_AFT           AS altrAft
             , B.ALTR_RSON_TXT      AS altrRsonTxt
             , B.ADD_RSON_TXT       AS addRsonTxt
             , B.ALTR_ATTC_FIL_ID   AS altrAttcFilId
             , ISNULL(CONVERT(NVARCHAR, D.APPROVER_PROCESSDATE, 23), CONVERT(NVARCHAR, C.LAST_MDFY_DT, 23)) AS altrApprDd
          FROM IRIS_TSS_MGMT_MST A
	             INNER JOIN IRIS_TSS_NAT_PLCY_SMRY B
	             ON A.TSS_CD = B.TSS_CD
	             INNER JOIN IRIS_TSS_SMRY_ALTR_LIST C
	             ON  A.TSS_CD = C.TSS_CD
	             LEFT OUTER JOIN IRIS_COM_ITG_RDCS D
	             ON A.TSS_CD = D.AFFR_CD
	             AND D.APRDOCSTATE = 'A02' --고정값: A02(승인)
         WHERE A.PK_WBS_CD =  #{pkWbsCd}
           AND A.PGS_STEP_CD = 'AL' --고정값: AL(변경)
           AND A.TSS_ST = '104'
    ]]>
    </select>



    <!--========================== 국책과제_진행_참여연구원 ==========================-->
    <!-- 참여연구원 조회 -->
    <select id="retrieveNatTssPgsPtcRsstMbr" resultType="hashmap">
    <![CDATA[
    -- retrieveNatTssPgsPtcRsstMbr 참여연구원 조회
        SELECT DISTINCT
               PTC_RSST_MBR_SN AS ptcRsstMbrSn --참여연구원일련번호
             , SA_SABUN_NEW    AS saSabunNew   --연구원사번
             , DEPT_CODE       AS deptCode     --소속
             , PTC_STRT_DT     AS ptcStrtDt    --참여시작일
             , PTC_FNH_DT      AS ptcFnhDt     --참여종료일
             , PTC_ROLE        AS ptcRole      --참여역할
             , PTC_ROLE_DTL    AS ptcRoleDtl   --참여역할상세
             , PTC_PRO         AS ptcPro       --참여율
             , ISNULL(dbo.fn_getNameOnTssPgsStep(TSS_CD, 'USER', SA_SABUN_NEW) , SA_SABUN_NAME) AS saUserName --연구원명
             , ISNULL(dbo.fn_getNameOnTssPgsStep(TSS_CD, 'DEPT', DEPT_CODE) , DEPT_NAME) AS deptName   --소속명
             , dbo.fn_getComDtlNm('PTC_ROLE', PTC_ROLE) AS ptcRoleNm  --참여역할명
             , #{_userId}      AS userId
          FROM IRIS_TSS_PTC_RSST_MBR  /*과제참여연구원*/
          WHERE TSS_CD IN (SELECT MAX(TSS_CD)
						  FROM IRIS_TSS_MGMT_MST  X
						  WHERE X.PK_WBS_CD = #{pkWbsCd}
						  AND   X.TSS_NOS_ST =  (SELECT MAX(Y.TSS_NOS_ST)
						                         FROM IRIS_TSS_MGMT_MST Y
												 WHERE Y.PK_WBS_CD = #{pkWbsCd}
												)
						AND   X.PGS_STEP_CD NOT IN ('CM', 'DC')

						  )

         ORDER BY saUserName
    ]]>
    </select>

     <!-- 변경이력 상세리스트 조회  -->
    <select id="retrieveNatTssAltrList"  resultType="hashmap">
    -- retrieveNatTssAltrList 변경이력 상세리스트 조회
     SELECT    A.TSS_CD       AS tssCd      --과제코드
             , A.ALTR_SN      AS altrSn     --변경일련번호
             , A.PRVS         AS prvs       --항목
             , A.ALTR_PRE     AS altrPre    --변경전
             , A.ALTR_AFT     AS altrAft    --변경후
             , ISNULL(CONVERT(NVARCHAR, D.APPROVER_PROCESSDATE, 23), CONVERT(NVARCHAR, A.LAST_MDFY_DT, 23)) AS altrApprDd
             , #{_userId}   AS userId
          FROM IRIS_TSS_SMRY_ALTR_LIST A /*변경개요 목록*/
         	   LEFT OUTER JOIN IRIS_COM_ITG_RDCS D
          		ON A.TSS_CD = D.AFFR_CD
			   	AND D.APRDOCSTATE = 'A02' --고정값: A02(승인)
         WHERE TSS_CD = #{tssCd}
    </select>

	<!-- 변경이력 상세 조회 -->
     <select id="natTssAltrDetailSearch"  resultType="hashmap">
     -- natTssAltrDetailSearch 변경이력 상세 조회
     SELECT    A.TSS_CD       		AS tssCd      		--과제코드
             , A.ALTR_RSON_TXT      AS altrRsonTxt      --변경사유
             , A.ADD_RSON_TXT     	AS addRsonTxt    	--추가사유
             , A.ALTR_ATTC_FIL_ID   AS attcFilId    	--첨부파일
          FROM IRIS_TSS_NAT_PLCY_SMRY A
         WHERE A.TSS_CD = #{tssCd}
    </select>


</mapper>
