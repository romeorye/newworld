<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="prj.grs">
    <select id="retrieveGrsReqList" resultType="hashmap">
        <![CDATA[
		/*retrieveGrsReqList GRS 평가 목록*/
    SELECT *
      , (SELECT COM_DTL_NM FROM IRIS_ADM_COM_CD WHERE COM_CD_CD =  'TSS_ST' AND COM_DTL_CD = tssSt) AS tssStNm
      , (SELECT COM_DTL_NM FROM IRIS_ADM_COM_CD WHERE COM_CD_CD =  'GRS_ST' AND COM_DTL_CD = tssSt) AS grsStNm
      , iif(tssSt='101', '1', '0') AS isReq
      , iif((stdCnt > 0 AND tssSt!='101')   , '1', '0') AS isConfirm
      , iif((frstRgstDt!=lastMdfyDt AND tssSt='101')   , '1', '0') AS isTmp
    FROM(
               SELECT m.tss_scn_cd       tssScnCd
                 , dbo.fn_getComDtlNm('TSS_SCN_CD',m.tss_scn_cd) AS tssScnNm
                 , iif(m.PGS_STEP_CD='PL' AND (select count(*) from IRIS_TSS_MGMT_MST where PK_WBS_CD = m.pk_wbs_cd)=1,'SEED-'+m.wbs_cd  , m.wbs_cd)           wbsCd
                 , m.pk_wbs_cd           pkWbsCd
                 , m.tss_nm           tssNm
                 ,isnull(m.PRJ_NM, dbo.fn_getPrjName(m.PRJ_CD)) as prjNm
                 , m.BIZ_DPT_CD	      bizDptCd
                 , dbo.fn_getComDtlNm('BIZ_DPT_CD',m.biz_dpt_cd) AS bizDptNm
                ,m.SA_SABUN_NEW  as leaderCd
                ,isnull(m.SA_SABUN_NAME,(select  u.sa_name from IRIS_SSO_USER u where u.sa_sabun_new=m.SA_SABUN_NEW)) as leaderNm
                ,m.DEPT_CODE as deptCd
                 , g.dlbr_crgr 									 AS dlbrCrgr
                 --, dbo.fn_getSabunName(g.dlbr_crgr	) 			 AS dlbrCrgrNm		--심의 담당자
                 , g.sa_sabun_name AS dlbrCrgrNm       --심의 담당자
                 ,m.TSS_STRT_DD + '~' + TSS_FNH_DD as tssDd
                 , g.dlbr_parr_dt     							 AS dlbrParrDt
                 , g.grs_ev_st	   	 							 AS grsEvSt		 	--P1:초기,P2:최종,M:변경
                 , m.PGS_STEP_CD  as pgsStepCd   --진행단계코드 PL : 계획 , PG:진행 , CM:완료 , AL: 변경 , DC:중단
                 , dbo.fn_getComDtlNm('GRS_EV_ST',g.grs_ev_st)   AS grsEvStNm
                 , m.tss_st           							 AS tssSt
                 -- , dbo.fn_getComDtlNm('TSS_ST',m.tss_st) 		 AS tssStNm
                 ,(select count(*) from IRIS_GRS_EV_STD_RSLT_RGST where TSS_CD = g.TSS_CD and TSS_CD_SN = g.TSS_CD_SN) as stdCnt
                 , m.tss_cd tssCd
                 , g.tss_cd_sn tssCdSn
                 , g.grs_ev_sn									 AS grsEvSn
                 , g.frst_rgst_id								 AS frstRgstId
                , g.frst_rgst_dt								 AS frstRgstDt
                , g.last_mdfy_dt								 AS lastMdfyDt
                 ,iif((select count(*) from IRIS_GRS_MGMT_MST where TSS_CD= m.tss_cd)>0,'1','0') AS isFirstGrs
                 , right(m.PK_WBS_CD, 5) as sortNum
               FROM iris_grs_ev_rslt_rgst g
                 INNER JOIN iris_tss_mgmt_mst m
                   ON 	g.tss_cd = m.tss_cd
               UNION
               SELECT m.tss_scn_cd       tssScnCd
                 , dbo.fn_getComDtlNm('TSS_SCN_CD',m.tss_scn_cd) AS tssScnNm
                 , iif(m.PGS_STEP_CD='PL' AND (select count(*) from IRIS_GRS_MGMT_MST where PK_WBS_CD = m.pk_wbs_cd)=1,'SEED-'+m.wbs_cd  , m.wbs_cd)           wbsCd
                 , m.pk_wbs_cd           pkWbsCd
                 , m.tss_nm           tssNm
                 ,isnull(m.PRJ_NM, dbo.fn_getPrjName(m.PRJ_CD)) as prjNm
                 , m.BIZ_DPT_CD	      bizDptCd
                 , dbo.fn_getComDtlNm('BIZ_DPT_CD',m.biz_dpt_cd) AS bizDptNm
                ,m.SA_SABUN_CD  as leaderCd
                ,m.SA_SABUN_NM as leaderNm
                ,m.DEPT_CD as deptCd
                 , g.dlbr_crgr 									 AS dlbrCrgr
                 --, dbo.fn_getSabunName(g.dlbr_crgr	) 			 AS dlbrCrgrNm		--심의 담당자
                 , g.sa_sabun_name AS dlbrCrgrNm       --심의 담당자
                 ,m.TSS_STRT_DD + '~' + TSS_FNH_DD as tssDd
                 , g.dlbr_parr_dt     							 AS dlbrParrDt
                 , g.grs_ev_st	   	 							 AS grsEvSt		 	--P1:초기,P2:최종,M:변경
                 , m.PGS_STEP_CD  as pgsStepCd   --진행단계코드 PL : 계획 , PG:진행 , CM:완료 , AL: 변경 , DC:중단
                 , dbo.fn_getComDtlNm('GRS_EV_ST',g.grs_ev_st)   AS grsEvStNm
                 , m.tss_st           							 AS tssSt
                 -- , dbo.fn_getComDtlNm('TSS_ST',m.tss_st) 		 AS tssStNm
                 ,(select count(*) from IRIS_GRS_EV_STD_RSLT_RGST where TSS_CD = g.TSS_CD and TSS_CD_SN = g.TSS_CD_SN) as stdCnt
                 , m.tss_cd tssCd
                 , g.tss_cd_sn tssCdSn
                 , g.grs_ev_sn									 AS grsEvSn
                 , g.frst_rgst_id								 AS frstRgstId
                , g.frst_rgst_dt								 AS frstRgstDt
                , g.last_mdfy_dt								 AS lastMdfyDt
                 ,iif((select count(*) from IRIS_GRS_MGMT_MST where TSS_CD= m.tss_cd)>0,'1','0') AS isFirstGrs
                 , right(m.PK_WBS_CD, 5) as sortNum
               FROM iris_grs_ev_rslt_rgst g
                 INNER JOIN IRIS_GRS_MGMT_MST m
                   ON 	g.tss_cd = m.tss_cd
             ) a
		 ]]>
        WHERE a.tssSt >= '101'
        --AND a.tss_cd in ( SELECT MAX(TSS_CD) FROM iris_grs_ev_rslt_rgst where subString(TSS_CD,0,7) = a.PK_WBS_CD)
        <if test="tssRoleType == 'null' or tssRoleType.equals('') or tssRoleType.equals('S1')">
            AND 1 = 1
        </if>
        <if test="tssRoleType != 'null' and tssRoleType.equals('S2')">
            AND (1 = 2 OR a.leaderCd = #{_userSabun})
        </if>
        <if test="tssRoleType != 'null' and tssRoleType.equals('S3')">
            AND
            (
              dbo.fn_getUpperDeptCd(a.deptCd) = dbo.fn_getUpperDeptCd(#{_userDept})  -- 동일 조직
              OR a.dlbrCrgr = #{_userSabun} OR a.frstRgstId = #{_userId}                      --  심의담당자
            )
        </if>
        <if test="bizDtpCd != null and bizDtpCd != 'null' and bizDtpCd != ''">
            AND a.bizDptCd = #{bizDtpCd}
        </if>
        <if test="tssScnCd != null and tssScnCd != 'null' and tssScnCd != ''">
            AND a.tssScnCd = #{tssScnCd}
        </if>
        <if test="wbsCd != null and wbsCd != 'null' and wbsCd != ''">
            AND a.wbsCd like '%'+#{wbsCd}+'%'
        </if>
        <if test="tssNm != null and tssNm != 'null' and tssNm != ''">
            AND a.tssNm like '%'+#{tssNm}+'%'
        </if>
        <if test="prjNm != null and prjNm != 'null' and prjNm != ''">
            AND a.prjNm like '%'+#{prjNm}+'%'
        </if>
        <if test="dlbrCrgrNm != null  and dlbrCrgrNm != 'null' and dlbrCrgrNm != ''">
            AND a.dlbrCrgrNm like '%'+#{dlbrCrgrNm}+'%'
        </if>
        <if test="grsEvSt != null and grsEvSt != 'null' and grsEvSt != ''">
            AND a.grsEvSt = #{grsEvSt}
        </if>
        <if test="tssSt != null and tssSt != 'null' and tssSt != ''">
            AND a.tssSt = #{tssSt}
        </if>

        
        ORDER BY  lastMdfyDt desc, sortNum  desc 
    </select>


    <!-- GRS Todo 조회 -->
    <select id="retrieveGrsTodo" resultType="hashmap">
		<![CDATA[
--retrieveGrsTodo GRS Todo 조회
        SELECT
            TODO_SYS_CD     AS todoSysCd        --시스템 코드
            ,
            TODO_TYPE_CD    AS todoTypeCd       --ToDo 유형 코드
            ,
            TODO_REQ_NO     AS todoReqNo        --연계시스템 내 문서 ID
            ,
            TODO_REQ_NM     AS todoReqNm        --ToDo 문서제목
            ,
            TODO_REQ_EMP_NO AS todoReqEmpNo     --ToDo 등록자 ID
            ,
            TODO_REQ_DT     AS todoReqDt        --등록시각
            ,
            TODO_END_DT     AS todoEndDt        --마감시각
            ,
            TODO_STATUS     AS todoStatus       --처리상황명
            ,
            TODO_EMP_NO     AS todoEmpNo        --처리담당자 ID
            ,
            TODO_SGN_EMP_NO AS todoSgnEmpNo     --수임담당자 ID
            ,
            TODO_RESULT     AS todoResult       --완료여부
            ,
            TSS_CD          AS tssCd            --
            ,
            TSS_CD_SN       AS tssCdSn --
        FROM VW_GRS_TODO
        WHERE TODO_REQ_NO = #{MW_TODO_REQ_NO}
        ]]>
	</select>

    <select id="selectIsBeforGrs" resultType="String">
        SELECT COUNT(*)  FROM IRIS_GRS_MGMT_MST WHERE TSS_CD = #{tssCd}
    </select>

    <!-- GRS결과요청 조회 -->
    <select id="retrieveGrsEvRslt" resultType="hashmap">
		<![CDATA[
--retrieveGrsEvRslt GRS 평가 상세
        SELECT
            A.PRJ_CD                                                                 AS prjCd      --프로젝트코드
          , A.TSS_ATTR_CD as  tssAttrCd -- 제품구분
          ,C.PRJ_NM                                                                 AS prjNm      --프로젝트명
            ,
            A.BIZ_DPT_CD                                                             AS bizDptCd   --사업부문코드
            ,
            dbo.fn_getComDtlNm('BIZ_DPT_CD', A.BIZ_DPT_CD)                           AS bizDptNm,
            A.TSS_ATTR_CD                                                            AS tssAttrCd  --과제속성코드
            ,
            dbo.fn_getComDtlNm('TSS_ATTR_CD', A.TSS_ATTR_CD)                         AS tssAttrNm,
            A.TSS_NM                                                                 AS tssNm      --과제명
            ,
            A.TSS_STRT_DD+' ~ '+A.TSS_FNH_DD                            AS tssDd      --과제기간
            ,
            B.GRS_EV_ST                                                              AS grsEvSt    --GRS상태
            ,
            dbo.fn_getComDtlNm('GRS_EV_ST', B.GRS_EV_ST)                             AS grsEvStNm,
            B.GRS_EV_SN                                                              AS grsEvSn    --GRS평가표
            ,
            (SELECT sm.EV_SBC_NM
             FROM IRIS_GRS_EV_STD_MGMT sm
             WHERE sm.GRS_EV_SN = B.GRS_EV_SN AND sm.GRS_EV_SEQ = 0)                 AS grsEvSnNm    --GRS평가표
            ,
            B.DLBR_PARR_DT                                                           AS dlbrParrDt --심의예정일

            ,
            B.DLBR_CRGR                                                              AS dlbrCrgr   --심의담당자
            --, dbo.fn_getSabunName(B.DLBR_CRGR	) AS dlbrCrgrNm
            ,
            b.sa_sabun_name                                                          AS dlbrCrgrNm       --심의 담당자
            ,
            A.TSS_CD                                                                 AS tssCd      --과제코드
            ,
            B.TSS_CD_SN                                                              AS tssCdSn,
            A.PGS_STEP_CD                                                            AS pgsStepCd  --진행단계코드
            ,
            A.TSS_SCN_CD                                                             AS tssScnCd   --과제구분코드
            ,
            B.EV_TITL                                                                AS evTitl            --평가제목
            ,
            B.CFRN_ATDT_CD_TXT                                                       AS cfrnAtdtCdTxt    --회의참석자사번
            ,
            (select stuff((select ',' +
                                  sa_name
                           from IRIS_SSO_USER
                           where sa_sabun_new in (SELECT value
                                                  FROM STRING_SPLIT(convert(nvarchar(4000), B.CFRN_ATDT_CD_TXT), ',')
                                                  WHERE RTRIM(value) <> '')
                           order by sa_name
                           FOR XML PATH ('')), 1, 1, ''))                            AS cfrnAtdtCdTxtNm --회의참석자명
            ,
            B.COMM_TXT                                                               AS commTxt            --Comments
            ,
            B.ATTC_FIL_ID                                                            AS attcFilId        --첨부파일
            ,
            A.TSS_ST                                                                 AS tssSt --과제상태코드
            ,IIF((SELECT COUNT(*)
                 FROM IRIS_GRS_EV_STD_RSLT_RGST
                 WHERE TSS_CD = B.TSS_CD AND TSS_CD_SN = B.TSS_CD_SN) > 0, 'Y', 'N') AS saveYN
            ,IIF(((SELECT COUNT(*)
                 FROM IRIS_GRS_EV_STD_RSLT_RGST
                 WHERE TSS_CD = B.TSS_CD AND TSS_CD_SN = B.TSS_CD_SN) > 0 AND A.TSS_ST!='101'), '1', '0') AS  isConfirm
            ,A.TSS_STRT_DD AS tssStrtDd
            ,A.TSS_FNH_DD AS tssFnhDd
            ]]>
        <choose>
            <when test="beforGrs == 1">
                ,A.SMR_SMRY_TXT AS smrSmryTxt
                ,A.SMR_GOAL_TXT AS smrGoalTxt
                ,A.NPROD_SALS_PLN_Y AS nprodSalsPlnY
                ,A.CTY_OT_PLN_M AS ctyOtPlnM
            </when>
        </choose>
            <![CDATA[
        FROM
            ]]>
        <choose>
            <when test="beforGrs == 1">
                IRIS_GRS_MGMT_MST A
            </when>
            <otherwise>
                IRIS_TSS_MGMT_MST A
            </otherwise>
        </choose>
        <![CDATA[
--             IRIS_TSS_MGMT_MST A  /*과제관리마스터*/

            left JOIN IRIS_PRJ_RSST_MST C  /*프로젝트연구마스터*/
                ON A.PRJ_CD = C.PRJ_CD
            LEFT JOIN IRIS_GRS_EV_RSLT_RGST B  /*GRS평가결과등록*/
                ON A.TSS_CD = B.TSS_CD
                   AND B.TSS_CD_SN = #{tssCdSn}
        WHERE A.TSS_CD = #{tssCd}
        ]]>
	</select>


    <select id="retrieveGrsReqDtlLst" resultType="hashmap">
        <![CDATA[
--retrieveGrsReqDtlLst GRS 평가표
        SELECT
            sm.GRS_EV_SN                           AS grsEvSn               -- GRS 일련번호
            ,
            sm.GRS_EV_SEQ                          AS grsEvSeq               -- GRS  순번
            ,
            sm.EV_PRVS_NM_1                        AS evPrvsNm_1           -- 평가항목명1
            ,
            sm.EV_PRVS_NM_2                        AS evPrvsNm_2           -- 평가항목명2
            ,
            sm.EV_CRTN_NM                          AS evCrtnNm             -- 평가기준명
            ,
            sm.EV_SBC_TXT                          AS evSbcTxt             -- 평가내용
            ,
            sm.DTL_SBC_TITL_1                      AS dtlSbcTitl_1         -- 상세내용1
            ,
            sm.DTL_SBC_TITL_2                      AS dtlSbcTitl_2         -- 상세내용2
            ,
            sm.DTL_SBC_TITL_3                      AS dtlSbcTitl_3         -- 상세내용3
            ,
            sm.DTL_SBC_TITL_4                      AS dtlSbcTitl_4         -- 상세내용4
            ,
            sm.DTL_SBC_TITL_5                      AS dtlSbcTitl_5         -- 상세내용5
            ,
            sm.WGVL                                AS wgvl                 -- 가중치
            ,
            sm.GRS_Y                               AS grsY                 -- 년도
            ,
            sm.GRS_TYPE                            AS grsType              -- 유형
            ,
            sm.EV_SBC_NM                           AS evSbcNm              -- 템플릿명
            ,
            sm.USE_YN                              AS useYn                -- 사용여부
            ,
            sm.FRST_RGST_DT                        AS frstRgstDt           -- 최초등록일시
            ,
            sm.FRST_RGST_ID                        AS frstRgstId           -- 최초등록자
            ,
            sm.LAST_MDFY_DT                        AS lastMdfyDt           -- 최종수정일시
            ,
            sm.LAST_MDFY_ID                        AS lastMdfyId           -- 최종수정자
            ,
            (SELECT (srr.EV_SCR)
             FROM iris_grs_ev_std_rslt_rgst srr
             WHERE sm.GRS_EV_SN = srr.GRS_EV_SN
                   AND sm.GRS_EV_SEQ = srr.GRS_EV_SEQ
                   AND srr.TSS_CD = #{tssCd}
                   AND srr.tss_cd_sn = #{tssCdSn}) AS evScr
        FROM IRIS_GRS_EV_STD_MGMT sm
		 ]]>
			WHERE sm.GRS_EV_SN = '${grsEvSn}'
              AND sm.GRS_EV_SEQ != 0

    </select>


    <!-- GRS평가항목 년도 조회 -->
    <select id="retrieveGrsEvStdGrsY" resultType="hashmap">
		<![CDATA[
--retrieveGrsEvStdGrsY GRS평가항목 년도 조회
        SELECT DISTINCT GRS_Y AS grsY -- 년도
        FROM IRIS_GRS_EV_STD_MGMT /*GRS평가표준*/
        WHERE GRS_Y IS NOT NULL
        ]]>
	</select>


    <!-- GRS평가항목 목록 조회 -->
    <select id="retrieveGrsEvStd" resultType="hashmap">
        <![CDATA[
--retrieveGrsEvStd GRS평가항목 목록 조회
        SELECT GRS_EV_SN      AS grsEvSn     --평가표일련번호
             , GRS_EV_SEQ     AS grsEvSeq    --평가SEQ
             , EV_PRVS_NM_1   AS evPrvsNm1   --평가항목명1
             , EV_PRVS_NM_2   AS evPrvsNm2   --평가항목명2
             , EV_CRTN_NM     AS evCrtnNm    --평가기준명
             , EV_SBC_TXT     AS evSbcTxt    --평가내용
             , DTL_SBC_TITL_1 AS dtlSbcTitl1 --상세내용1
             , DTL_SBC_TITL_2 AS dtlSbcTitl2 --상세내용2
             , DTL_SBC_TITL_3 AS dtlSbcTitl3 --상세내용3
             , DTL_SBC_TITL_4 AS dtlSbcTitl4 --상세내용4
             , DTL_SBC_TITL_5 AS dtlSbcTitl5 --상세내용5
             , WGVL           AS wgvl        --가중치
             , GRS_Y          AS grsY        --년도
             , GRS_TYPE       AS grsType     --유형
             , EV_SBC_NM      AS evSbcNm     --템플릿명
             , USE_YN         AS useYn       --사용여부
             , FRST_RGST_DT   AS frstRgstDt  --최초등록일시
             , FRST_RGST_ID   AS frstRgstId  --최초등록자
             , LAST_MDFY_DT   AS lastMdfyDt  --최종수정일시
             , LAST_MDFY_ID   AS lastMdfyId  --최종수정자
          FROM IRIS_GRS_EV_STD_MGMT  /*GRS평가표준*/
         WHERE GRS_EV_SEQ = 0
         AND   USE_YN ='Y'
		 ]]>
        <if test="grsY != null and !grsY.equals('')">
            AND GRS_Y = #{grsY}
        </if>
        <if test="grsType != null and !grsType.equals('')">
            AND GRS_TYPE = #{grsType}
        </if>
        <if test="useYn != null and !useYn.equals('')">
            AND USE_YN = #{useYn}
        </if>
        <if test="evSbcNm != null and !evSbcNm.equals('')">
            AND EV_SBC_NM LIKE '%'+#{evSbcNm}+'%'
        </if>
        order by GRS_Y desc
    </select>


    <!-- GRS평가항목 상세 조회 -->
    <select id="retrieveGrsEvStdDtl" resultType="hashmap">
		<![CDATA[
--retrieveGrsEvStdDtl GRS평가항목 상세 조회
        SELECT
            A.GRS_EV_SN      AS grsEvSn     --평가표일련번호
            ,
            A.GRS_EV_SEQ     AS grsEvSeq    --평가SEQ
            ,
            A.EV_PRVS_NM_1   AS evPrvsNm1   --평가항목명1
            ,
            A.EV_PRVS_NM_2   AS evPrvsNm2   --평가항목명2
            ,
            A.EV_CRTN_NM     AS evCrtnNm    --평가기준명
            ,
            A.EV_SBC_TXT     AS evSbcTxt    --평가내용
            ,
            A.DTL_SBC_TITL_1 AS dtlSbcTitl1 --상세내용1
            ,
            A.DTL_SBC_TITL_2 AS dtlSbcTitl2 --상세내용2
            ,
            A.DTL_SBC_TITL_3 AS dtlSbcTitl3 --상세내용3
            ,
            A.DTL_SBC_TITL_4 AS dtlSbcTitl4 --상세내용4
            ,
            A.DTL_SBC_TITL_5 AS dtlSbcTitl5 --상세내용5
            ,
            A.WGVL           AS wgvl        --가중치
            ,
            B.GRS_Y          AS grsY        --년도
            ,
            B.GRS_TYPE       AS grsType     --유형
            ,
            B.EV_SBC_NM      AS evSbcNm     --템플릿명
            ,
            B.USE_YN         AS useYn --사용여부
        FROM IRIS_GRS_EV_STD_MGMT B  /*GRS평가표준*/
            LEFT JOIN IRIS_GRS_EV_STD_MGMT A  /*GRS평가표준*/
                ON B.GRS_EV_SN = A.GRS_EV_SN
                   AND A.GRS_EV_SEQ != '0'
        WHERE B.GRS_EV_SN = #{grsEvSn}
              AND B.GRS_EV_SEQ = '0'
        ]]>
	</select>


    <!-- GRS평가결과 TODO호출 -->
    <update id="insertGrsEvRsltTodo" parameterType="map">
--insertGrsEvRsltTodo GRS평가결과 TODO호출
        EXEC TODO.dbo.UP_MW_TODO_REQ 'IRI', 'GRS', #{reqNo}, #{reqSabun}
    </update>


    <!-- GRS평가결과 저장 -->
    <insert id="insertGrsEvRslt">
--insertGrsEvRslt GRS평가결과 저장
        <selectKey keyProperty="tssCdSn" resultType="String" order="BEFORE">
            <![CDATA[
            SELECT ISNULL(MAX(X.TSS_CD_SN), 0) + 1
              FROM IRIS_GRS_EV_RSLT_RGST X
             WHERE X.TSS_CD = #{tssCd}
        ]]>
        </selectKey>
        <!-- insertGrsEvRslt -->
        INSERT
        INTO IRIS_GRS_EV_RSLT_RGST /*GRS평가결과등록*/
        ( TSS_CD --과제코드
        , TSS_CD_SN
        , EV_TITL --평가제목
        , DLBR_CRGR --심의담당자
        , DLBR_PARR_DT --심의예정일
        , GRS_EV_ST --GRS상태
        , CFRN_ATDT_CD_TXT --회의참석자코드
        , COMM_TXT --Comments
        , GRS_EV_SN --평가표
        , ATTC_FIL_ID
        , REQ_SABUN --요청자사번
        , REQ_DATE --요청일
        , FRST_RGST_DT --최초등록일시
        , FRST_RGST_ID --최초등록자
        , LAST_MDFY_DT --최종수정일시
        , LAST_MDFY_ID --최종수정자
        , SA_SABUN_NAME
        )
        VALUES
        ( #{tssCd}
        , #{tssCdSn}
        , #{evTitl}
        , #{dlbrCrgr}
        , iif(#{dlbrParrDt} is null,convert(varchar(10), getdate(), 120),#{dlbrParrDt})
        , #{grsEvSt}
        , #{cfrnAtdtCdTxt}
        , #{commTxt}
        , #{grsEvSn}
        , #{attcFilId}
        , iif(#{reqSabun} is null,#{_userSabun},#{reqSabun})
        , GETDATE()
        , GETDATE()
        , #{userId}
        , GETDATE()
        , #{userId}
        , (SELECT sa_name FROM IRIS_SSO_USER X WHERE X.SA_SABUN_NEW = #{dlbrCrgr})
        )
    </insert>


    <!-- GRS평가결과 저장 -->
    <update id="updateGrsEvRslt">
        --updateGrsEvRslt GRS평가결과등록
        MERGE IRIS_GRS_EV_RSLT_RGST A
        USING (SELECT #{tssCd} AS TSS_CD, ISNULL(#{tssCdSn}, 0) AS TSS_CD_SN) B
        ON A.TSS_CD = B.TSS_CD
        AND A.TSS_CD_SN = B.TSS_CD_SN
        WHEN NOT MATCHED THEN
        INSERT
        ( TSS_CD --과제코드
        , TSS_CD_SN
        , EV_TITL --평가제목
        , DLBR_CRGR --심의담당자
        , DLBR_PARR_DT --심의예정일
        <if test="grsEvSt != null and !grsEvSt.equals('')">
            , GRS_EV_ST --GRS상태
        </if>
        , CFRN_ATDT_CD_TXT --회의참석자코드
        , COMM_TXT --Comments
        , GRS_EV_SN --평가표
        , ATTC_FIL_ID -- 첨부화일
        , REQ_SABUN --요청자사번
        , REQ_DATE --요청일
        , FRST_RGST_DT --최초등록일시
        , FRST_RGST_ID --최초등록자
        , LAST_MDFY_DT --최종수정일시
        , LAST_MDFY_ID --최종수정자
        , SA_SABUN_NAME --리더이름
        , DROP_YN
        )
        VALUES
        ( #{tssCd}
        , (SELECT ISNULL(MAX(X.TSS_CD_SN), 0) + 1 FROM IRIS_GRS_EV_RSLT_RGST X WHERE X.TSS_CD = #{tssCd})
        , #{evTitl}
        , #{dlbrCrgr}
        , #{dlbrParrDt}
        <if test="grsEvSt != null and !grsEvSt.equals('')">
            , #{grsEvSt}
        </if>
        , #{cfrnAtdtCdTxt}
        , #{commTxt}
        , #{grsEvSn}
        , #{attcFilId}
        , #{reqSabun}
        , GETDATE()
        , GETDATE()
        , #{userId}
        , GETDATE()
        , #{userId}
        ,dropYn
        , (SELECT sa_name FROM IRIS_SSO_USER X WHERE X.SA_SABUN_NEW = #{dlbrCrgr})
        )
        WHEN MATCHED THEN
        UPDATE
        SET EV_TITL = #{evTitl}
        , DLBR_CRGR = #{dlbrCrgr}
        <if test="dlbrParrDt != null and !dlbrParrDt.equals('')">
        , DLBR_PARR_DT = #{dlbrParrDt}
        </if>
        <if test="grsEvSt != null and !grsEvSt.equals('')">
            , GRS_EV_ST = #{grsEvSt}
        </if>
        , CFRN_ATDT_CD_TXT = #{cfrnAtdtCdTxt}
        , COMM_TXT = #{commTxt}
        , GRS_EV_SN = #{grsEvSn}
        , ATTC_FIL_ID = #{attcFilId}
        , LAST_MDFY_DT = GETDATE()
        , LAST_MDFY_ID = #{userId}
        , SA_SABUN_NAME = (SELECT sa_name FROM IRIS_SSO_USER X WHERE X.SA_SABUN_NEW = #{dlbrCrgr})
        , DROP_YN = #{dropYn}
        ;
    </update>


    <!-- GRS평가표준결과 저장 -->
    <update id="updateGrsEvStdRslt">
    <![CDATA[
--updateGrsEvStdRslt GRS평가표준결과 저장
        MERGE IRIS_GRS_EV_STD_RSLT_RGST A  /*GRS평가표준결과등록*/
        USING (SELECT
                   #{tssCd}              AS TSS_CD,
                   #{grsEvSn}            AS GRS_EV_SN,
                   #{grsEvSeq}           AS GRS_EV_SEQ,
                   ISNULL(#{tssCdSn}, 0) AS TSS_CD_SN) B
        ON A.TSS_CD = B.TSS_CD
           AND A.TSS_CD_SN = B.TSS_CD_SN
           AND A.GRS_EV_SN = B.GRS_EV_SN
           AND A.GRS_EV_SEQ = B.GRS_EV_SEQ
        WHEN NOT MATCHED THEN
            INSERT
            (TSS_CD       --과제코드
                , TSS_CD_SN
                , GRS_EV_SN    --평가표일련번호
                , GRS_EV_SEQ   --평가SEQ
                , EV_SCR       --평가점수
                , FRST_RGST_DT --최초등록일시
                , FRST_RGST_ID --최초등록자
                , LAST_MDFY_DT --최종수정일시
                , LAST_MDFY_ID --최종수정자
            )
            VALUES
                (#{tssCd}
                    , #{tssCdSn}
                    , #{grsEvSn}
                    , #{grsEvSeq}
                    , CONVERT(numeric(5, 2), CASE WHEN #{evScr} = ''
                    THEN '0'
                                             ELSE #{evScr} END)
                    , GETDATE()
                    , #{userId}
                    , GETDATE()
                    , #{userId}
                )
        WHEN MATCHED THEN
            UPDATE
            SET EV_SCR         = CONVERT(numeric(5, 2), CASE WHEN #{evScr} = ''
                THEN '0'
                                                        ELSE #{evScr} END)
                , LAST_MDFY_DT = GETDATE()
                , LAST_MDFY_ID = #{userId}
        ;
        ]]>
    </update>

    <!-- GRS 평가 완료 메일 정보  -->
    <select id="retrieveGrsMailInfo" resultType="hashmap">
    	<![CDATA[
--retrieveGrsMailInfo GRS 평가 완료 메일 정보
        select
            (select sa_mail
             from IRIS_SSO_USER
             where sa_sabun_new = a.sa_sabun_new)        as saMail,
            b.GRS_EV_ST                                  as grsCd,
            dbo.fn_getComDtlNm('GRS_EV_ST', b.GRS_EV_ST) as grsNm
        from IRIS_TSS_MGMT_MST a
            inner join IRIS_GRS_EV_RSLT_RGST b
                on b.TSS_CD = a.TSS_CD
        where a.tss_cd = #{tssCd}
              and a.tss_st = '102'
              and b.TSS_CD_SN = (select max(TSS_CD_SN)
                                 from IRIS_GRS_EV_RSLT_RGST
                                 where tss_cd = #{tssCd}
        )
        ]]>
    </select>


    <!-- GRS 평가 목록 조회 -->
    <select id="selectGrsList" resultType="hashmap">
        <![CDATA[
/*selectGrsList GRS 평가 목록 조회*/
		SELECT
			TSS_CD AS tssCd,
			WBS_CD AS wbsCd,
			PK_WBS_CD AS pkWbsCd,
			PGS_STEP_CD AS pgsStepCd,
			(SELECT COM_DTL_NM FROM DBO.IRIS_ADM_COM_CD WHERE COM_CD_CD='PGS_STEP_CD' AND GMM.PGS_STEP_CD=COM_DTL_CD) AS pgsStepNm,
			TSS_ST AS tssSt,
			(SELECT COM_DTL_NM FROM DBO.IRIS_ADM_COM_CD WHERE COM_CD_CD='TSS_ST' AND GMM.TSS_ST=COM_DTL_CD) AS tssStNm,
			TSS_NM AS tssNm,
			PRJ_CD AS prjCd,
			PRJ_NM AS prjNm,
			BIZ_DPT_CD AS bizDptCd,
			PROD_G AS prodG,
			TSS_SMRY_TXT AS tssSmryTxt,
			CUST_SQLT AS custSqlt,
			NPROD_SALS_PLN_Y AS nprodSalsPlnY,
			CTY_OT_PLN_M AS ctyOtPlnM,
			TSS_SCN_CD AS tssScnCd,
			(SELECT COM_DTL_NM FROM DBO.IRIS_ADM_COM_CD WHERE COM_CD_CD='TSS_SCN_CD' AND GMM.TSS_SCN_CD=COM_DTL_CD) AS tssScnNm,
			SA_SABUN_CD AS saSabunCd,
			SA_SABUN_NM AS saSabunNm,
			TSS_STRT_DD AS tssStrtDd,
			TSS_FNH_DD AS tssFnhDd,
			TSS_FNH_DD + '~' +  TSS_STRT_DD AS tssDd,
			GRS_YN AS grsYn,
			TSS_ATTR_CD AS tssAttrCd,
			TSS_TYPE AS tssType,
			SMR_SMRY_TXT AS smrSmryTxt,
			SMR_GOAL_TXT AS smrGoalTxt,
			FRST_RGST_DT AS frstRgstDt,
			FRST_RGST_ID AS frstRgstId,
			LAST_MDFY_DT AS lastMdfyDt,
			LAST_MDFY_ID AS lastMdfyId
  		FROM dbo.IRIS_GRS_MGMT_MST GMM
    	]]>
        <where>
            <if test="stssScnCd != null and stssScnCd != 'null' and stssScnCd != ''">
                AND TSS_SCN_CD = #{stssScnCd}
            </if>
            <if test="stssCd != null and stssCd != 'null' and stssCd != ''">
                AND TSS_CD LIKE '%'+#{stssCd}+'%'
            </if>
            <if test="tssCd != null and tssCd != 'null' and tssCd != ''">
                AND TSS_CD = #{tssCd}
            </if>
            <if test="stssNm != null and stssNm != 'null' and stssNm != ''">
                AND TSS_NM LIKE '%'+#{stssNm}+'%'
            </if>
            <if test="sprjNm != null and sprjNm != 'null' and sprjNm != ''">
                AND PRJ_NM LIKE '%'+#{sprjNm}+'%'
            </if>
            <if test="ssaSabunNm != null and ssaSabunNm != 'null' and ssaSabunNm != ''">
                AND SA_SABUN_NM LIKE '%'+#{ssaSabunNm}+'%'
            </if>
        </where>
        ORDER BY FRST_RGST_DT DESC
    </select>

    <select id="selectGrsInfo" resultType="hashmap">
        /*selectGrsInfo grs심의용 기본정보 조회*/
        SELECT m.TSS_CD AS tssCd,
               m.WBS_CD AS wbsCd,
               m.PK_WBS_CD AS pkWbsCd,
               m.PGS_STEP_CD AS pgsStepCd,
               m.TSS_ST AS tssSt,
               m.TSS_SCN_CD AS tssScnCd,
               m.GRS_YN AS grsYn,
               m.TSS_NM AS tssNm,
               m.PRJ_CD AS prjCd,
               isnull(PRJ_NM, dbo.fn_getPrjName(PRJ_CD)) as prjNm,
               m.BIZ_DPT_CD AS bizDptCd,
               m.PROD_G AS prodG,
               m.SA_SABUN_CD AS saSabunCd,
               isnull(m.SA_SABUN_NM,
                      (SELECT u.sa_name
                       FROM IRIS_SSO_USER u
                       WHERE u.sa_sabun_new=m.SA_SABUN_CD
                      )) AS saSabunNm,
               m.TSS_STRT_DD AS tssStrtDd,
               m.TSS_FNH_DD AS tssFnhDd,
               m.CUST_SQLT AS custSqlt,
               m.TSS_ATTR_CD AS tssAttrCd,
               m.TSS_TYPE AS tssType,
               '1' as isEditable
        FROM dbo.IRIS_GRS_MGMT_MST m
        WHERE m.TSS_CD = #{tssCd}
        UNION
        SELECT m.TSS_CD AS tssCd,
               m.WBS_CD AS wbsCd,
               m.PK_WBS_CD AS pkWbsCd,
               m.PGS_STEP_CD AS pgsStepCd,
               m.TSS_ST AS tssSt,
               m.TSS_SCN_CD AS tssScnCd,
               m.GRS_YN AS grsYn,
               m.TSS_NM AS tssNm,
               m.PRJ_CD AS prjCd,
               isnull(PRJ_NM, dbo.fn_getPrjName(PRJ_CD)) as prjNm,
               m.BIZ_DPT_CD AS bizDptCd,
               m.PROD_G AS prodG,
               m.SA_SABUN_NEW AS saSabunCd,
               isnull(m.SA_SABUN_NAME,
                      (SELECT u.sa_name
                       FROM IRIS_SSO_USER u
                       WHERE u.sa_sabun_new = m.SA_SABUN_NEW
                      )) AS saSabunNm,
               m.TSS_STRT_DD AS tssStrtDd,
               m.TSS_FNH_DD AS tssFnhDd,
               m.CUST_SQLT AS custSqlt,
               m.TSS_ATTR_CD AS tssAttrCd,
               m.TSS_TYPE AS tssType,
               '0' as isEditable
        FROM dbo.IRIS_TSS_MGMT_MST m
        WHERE m.TSS_CD = #{tssCd}
    </select >

    <!-- GRS 기본 정보 등록/수정 -->
    <insert id="updateGrsInfo">
        <![CDATA[
/*updateGrsInfo GRS 기본 정보 등록/수정*/
MERGE INTO dbo.IRIS_GRS_MGMT_MST tbl
    USING (SELECT #{tssCd} AS TSS_CD) src
    ON (tbl.TSS_CD = src.TSS_CD)
    WHEN NOT MATCHED THEN
        ]]>
        <selectKey keyProperty="newTssCd" resultType="String" order="BEFORE">
            <![CDATA[
            SELECT #{pkWbsCd} + REPLICATE('0', 4 - LEN(COUNT(X.TSS_CD)+1)) + CAST(COUNT(X.TSS_CD) + 1 AS NVARCHAR(4))
              FROM dbo.IRIS_GRS_MGMT_MST X
             WHERE X.PK_WBS_CD = #{pkWbsCd}
        ]]>
        </selectKey>
        <![CDATA[
		INSERT
		       (
	           TSS_CD,
	           WBS_CD,
	           PK_WBS_CD,
	           PGS_STEP_CD,
	           TSS_ST,
	           TSS_SCN_CD,
	           GRS_YN,
	           TSS_NM,
	           PRJ_CD,
	           PRJ_NM,
	           DEPT_CD,
	           BIZ_DPT_CD,
	           PROD_G,
	           SA_SABUN_CD,
	           SA_SABUN_NM,
	           TSS_STRT_DD,
	           TSS_FNH_DD,
	           CUST_SQLT,
	           TSS_SMRY_TXT,
	           TSS_ATTR_CD,
	           TSS_TYPE,
	           SMR_SMRY_TXT,
	           SMR_GOAL_TXT,
	           NPROD_SALS_PLN_Y,
	           CTY_OT_PLN_M,
	           FRST_RGST_DT,
	           FRST_RGST_ID,
	           LAST_MDFY_DT,
	           LAST_MDFY_ID
		       )VALUES(
				#{newTssCd},
				#{wbsCd},
				#{pkWbsCd},
				#{pgsStepCd},
				#{tssSt},
				#{tssScnCd},
				#{grsYn},
				#{tssNm},
				#{prjCd},
				#{prjNm},
				#{deptCode},
				#{bizDptCd},
				#{prodG},
				#{saSabunCd},
				#{saSabunNm},
				#{tssStrtDd},
				#{tssFnhDd},
				#{custSqlt},
				#{tssSmryTxt},
	           #{tssAttrCd},
	           #{tssType},
	           #{smrSmryTxt},
	           #{smrGoalTxt},
	           cast(#{nprodSalsPlnY} as FLOAT),
				#{ctyOtPlnM},
				GETDATE(),
				#{_userId},
				GETDATE(),
				#{_userId}
		       )
    WHEN MATCHED THEN
        UPDATE SET
				GRS_YN = #{grsYn},
				TSS_NM = #{tssNm},
				PRJ_CD = #{prjCd},
				PRJ_NM = #{prjNm},
				DEPT_CD = #{deptCode},
				BIZ_DPT_CD = #{bizDptCd},
				PROD_G = #{prodG},
				SA_SABUN_CD = #{saSabunCd},
				SA_SABUN_NM = #{saSabunNm},
				TSS_STRT_DD = #{tssStrtDd},
				TSS_FNH_DD = #{tssFnhDd},
				CUST_SQLT = #{custSqlt},
				TSS_SMRY_TXT = #{tssSmryTxt},
				TSS_ATTR_CD = #{tssAttrCd},
				TSS_TYPE = #{tssType},
				SMR_SMRY_TXT = #{smrSmryTxt},
				SMR_GOAL_TXT = #{smrGoalTxt},
				NPROD_SALS_PLN_Y = cast(#{nprodSalsPlnY} as FLOAT),
				CTY_OT_PLN_M = #{ctyOtPlnM},
	           LAST_MDFY_DT = GETDATE(),
	           LAST_MDFY_ID = #{_userId}
    ;
    	]]>
    </insert>


    <!-- GRS 기본 정보 마스터로 이관 -->
    <insert id="moveGrsDefInfo">
        /*moveGrsDefInfo GRS 기본 정보 마스터로 이관*/
        INSERT
        INTO IRIS_TSS_MGMT_MST
        (
            TSS_CD ,
            WBS_CD ,
            PK_WBS_CD ,
            PGS_STEP_CD ,
            TSS_ST ,
            TSS_SCN_CD ,
            DEPT_CODE ,
            TSS_NM ,
            PRJ_CD ,
            PRJ_NM ,
            BIZ_DPT_CD ,
            PROD_G ,
            SA_SABUN_NEW ,
            SA_SABUN_NAME ,
            TSS_STRT_DD ,
            TSS_FNH_DD ,
            CUST_SQLT ,
            TSS_NOS_ST,
            TSS_SMRY_TXT ,
            TSS_ATTR_CD ,
            TSS_TYPE ,
            FRST_RGST_DT ,
            FRST_RGST_ID ,
            LAST_MDFY_DT ,
            LAST_MDFY_ID,
            GRS_YN
        )
            SELECT #{tssCd} ,
                g.WBS_CD ,
                g.PK_WBS_CD ,
                #{pgsStepCd} ,
                g.TSS_ST ,
                g.TSS_SCN_CD ,
                (SELECT dbo.fn_getUpperDeptCd(DEPT_CD)
                 FROM IRIS_PRJ_RSST_MST p
                 WHERE PRJ_CD=g.PRJ_CD
                ) as DEPT_CODE ,
                g.TSS_NM ,
                g.PRJ_CD ,
                g.PRJ_NM ,
                g.BIZ_DPT_CD ,
                g.PROD_G ,
                g.SA_SABUN_CD ,
                g.SA_SABUN_NM ,
                g.TSS_STRT_DD ,
                g.TSS_FNH_DD ,
                g.CUST_SQLT ,
                #{tssNosSt},
                g.TSS_SMRY_TXT ,
                g.TSS_ATTR_CD ,
                g.TSS_TYPE ,
                g.FRST_RGST_DT ,
                g.FRST_RGST_ID ,
                g.LAST_MDFY_DT ,
                g.LAST_MDFY_ID,
                g.GRS_YN
            FROM IRIS_GRS_MGMT_MST g
            WHERE g.TSS_CD = #{fromTssCd}
    </insert>

    <!-- GRS 기본 정보 마스터로 이관 -->
    <update id="updateGrsDefInfo02">
        UPDATE IRIS_TSS_MGMT_MST
        SET
            PPSL_MBD_CD = #{ppslMbdCd}
            , RSST_SPHE = #{rsstSphe}
        WHERE TSS_CD = #{tssCd}
    </update>

    <!-- GRS 기본 정보 개요 마스터 생성 -->
    <insert id="moveGrsDefSmry">
        /*moveGrsDefSmry GRS 기본 정보 개요 마스터 생성*/
        <choose>
            <when test='tssScnCd=="G"'>
                /*일반*/
                INSERT
                INTO IRIS_TSS_GEN_SMRY
                (
                TSS_CD ,
                SMR_SMRY_TXT,
                SMR_GOAL_TXT,
                NPROD_SALS_PLN_Y,
                CTY_OT_PLN_M,
                FRST_RGST_DT ,
                FRST_RGST_ID ,
                LAST_MDFY_DT ,
                LAST_MDFY_ID
                )
                VALUES
                (
                #{tssCd}
                ,#{smrSmryTxt}
                ,#{smrGoalTxt}
                ,cast(#{nprodSalsPlnY} as FLOAT)
                ,#{ctyOtPlnM}
                , GETDATE()
                , #{userId}
                , GETDATE()
                , #{userId}
                )
            </when>
            <when test='tssScnCd=="O"'>
                /*대외*/
                INSERT
                INTO IRIS_TSS_OUSD_COO_SMRY
                (
                TSS_CD ,
                FRST_RGST_DT ,
                FRST_RGST_ID ,
                LAST_MDFY_DT ,
                LAST_MDFY_ID
                )
                VALUES
                (
                #{tssCd}
                , GETDATE()
                , #{userId}
                , GETDATE()
                , #{userId}
                )
            </when>
            <when test='tssScnCd=="N"'>
                /*국책*/
                INSERT
                INTO IRIS_TSS_NAT_PLCY_SMRY
                (
                TSS_CD ,
                TTL_CRRO_STRT_DT ,
                TTL_CRRO_FNH_DT ,
                FRST_RGST_DT ,
                FRST_RGST_ID ,
                LAST_MDFY_DT ,
                LAST_MDFY_ID
                )
                VALUES
                (
                #{tssCd}
                , #{tssStrtDd}
                , #{tssFnhDd}
                , GETDATE()
                , #{userId}
                , GETDATE()
                , #{userId}
                )
            </when>
            <when test='tssScnCd=="D"'>
                /*기술*/
                INSERT
                INTO IRIS_TSS_TCTM_SMRY
                (
                TSS_CD ,
                SMR_SMRY_TXT,
                SMR_GOAL_TXT,
                NPROD_SALS_PLN_Y,
                CTY_OT_PLN_M,
                FRST_RGST_DT ,
                FRST_RGST_ID ,
                LAST_MDFY_DT ,
                LAST_MDFY_ID
                )
                VALUES
                (
                #{tssCd}
                ,#{smrSmryTxt}
                ,#{smrGoalTxt}
                ,cast(#{nprodSalsPlnY} as FLOAT)
                ,#{ctyOtPlnM}
                , GETDATE()
                , #{userId}
                , GETDATE()
                , #{userId}
                )
            </when>

        </choose>
    </insert>



    <!-- GRS 기본 정보 삭제 -->
    <delete id="deleteDefInfo">
	    <![CDATA[
/* deleteDefInfo GRS 기본 정보 삭제*/
        DELETE FROM dbo.IRIS_GRS_MGMT_MST
        WHERE TSS_CD = #{tssCd};
        ]]>
    </delete>
    <delete id="deleteGrsInfo">
	    <![CDATA[
/* deleteDefInfo GRS 기본 정보 삭제*/
        DELETE FROM dbo.IRIS_GRS_EV_RSLT_RGST
        WHERE TSS_CD = #{tssCd};
        ]]>
    </delete>


    <!-- 마스터 과제상태 수정 -->
    <update id="updateDefTssSt">
    <![CDATA[
        /*updateDefTssSt  GRS기본정보 마스터 GRS상태 수정*/
        UPDATE IRIS_GRS_MGMT_MST
        SET TSS_ST       = #{tssSt}
            , LAST_MDFY_DT = GETDATE()
            , LAST_MDFY_ID = #{userId}
        WHERE TSS_CD = #{tssCd}
        ]]>
	</update>

    
        <!-- GRS 품의요청 내역 조회 -->
    <select id="retrieveGrsApproval" resultType="hashmap">
		<![CDATA[
--retrieveGrsApproval GRS 품의요청 내역 조회
        SELECT
            A.PRJ_CD         AS prjCd      --프로젝트코드
            ,
            C.PRJ_NM         AS prjNm      --프로젝트명
            ,
            A.TSS_CD         AS tssCd      --과제코드
            ,
            A.TSS_NM         AS tssNm      --과제명
            ,
            ISNULL(A.SA_SABUN_NAME, (select  u.sa_name from IRIS_SSO_USER u where u.sa_sabun_new=A.SA_SABUN_NEW)) as saSabunName  -- 과제책임자
            ,
            ISNULL(A.TSS_TYPE,'')       AS tssType    -- 개발유형
            ,
            B.EV_TITL        AS evTitl     --일시, 장소
		    , 
		    B.grs_ev_st	     AS grsEvSt	--P1:초기,P2:최종,M:변경      심의단계
		    , 
		    dbo.fn_getComDtlNm('GRS_EV_ST',B.grs_ev_st)   AS grsEvStNm     -- 심의단계명
            ,
            (select stuff((select ',' +
                                  sa_name
                           from IRIS_SSO_USER
                           where sa_sabun_new in (SELECT value
                                                  FROM STRING_SPLIT(convert(nvarchar(4000), B.CFRN_ATDT_CD_TXT), ',')
                                                  WHERE RTRIM(value) <> '')
                           order by sa_name
                           FOR XML PATH ('')), 1, 1, '')) AS cfrnAtdtCdTxtNm --참석자
            ,
            B.COMM_TXT       AS commTxt            --주요 Comment
            ,
            B.ATTC_FIL_ID    AS attcFilId        --첨부파일
            ,
            (SELECT CONVERT(DECIMAL(3,1),ROUND(avg(srr.EV_SCR),1),2)
             FROM iris_grs_ev_std_rslt_rgst srr,
                  IRIS_GRS_EV_STD_MGMT sm
             WHERE sm.GRS_EV_SN = srr.GRS_EV_SN
                   AND sm.GRS_EV_SEQ = srr.GRS_EV_SEQ
                   AND srr.TSS_CD =  A.TSS_CD /**P*/
                   AND srr.tss_cd_sn =  '1' /**P*/) AS evScr    --등급평균
        FROM IRIS_TSS_MGMT_MST A  /*과제관리마스터*/
            left JOIN IRIS_PRJ_RSST_MST C  /*프로젝트연구마스터*/
                ON A.PRJ_CD = C.PRJ_CD
            LEFT JOIN IRIS_GRS_EV_RSLT_RGST B  /*GRS평가결과등록1*/
                ON A.TSS_CD = B.TSS_CD
                   AND B.TSS_CD_SN = (SELECT MAX(TSS_CD_SN) 
                                      FROM IRIS_GRS_EV_RSLT_RGST
                                      WHERE TSS_CD = A.TSS_CD)
        ]]>
       WHERE A.TSS_CD IN
	        <foreach collection="tssCdList" index="index" item="item" separator="," open="(" close=")">
            	'${tssCdList[index]}'
        	</foreach>

	</select>
	
	<update id="updateApprGuid">
	-- IRIS_TSS_MGMT_MST
		update	IRIS_TSS_MGMT_MST
		set		GUID = #{guid}
		where	TSS_CD IN
	        <foreach collection="tssCdList" index="index" item="item" separator="," open="(" close=")">
            	'${tssCdList[index]}'
        	</foreach>

	</update>
	
	<select id="getGuid" resultType="String">
                <![CDATA[
            SELECT 'H'
			     + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 3, 6)
			     + REPLICATE('0', 4 - LEN(CONVERT(VARCHAR, ISNULL(MAX(CONVERT(INT, SUBSTRING(X.GUID, 8, 4))), 0) + 1)))
			     + CONVERT(VARCHAR, ISNULL(MAX(CONVERT(INT, SUBSTRING(X.GUID, 8, 4))), 0) + 1)
			  FROM IRIS_COM_ITG_RDCS X
			 WHERE SUBSTRING(X.GUID, 1, 7) = 'H' + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112), 3, 6)
        ]]>
    </select>
    
       <update id="updateGrsDecode">
    	update IRIS_GRS_EV_RSLT_RGST
		set    EV_TITL = #{evTitl}
		      ,COMM_TXT = #{commTxt}
		where  tss_cd = #{tssCd}
		and    TSS_CD_SN = #{tssCdSn}
    </update>
    
    <select id="retrieveGrsDecodeList"  resultType="hashmap">
    	select  '0' as chk
    	      , tss_cd   as tssCd
		      ,tss_cd_sn as tssCdSn
			  ,isnull(EV_TITL, '') as evTitl 
			  ,isnull(COMM_TXT, '')  as commTxt
		from   IRIS_GRS_EV_RSLT_RGST
		 <![CDATA[
        where  ( COMM_TXT <> '' or  COMM_TXT is not null)
        ]]>
        order by frst_rgst_dt desc
    </select>
</mapper>